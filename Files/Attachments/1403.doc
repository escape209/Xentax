;------------------------------------------------------------------------------
;                       The .god file for T4
;------------------------------------------------------------------------------
;
;   Refer to Main.god for an overview of the .god files.
;   
;------------------------------------------------------------------------------

#include "Gods\Path.god"
#include "Gods\PathNode.god"

#include "Gods\NavigationLink.god"
#include "Gods\NavigationNode.god"

#include "Gods\Materials.god"

#include    "Gods\Shared\Causes.god"            ;   The shared causes
#include    "Gods\Shared\Events.god"            ;   The shared events
#include    "Gods\Shared\LinkConditionals.god"  ;   The shared link conditionals.
#include    "Gods\Causes.god"                   ;   The game-specific causes
#include    "Gods\Events.god"                   ;   The game-specific events
#include    "Gods\Conditionals.god"             ;   The game-specific conditionals

#include    "Gods\Collision.god"

#include "Gods\Mode.god"

#include "Gods\Shared\Actors.god"
#include "Gods\Shared\Cameras.god"

#include "Gods\FaceFlags.god"

;------------------------------------------------------------------------------
; Base AI
;------------------------------------------------------------------------------
*OBJECT = "TurokAIObject"
{
	*NAME	= "TurokAI"
	*INHERITS = "Object"

	*VARIABLES = 
	{
		*Combo = "TurokAIType"
		{
			*Usage			= "Protected"
			*DisplayName	=	"Turok AI Type"
			*Value			=	0
			*Comment		=	"The Turok AI type."

			*ComboList = 
			{
				"0 - None",
				"1 - Enemy",
				"2 - Player",
				"3 - Ally",
				"4 - Neutral Aggressive",
				"5 - Passive Aggressive",
				"6 - Passive Neutral"				
			}
		}

		*FLOAT = "VisionEyeHeight"
		{
			*Usage			= "Protected"
			*VALUE	= 1
			*DISPLAYNAME = "Vision Eye Height"
			*Comment = "Eye Height for vision test"
		}

		*FLOAT = "ShallowWaterHeight"
		{
			*Usage			= "Protected"
			*VALUE	= 1
			*DISPLAYNAME = "Shallow Water Height"
			*Comment = "The height at which ai is considered in shallow water"
		}

		*FLOAT = "AimAtHeight"
		{
			*Usage			= "Protected"
			*VALUE	= 1.0f
			*DISPLAYNAME = "Aim At Height"
			*Comment = "The height at which to aim at this AI"
		}

		*FLOAT = "AIRadius"
		{
			*Usage			= "Protected"
			*VALUE			= 0.5f
			*DISPLAYNAME	= "AI Radius"
			*Comment		= "The radius size of this AI"
		}

		*FLOAT = "FDMult"
		{
			*VALUE	= 1.0f
			*DISPLAYNAME = "Fire Damage Multiplier"
			*Min		 = 0.0
			*Comment = "1.0 is normal"
			*Comment = "0.0 is impervious to fire"
		}

		*Combo = "LTarg"
		{
			*DisplayName	=	"Lockable target?"
			*Value		=	0 
			*ComboList	=
			{
				"Nope",
				"Regular",
				"Primary"
			}
		}

		*FLOAT = "PointValue"
		{
			*Usage			= "Public"
			*VALUE			= 0.0f
			*DISPLAYNAME	= "Point Value"
			*Comment		= "The value of this Object. Can be used for scoring etc."
		}

		*BOOL = "IgnoreNav"
		{
			*Usage			= "Protected"
			*VALUE	= 0
			*DISPLAYNAME = "Ignore Nav Data"
			*Comment = "Ignore Nav Data"
		}


		*Group = "Multiplayer Scaling"
		{
			*BOOL = "MPSOnOff"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Enable"
				*Comment = "Use multiplayer scaling on this actor?"
			}
		
			*FLOAT = "MPSFar"
			{
				*VALUE	= 100.0f
				*DISPLAYNAME = "Far distance"
				*Comment = "The distance away from the view"
				*Comment = "that the scale will start."
			}

			*FLOAT = "MPSMid"
			{
				*VALUE	= 50
				*DISPLAYNAME = "Mid distance"
				*Comment = "The distance away from the view"
				*Comment = "that the scale will be biggest."
			}

			*FLOAT = "MPSNea"
			{
				*VALUE	= 10
				*DISPLAYNAME = "Near distance"
				*Comment = "The distance away from the view"
				*Comment = "that the scale will be back to normal."
			}

			*FLOAT = "MPSSca"
			{
				*VALUE	= 10.0f
				*DISPLAYNAME = "Scale multiplier"
				*Comment = "Mid distance scale."
			}
			
		}

		*Group = "Accessories"
		{
			*Comment = "Attached items"

			*FilePick = "AccessoryName1"
			{
				*DISPLAYNAME = "Accessory1"
				*Value			=	""
				*Directory      =   "$\Data\Actors"
				*Extension      =   "atr"
			}
			*String = "AccessoryPoint1"
			{
				*DisplayName	=	"Hotpoint1"
				*Value			=	""
				*Comment		=	"The hotpoint to attach the accessory to"
			}

			*FilePick = "AccessoryName2"
			{
				*DISPLAYNAME = "Accessory2"
				*Value			=	""
				*Directory      =   "$\Data\Actors"
				*Extension      =   "atr"
			}
			*String = "AccessoryPoint2"
			{
				*DisplayName	=	"Hotpoint2"
				*Value			=	""
				*Comment		=	"The hotpoint to attach the accessory to"
			}

			*FilePick = "AccessoryName3"
			{
				*DISPLAYNAME = "Accessory3"
				*Value			=	""
				*Directory      =   "$\Data\Actors"
				*Extension      =   "atr"
			}
			*String = "AccessoryPoint3"
			{
				*DisplayName	=	"Hotpoint3"
				*Value			=	""
				*Comment		=	"The hotpoint to attach the accessory to"
			}

		}

		*Group = "Path Speed Match"
		{
			*Comment = "Path Speed Match"

			*BOOL = "PSMONOFF"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Enable"
				*Comment = "Should this actor speed match with the player?"
			}

			*FLOAT = "PSMPOS"
			{
				*VALUE	= 30.0f
				*DISPLAYNAME = "Infont/Behind position (meters)"
				*Comment = "Offset that this actor will stay compared to the player. "
				*Comment = "i.e."
				*Comment = "If this value is 10.0f then this actor will try and stay 10 meters ahead of the player."
				*Comment = "If this value is -20.0f then this actor will try and stay 20 meters behind the player."
			}

			*FLOAT = "PSMACCEL"
			{
				*VALUE	= 0.15f
				*MIN	= 0.0f
				*DISPLAYNAME = "Accel"
				*Comment = "Rate at which this actor will accelerate to match get into position."
			}

			*FLOAT = "PSMDECEL"
			{
				*VALUE	= 0.15f
				*MIN	= 0.0f
				*DISPLAYNAME = "Decel"
				*Comment = "Rate at which this actor will Decelerate to match get into position."
			}
		}
	}
}


*OBJECT = "Rocket1Actor"
{
	*NAME = "Rocket1Actor"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"
	*Variables	= 
	{
	        *FilePick           =   "ShellName"
        	{
	            *DisplayName    =   "Shell Name"
        	    *Value          =   ""
	            *Directory      =   "$\Data\Particle\"
        	    *Extension      =   "par"
	            *Extension      =   "eff"
			*Comment		=	"The particle used for the basic ordinance shell."
	        }
	        *FilePick           =   "ExplosionName"
        	{
	            *DisplayName    =   "Explosion Name"
        	    *Value          =   ""
	            *Directory      =   "$\Data\Particle\"
	            *Extension      =   "par"
	            *Extension      =   "eff"
			*Comment		=	"The particle used for the collision explosion."
	        }
	        *FilePick           =   "BallisticName"
        	{
			*DisplayName    =   "Ballistic Name"
			*Value          =   ""
			*Directory      =   "$\Data\Particle\"
			*Extension      =   "par"
			*Extension      =   "eff"
			*Comment		=	"The particle used for the travelling rocket."
	        }
		*Float		= "Speed"
		{
			*Value 		= 0.3f
			*DISPLAYNAME	= "Rocket Speed"
			*Comment	= "Velocity that the Rocket uses."
		}
		*Float		= "MaxTurn"
		{
			*Value 		= 0.2f
			*DISPLAYNAME	= "Max Turn Rate"
			*Comment	= "Maximum angle percentage a rocket can turn per update."
			*Comment	= "(1.0 == aim right at enemy . . . 0.0 == never turn his way)"
		}
	}
}

*OBJECT = "Rocket2Actor"
{
	*NAME = "Rocket2Actor"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"
}

*OBJECT = "Rocket3Actor"
{
	*NAME = "Rocket3Actor"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"

	*Variables	= 
	{
	        *FilePick           =   "ExplosionName"
        	{
			*DisplayName    =   "Explosion Name"
			*Value          =   ""
			*Directory      =   "$\Data\Particle\"
			*Extension      =   "par"
			*Extension      =   "eff"
			*Comment		=	"The particle used for the SwarmBore Explosion."
	        }
	        *FilePick           =   "BoreActorName"
        	{
			*DisplayName    =   "Bore Actor Name"
			*Value          =   ""
			*Directory      =   "$\Data\Actors\"
			*Extension      =   "atr"
			*Comment		=	"The actor used to control the swarm bore."
	        }
		*Float		= "Speed"
		{
			*Value 		= 0.3f
			*DISPLAYNAME	= "Rocket Speed"
			*Comment	= "Velocity that the Rocket uses."
		}
		*Float		= "MaxTurn"
		{
			*Value 		= 0.2f
			*DISPLAYNAME	= "Max Turn Rate"
			*Comment	= "Maximum angle percentage a rocket can turn per update."
			*Comment	= "(1.0 == aim right at enemy . . . 0.0 == never turn his way)"
		}
	}
}

*OBJECT = "SwarmBore"
{
	*NAME = "SwarmBore"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"

	*Variables	= 
	{
	        *FilePick           =   "FlareParticle"
        	{
			*DisplayName    =   "Flare Particle Name"
			*Value          =   ""
			*Directory      =   "$\Data\Particle\"
			*Extension      =   "par"
			*Extension      =   "eff"
			*Comment		=	"The particle used for the travelling SwarmBore."
	        }
		*Float		= "Speed"
		{
			*Value 		= 0.3f
			*DISPLAYNAME	= "Rocket Speed"
			*Comment	= "Velocity that the Rocket uses."
		}
		*Float		= "MaxTurn"
		{
			*Value 		= 0.2f
			*DISPLAYNAME	= "Max Turn Rate"
			*Comment	= "Maximum angle percentage a rocket can turn per update."
			*Comment	= "(1.0 == aim right at enemy . . . 0.0 == never turn his way)"
		}
	}
}

*OBJECT = "SmartBullet"
{
	*NAME = "SmartBullet"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"

	*Variables	= 
	{
		*Float		= "Speed"
		{
			*Value 		= 0.3f
			*DISPLAYNAME	= "Rocket Speed"
			*Comment	= "Velocity that the Rocket uses."
		}
		*Float		= "MaxTurn"
		{
			*Value 		= 0.2f
			*DISPLAYNAME	= "Max Turn Rate"
			*Comment	= "Maximum angle percentage a rocket can turn per update."
			*Comment	= "(1.0 == aim right at enemy . . . 0.0 == never turn his way)"
		}
	}
}


*OBJECT = "WeaponWheelMesh"
{
	*NAME = "WeaponWheelMesh"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"
}



*OBJECT = "RocketPteranadonActor"
{
	*NAME = "RocketPteranadon"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"
}

*OBJECT = "SkyObject"
{
	*NAME = "Sky"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"

	*Group = "Location Offset"
	{
		*FLOAT = "X"
		{
			*VALUE	= 0
			*MIN	= -100000000000
			*DISPLAYNAME = "X"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Offset for sky sphere based on TalSet's eyeheight."
		}
		*FLOAT = "Y"
		{
			*VALUE	= 0
			*MIN	= -100000000000
			*DISPLAYNAME = "Y"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Offset for sky sphere based on TalSet's eyeheight."
		}
		*FLOAT = "Z"
		{
			*VALUE	= 0
			*MIN	= -100000000000
			*DISPLAYNAME = "Z"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Offset for sky sphere based on TalSet's eyeheight."
		}
	}
}

*OBJECT = "Lock2DObject"
{
	*NAME = "Lock2D"
	*INHERITS = "Actor"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"

	*Group = "Location"
	{
		*FLOAT = "X"
		{
			*VALUE	= 0
			*MIN	= 0
			*DISPLAYNAME = "X"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Location for TalSet to always stand in."
		}
		*FLOAT = "Y"
		{
			*VALUE	= 0
			*MIN	= 0
			*DISPLAYNAME = "Y"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Location for TalSet to always stand in."
		}
		*FLOAT = "Z"
		{
			*VALUE	= 0
			*MIN	= 0
			*DISPLAYNAME = "Z"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Location for TalSet to always stand in."
		}
	}
	*Group = "Direction"
	{
		*FLOAT = "Pitch"
		{
			*VALUE	= 0
			*MIN	= 0
			*DISPLAYNAME = "Pitch"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Direction TalSet will always face."
		}
		*FLOAT = "Yaw"
		{
			*VALUE	= 0
			*MIN	= 0
			*DISPLAYNAME = "Yaw"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Direction TalSet will always face."
		}
		*FLOAT = "Roll"
		{
			*VALUE	= 0
			*MIN	= 0
			*DISPLAYNAME = "Roll"
			*DISPLAYASDISC = "255,0,0"
			*Comment = "Direction TalSet will always face."
		}
	}
}


;------------------------------------------------------------------------------
; Enemy AI
;------------------------------------------------------------------------------
*OBJECT = "EnemyAIObject"
{
	*NAME	= "EnemyAI"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		CrouchIdle,
		ProneIdle,
		RotateLeft,
		RotateRight,
		AlertRotateLeft,
		AlertRotateRight,
		StandingSleep,
		Walk,
		AlertWalk,
		CrouchWalk,
		ProneCrawl,
		Run,
		AlertRun,
		FireRun,
		FireStarter,
		FireDeath,
		Fall,
		ExaggeratedFall,
		FallDeath,
		Jump,
		Climb,
		ClimbEnd,
		HangClimb,
		Damaged,
		Death,
		PoisonDamage,
		PoisonDeath,
		ExplosionDeath,
		ExplosionDamage,
		ImplodeDeath,
		GravityHeld,
		Attack,
		SecondAttack,
		ThirdAttack,
		FourthAttack,
		FifthAttack,
		CrouchAttack,
		ProneAttack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim,
		SwimmingAttack,
		SquatIdle,
		Taunt,
		Talk,
		Special1,
		Special2,
		Special3,
		Special4
	}

	*VARIABLES = 
	{

		*Group = "Detection"
		{
			*Comment = "Sight, sound and smell detection parameters."

			*BOOL = "IGNOREPLAYER"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Ignore Player?"
				*Comment = "No detection.  Ignores player."
			}

			*BOOL = "ProvokeOnly"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Respond Only To Provoked"
				*Comment = "AI only selects a target when attacked by it."
			}

			*BOOL = "CONEVISION"
			{
				*VALUE	= "True"
				*DISPLAYNAME = "Cone Vision?"
				*Comment = "True for forward cone sight."
				*Comment = "False for 360 degree sight."
			}

		
			*FLOAT = "SIGHTRADIUS"
			{
				*VALUE	= 20
				*MIN	= 0
				*DISPLAYNAME = "Sight Radius"
				*DISPLAYASDISC = "255,0,0"
				*Comment = "Distance the AI can see."
			}

			*FLOAT = "SXZAngle"
			{
				*VALUE	= 90
				*MIN	= 0
				*DISPLAYNAME = "Cone XZ Angle"
				*Comment = "XZ Angle for cone vision."
			}

			*FLOAT = "SYAngle"
			{
				*VALUE	= 45
				*MIN	= 0
				*DISPLAYNAME = "Cone Y Angle"
				*Comment = "Y Angle for cone vision."
			}

			*FLOAT = "SOUNDRADIUS"
			{
				*VALUE	= 30
				*MIN	= 0
				*DISPLAYNAME = "Sound Radius"
				*DISPLAYASDISC = "205,120,30"
				*Comment = "Distance the AI can hear."
			}

			*FLOAT = "LostContactResetTime"
			{
				*VALUE			= -1.0
				*DISPLAYNAME	= "Lost Contact Reset Time"
			}

			*BOOL = "IgnAlBox"
			{
				*VALUE	= "false"
				*DISPLAYNAME = "Ignore Alarm Boxes?"
				*Comment = "True - ignores alarms"
				*Comment = "False - responds to alarms."
			}

			*BOOL = "OnlyPTarget"
			{
				*VALUE	= "false"
				*DISPLAYNAME = "Only Player Target"
				*Comment = "True - The player is the only actor that will be considered for targetting"
				*Comment = "False - Or not."
			}


			*BOOL = "HasPTarget"
			{
				*VALUE	= "false"
				*DISPLAYNAME = "Always Detects Player"
				*Comment = "True - Always detects player as a target, even if it can't normally detect him"
				*Comment = "False - Or not."
			}

			*BOOL = "HasSTarget"
			{
				*VALUE	= "false"
				*DISPLAYNAME = "Shooter is Target"
				*Comment = "True - Has shooter as a target, even if it can't normally detect him"
				*Comment = "False - Or not."
			}

		}

		*Group = "Movement"
		{
			*Comment = "Movement parameters."

			*FLOAT = "MovementSpeed"
			{
				*VALUE	= 2.2
				*MIN	= 0
				*DISPLAYNAME = "Movement Speed"
				*Comment = "Running Movement speed in m/s."
			}

			*FLOAT = "SlowMovementSpeed"
			{
				*VALUE	= 1.0
				*MIN	= 0
				*DISPLAYNAME = "Slow Movement Speed"
				*Comment = "Walking Movement speed in m/s."
			}

			*FLOAT = "TurningSpeed"
			{
				*VALUE	= 180
				*MIN	= 0
				*DISPLAYNAME = "Turning Speed"
				*Comment = "Turning speed in degrees/s."
			}

			*FLOAT = "PitchSpeed"
			{
				*VALUE	= 180
				*MIN	= 0
				*DISPLAYNAME = "Pitch Speed"
				*Comment = "Pitch speed in degrees/s."
			}

			*BOOL = "SlowTurn"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Slow Moving Turn?"
			}

			*BOOL = "AlwaysRun"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Always Run?"
			}

			*BOOL = "AlwaysWalk"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Always Walk?"
			}

			*BOOL = "CanCrawl"
			{
				*Usage			= "Protected"
				*VALUE	= "False"
				*DISPLAYNAME = "Can Crawl?"
				*Comment = "True if AI can use crawl links."
			}

			*BOOL = "DFTurrets"
			{
				*VALUE	= "false"
				*DISPLAYNAME = "Drop for Turrets?"
				*Comment = "True - drops to avoid turrets"
				*Comment = "False - dont drop for turrets."
			}

			*BOOL = "AIAvoid"
			{
				*VALUE	= "True"
				*DISPLAYNAME = "AI Avoidance?"
			}

			*BOOL = "CantBePushed"
			{
				*VALUE	= "false"
				*DISPLAYNAME = "Cant Be Pushed"
				*Comment = "True - AI cant be Force pushed"
				*Comment = "False - AI can be pushed."
			}

			*Group = "Climbing"
			{
				*BOOL = "CanClimb"
				{
					*Usage			= "Protected"
					*VALUE	= "False"
					*DISPLAYNAME = "Can Climb?"
					*Comment = "True if AI can scale climbable surfaces."
				}

				*BOOL = "CanMonkeyClimb"
				{
					*VALUE	= "False"
					*DISPLAYNAME = "Can Monkey Climb?"
					*Comment = "True if AI can use monkeybar climbable surfaces."
				}

				*FLOAT = "ClimbEndHeight"
				{
					*Usage			= "Protected"
					*VALUE			= 1.0
					*DISPLAYNAME	= "ClimbEndHeight"
				}
			}

			*Group = "Swimming"
			{
				*BOOL = "CanSwim"
				{
					*Usage			= "Protected"
					*VALUE	= "False"
					*DISPLAYNAME = "Can Swim?"
					*Comment = "True if AI can swim in water."
				}

				*FLOAT = "FastSwimmingSpeed"
				{
					*VALUE	= 3.0
					*MIN	= 0
					*DISPLAYNAME = "Fast Swimming Speed"
					*Comment = "Fast Swimming speed in m/s."
				}

				*FLOAT = "SlowSwimmingSpeed"
				{
					*VALUE	= 1.0
					*MIN	= 0
					*DISPLAYNAME = "Slow Swimming Speed"
					*Comment = "Slow Swimming speed in m/s."
				}
			}

		}

		*Group = "Leash"
		{
			*BOOL = "LEASHED"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Leashed to point?"
				*Comment = "True if AI stays within the leash radius"
				*Comment = "of its creation spot."
			}

			*FLOAT = "LEASHRADIUS"
			{
				*VALUE	= 50
				*MIN	= 0
				*DISPLAYNAME = "Leash Radius"
				*DISPLAYASDISC = "155,30,140"
			}

			*BOOL = "LeashedToRegion"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Leashed to region?"
				*Comment = "True if AI stays within the smallest region "
				*Comment = "surrounding it at creation."
			}

			*BOOL = "RegionTargets"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Ignore Targets?"
				*Comment = "True if AI ignores targets outside its leash"
			}

			*FLOAT = "FleeR"
			{
				*VALUE	= 20
				*MIN	= 0
				*DISPLAYNAME = "Flee Radius"
			}

		}

		*Group = "Cover"
		{

			*FLOAT = "COVERRADIUS"
			{
				*VALUE	= 40
				*MIN	= 0
				*DISPLAYNAME = "Cover Radius"
;				 *DISPLAYASDISC = "155,30,140"
				*Comment = "The max distance the AI will seek out a cover position."
			}

			*Int = "MinCoverShots"
			{
				*VALUE	= 1
				*MIN	= 1
				*DISPLAYNAME = "Min Shots"
			}

			*Int = "MaxCoverShots"
			{
				*VALUE	= 1
				*MIN	= 1
				*DISPLAYNAME = "Max Shots"
			}

			*BOOL = "CUCCover"
			{
				*VALUE	= "true"
				*DISPLAYNAME = "Use Circle Cover"
			}

			*BOOL = "CUUCover"
			{
				*VALUE	= "true"
				*DISPLAYNAME = "Use PopUp Cover"
			}

			*BOOL = "CUOCover"
			{
				*VALUE	= "true"
				*DISPLAYNAME = "Use PopOut Cover"
			}

		}


		*Group = "Logic"
		{
			*Comment = "AI Logic Parameters"

			*INT = "LogicInitialAttackChance"
			{
				*VALUE			= 1
				*MIN			= 0
				*DISPLAYNAME	= "Intial Attack Chance"
			}

			*INT = "LogicAttackChance"
			{
				*VALUE			= 1
				*MIN			= 0
				*DISPLAYNAME	= "Attack Chance"
			}

			*BOOL = "WANTSCOVER"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Seeks Cover?"
				*Comment = "True if AI seeks out cover when threatened."
			}

			*INT = "LogicInitialCoverChance"
			{
				*VALUE			= 0
				*MIN			= 0
				*DISPLAYNAME	= "Initial Cover Chance"
			}

			*INT = "LogicCoverChance"
			{
				*VALUE			= 0
				*MIN			= 0
				*DISPLAYNAME	= "Cover Chance"
			}

			*FLOAT = "BreachRadius"
			{
				*VALUE			= -1.0
				*DISPLAYNAME	= "Breach Radius"
				*Comment		= "Use -1 for no breach"
			}

			*BOOL = "AttackOnBreach"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Attack On Breach"
				*Comment = "True if AI switches to attack when player within the breach radius"
			}

			*FLOAT = "AttackResetTime"
			{
				*VALUE			= -1.0
				*DISPLAYNAME	= "Attack Reset Time"
				*Comment		= "The time in attack mode before a new attack logic is selected."
				*Comment		= "Use -1 for never resetting."
			}

			*FLOAT = "DamageLogicChangeAmount"
			{
				*VALUE			= -1.0
				*DISPLAYNAME	= "Damage Logic Change"
			}

			*FLOAT = "FearfulThreshhold"
			{
				*VALUE			= -1.0
				*DISPLAYNAME	= "Fearful Threshhold"
				*Comment		= "The health level below which the AI will be fearful."
			}

			*FLOAT = "CriticalThreshhold"
			{
				*VALUE			= -1.0
				*DISPLAYNAME	= "Critical Threshhold"
				*Comment		= "The health level below which the AI will sellect critical damage logic."
			}

			*Group = "Critical Logic"
			{
				*INT = "CritNoChange"
				{
					*VALUE			= 1
					*MIN			= 0
					*DISPLAYNAME	= "No Change Chance"
				}

				*INT = "CritFlee"
				{
					*VALUE			= 0
					*MIN			= 0
					*DISPLAYNAME	= "Flee Chance"
				}

				*INT = "CritRetreat"
				{
					*VALUE			= 0
					*MIN			= 0
					*DISPLAYNAME	= "Retreat Chance"
				}

				*INT = "CritKamikaze"
				{
					*VALUE			= 0
					*MIN			= 0
					*DISPLAYNAME	= "Kamikaze Chance"
				}

				*INT = "CritSurrender"
				{
					*VALUE			= 0
					*MIN			= 0
					*DISPLAYNAME	= "Surrender Chance"
				}

				*INT = "CritCover"
				{
					*VALUE			= 0
					*MIN			= 0
					*DISPLAYNAME	= "Cover Chance"
				}

				*INT = "CritProne"
				{
					*VALUE			= 0
					*MIN			= 0
					*DISPLAYNAME	= "Prone Chance"
				}

			}

			*Combo = "SGR"
			{
				*Usage			= "Protected"
				*DisplayName	=	"Sticky Grenade"
				*Value			=	0
				*ComboList		=
				{
					"No Change",
					"Flee",
					"Kamikaze"
				}
			}
		}


		*Group = "Attack"
		{
			*Comment = "Attacking parameters."
						
			*Group = "Primary Attack"
			{
				*FilePick = "WeaponName1"
				{
					*Usage			= "Protected"
					*DISPLAYNAME = "Weapon"
					*Value			=	""
					*Directory      =   "$\Data\Actors\EnemyWeapons"
					*Extension      =   "atr"
				}

				*BOOL = "UsePrimary1"
				{
					*Usage			= "Protected"
					*VALUE	= "True"
					*DISPLAYNAME = "Uses Primary Weapon"
				}

				*String = "WeaponPoint1"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Hotpoint"
					*Value			=	""
					*Comment		=	"The hotpoint to attach the weapon to"
				}

				*FLOAT = "WeaponRange1"
				{
					*Usage			= "Protected"
					*VALUE	= 20
					*MIN	= 0
					*DISPLAYNAME = "Attack Range"
				}
			}

			*Group = "Second Attack"
			{
				*FilePick = "WeaponName2"
				{
					*Usage			= "Protected"
					*DISPLAYNAME = "Weapon"
					*Value			=	""
					*Directory      =   "$\Data\Actors\EnemyWeapons"
					*Extension      =   "atr"
				}

				*BOOL = "UsePrimary2"
				{
					*Usage			= "Protected"
					*VALUE	= "False"
					*DISPLAYNAME = "Uses Primary Weapon"
				}

				*String = "WeaponPoint2"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Hotpoint"
					*Value			=	""
					*Comment		=	"The hotpoint to attach the weapon to"
				}

				*FLOAT = "WeaponRange2"
				{
					*Usage			= "Protected"
					*VALUE	= 20
					*MIN	= 0
					*DISPLAYNAME = "Attack Range"
				}
			}

			*Group = "Third Attack"
			{
				*FilePick = "WeaponName3"
				{
					*Usage			= "Protected"
					*DISPLAYNAME = "Weapon"
					*Value			=	""
					*Directory      =   "$\Data\Actors\EnemyWeapons"
					*Extension      =   "atr"
				}

				*BOOL = "UsePrimary3"
				{
					*Usage			= "Protected"
					*VALUE	= "False"
					*DISPLAYNAME = "Uses Primary Weapon"
				}

				*String = "WeaponPoint3"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Hotpoint"
					*Value			=	""
					*Comment		=	"The hotpoint to attach the weapon to"
				}

				*FLOAT = "WeaponRange3"
				{
					*Usage			= "Protected"
					*VALUE	= 20
					*MIN	= 0
					*DISPLAYNAME = "Attack Range"
				}
			}

			*Group = "Fourth Attack"
			{
				*FilePick = "WeaponName4"
				{
					*Usage			= "Protected"
					*DISPLAYNAME = "Weapon"
					*Value			=	""
					*Directory      =   "$\Data\Actors\EnemyWeapons"
					*Extension      =   "atr"
				}

				*BOOL = "UsePrimary4"
				{
					*Usage			= "Protected"
					*VALUE	= "False"
					*DISPLAYNAME = "Uses Primary Weapon"
				}

				*String = "WeaponPoint4"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Hotpoint"
					*Value			=	""
					*Comment		=	"The hotpoint to attach the weapon to"
				}

				*FLOAT = "WeaponRange4"
				{
					*Usage			= "Protected"
					*VALUE	= 20
					*MIN	= 0
					*DISPLAYNAME = "Attack Range"
				}

			}

			*Group = "Fifth Attack"
			{
				*FilePick = "WeaponName5"
				{
					*Usage			= "Protected"
					*DISPLAYNAME = "Weapon"
					*Value			=	""
					*Directory      =   "$\Data\Actors\EnemyWeapons"
					*Extension      =   "atr"
				}

				*BOOL = "UsePrimary5"
				{
					*Usage			= "Protected"
					*VALUE	= "False"
					*DISPLAYNAME = "Uses Primary Weapon"
				}

				*String = "WeaponPoint5"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Hotpoint"
					*Value			=	""
					*Comment		=	"The hotpoint to attach the weapon to"
				}

				*FLOAT = "WeaponRange5"
				{
					*Usage			= "Protected"
					*VALUE	= 20
					*MIN	= 0
					*DISPLAYNAME = "Attack Range"
				}

			}

			*Group = "Close Range"
			{
				*Comment = "Close Range Attack"

				*INT = "CloseRangeChance"
				{
					*VALUE	= 25
					*MIN	= 0
					*DISPLAYNAME = "Chance"
					*Comment = "The chance the AI will select close range attack"
				}
				
				*FLOAT = "CloseRangeDist"
				{
					*VALUE	= 5
					*MIN	= 0
					*DISPLAYNAME = "Distance"
					*Comment = "The distance from target in close range attack"
				}
			}

			*Group = "Medium Range"
			{
				*Comment = "Medium Range Attack"

				*INT = "MediumRangeChance"
				{
					*VALUE	= 50
					*MIN	= 0
					*DISPLAYNAME = "Chance"
					*Comment = "The chance the AI will select medium range attack"
				}
				
				*FLOAT = "MediumRangeDist"
				{
					*VALUE	= 15
					*MIN	= 0
					*DISPLAYNAME = "Distance"
					*Comment = "The distance from target in medium range attack"
				}
			}

			*Group = "Long Range"
			{
				*Comment = "Long Range Attack"

				*INT = "LongRangeChance"
				{
					*VALUE	= 25
					*MIN	= 0
					*DISPLAYNAME = "Chance"
					*Comment = "The chance the AI will select long range attack"
				}
				
				*FLOAT = "LongRangeDist"
				{
					*VALUE	= 30
					*MIN	= 0
					*DISPLAYNAME = "Distance"
					*Comment = "The distance from target in long range attack"
				}
			}

			*BOOL = "IsSniper"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Sniper"
				*Comment = "The AI will not move from placed spot"
			}

			*INT = "CrouchAttackChance"
			{
				*VALUE	= 0
				*MIN	= 0
				*DISPLAYNAME = "Crouch Attack Chance"
				*Comment = "The chance out of 100 the AI will crouch when attacking"
			}

			*INT = "ProneAttackChance"
			{
				*VALUE	= 0
				*MIN	= 0
				*DISPLAYNAME = "Prone Attack Chance"
				*Comment = "The chance out of 100 the AI will go prone when attacking"
			}

			*BOOL = "KeepADis"
			{
				*VALUE			= "True"
				*DISPLAYNAME	= "Keep Attack Distance"
				*Comment		= "Keep distance away from target when in medium or long range attack"
			}

		}

		*Group = "Head Tracking"
		{
			*BOOL = "UseHeadTracking"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Head Tracking"
			}

			*Group = "Head"
			{
				*int = "HeadBoneIndex"
				{
					*Usage			= "Protected"
					*VALUE			= -1
					*DISPLAYNAME	= "BoneIndex"
				}

				*Combo = "HeadPitchAxis"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Pitch Axis"
					*Value			=	2 
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*Combo = "HeadYawAxis"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Yaw Axis"
					*Value			=	4
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*FLOAT = "HeadXFix"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "X Fix"
				}

				*FLOAT = "HeadYFix"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Y Fix"
				}

				*FLOAT = "HeadZFix"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Z Fix"
				}

				*FLOAT = "HeadPitchMax"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Pitch Max"
				}

				*FLOAT = "HeadPitchMin"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Pitch Min"
				}

				*FLOAT = "HeadYawMax"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Yaw Max"
				}

				*FLOAT = "HeadYawMin"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Yaw Min"
				}

				*FLOAT = "HeadPitchCorr"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Pitch Correction"
				}

				*FLOAT = "HeadPPCorr"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Parent Pitch Correction"
				}

				*FLOAT = "HeadPYCorr"
				{
					*Usage		= "Protected"
					*VALUE	= 90
					*DISPLAYNAME = "Parent Yaw Correction"
				}

			}


			*Group = "Spine"
			{
				*int = "BackBoneIndex"
				{
					*Usage			= "Protected"
					*VALUE			= -1
					*DISPLAYNAME	= "BoneIndex"
				}

				*Combo = "BackPitchAxis"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Pitch Axis"
					*Value			=	2 
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*Combo = "BackYawAxis"
				{
					*Usage			= "Protected"
					*DisplayName	=	"Yaw Axis"
					*Value			=	4
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*FLOAT = "BackXFix"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "X Fix"
				}

				*FLOAT = "BackYFix"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Y Fix"
				}

				*FLOAT = "BackZFix"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Z Fix"
				}

				*FLOAT = "BackPitchMax"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Pitch Max"
				}

				*FLOAT = "BackPitchMin"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Pitch Min"
				}

				*FLOAT = "BackYawMax"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Yaw Max"
				}

				*FLOAT = "BackYawMin"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Yaw Min"
				}

				*FLOAT = "BackPitchCorr"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Pitch Correction"
				}

				*FLOAT = "BackPPCorr"
				{
					*Usage		= "Protected"
					*VALUE	= 0
					*DISPLAYNAME = "Parent Pitch Correction"
				}

				*FLOAT = "BackPYCorr"
				{
					*Usage		= "Protected"
					*VALUE	= 90
					*DISPLAYNAME = "Parent Yaw Correction"
				}

			}



		}

		*Group = "Tail Tracking"
		{
			*BOOL = "UseTailTracking"
			{
				*Usage			= "Protected"
				*VALUE			= "False"
				*DISPLAYNAME	= "Tail Tracking"
			}

			*Group = "Base"
			{
				*int = "BaseBoneIndex"
				{
					*Usage			= "Protected"
					*VALUE			= -1
					*DISPLAYNAME	= "BoneIndex"
				}

				*Combo = "BasePitchAxis"
				{
					*Usage			= "Protected"
					*DisplayName	= "Pitch Axis"
					*Value			= 3 
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*Combo = "BaseYawAxis"
				{
					*Usage			= "Protected"
					*DisplayName	= "Yaw Axis"
					*Value			= 5
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*FLOAT = "BaseXFix"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "X Fix"
				}

				*FLOAT = "BaseYFix"
				{
					*Usage			= "Protected"
					*VALUE			= 0
					*DISPLAYNAME	= "Y Fix"
				}

				*FLOAT = "BaseZFix"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "Z Fix"
				}

				*FLOAT = "BasePitchMax"
				{
					*Usage			= "Protected"
					*VALUE			= 90
					*DISPLAYNAME	= "Pitch Max"
				}

				*FLOAT = "BasePitchMin"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "Pitch Min"
				}

				*FLOAT = "BaseYawMax"
				{
					*Usage			= "Protected"
					*VALUE			= 180
					*DISPLAYNAME	= "Yaw Max"
				}

				*FLOAT = "BaseYawMin"
				{
					*Usage			= "Protected"
					*VALUE			= -180
					*DISPLAYNAME	= "Yaw Min"
				}

				*FLOAT = "BasePitchCorr"
				{
					*Usage			= "Protected"
					*VALUE			= -20
					*DISPLAYNAME	= "Pitch Correction"
				}
			}


			*Group = "NearBase"
			{
				*int = "NearBaseBoneIndex"
				{
					*Usage			= "Protected"
					*VALUE			= -1
					*DISPLAYNAME	= "BoneIndex"
				}

				*Combo = "NearBasePitchAxis"
				{
					*Usage			= "Protected"
					*DisplayName	= "Pitch Axis"
					*Value			= 3 
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*Combo = "NearBaseYawAxis"
				{
					*Usage			= "Protected"
					*DisplayName	= "Yaw Axis"
					*Value			= 5
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*FLOAT = "NearBaseXFix"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "X Fix"
				}

				*FLOAT = "NearBaseYFix"
				{
					*Usage			= "Protected"
					*VALUE			= 0
					*DISPLAYNAME	= "Y Fix"
				}

				*FLOAT = "NearBaseZFix"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "Z Fix"
				}

				*FLOAT = "NearBasePitchMax"
				{
					*Usage			= "Protected"
					*VALUE			= 20
					*DISPLAYNAME	= "Pitch Max"
				}

				*FLOAT = "NearBasePitchMin"
				{
					*Usage			= "Protected"
					*VALUE			= -20
					*DISPLAYNAME	= "Pitch Min"
				}

				*FLOAT = "NearBaseYawMax"
				{
					*Usage			= "Protected"
					*VALUE			= 30
					*DISPLAYNAME	= "Yaw Max"
				}

				*FLOAT = "NearBaseYawMin"
				{
					*Usage			= "Protected"
					*VALUE			= -30
					*DISPLAYNAME	= "Yaw Min"
				}

				*FLOAT = "NearBasePitchCorr"
				{
					*Usage			= "Protected"
					*VALUE			= 0
					*DISPLAYNAME	= "Pitch Correction"
				}
			}

			*Group = "NearTip"
			{
				*int = "NearTipBoneIndex"
				{
					*Usage			= "Protected"
					*VALUE			= -1
					*DISPLAYNAME	= "BoneIndex"
				}

				*Combo = "NearTipPitchAxis"
				{
					*Usage			= "Protected"
					*DisplayName	= "Pitch Axis"
					*Value			= 3 
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*Combo = "NearTipYawAxis"
				{
					*Usage			= "Protected"
					*DisplayName	= "Yaw Axis"
					*Value			= 5
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*FLOAT = "NearTipXFix"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "X Fix"
				}

				*FLOAT = "NearTipYFix"
				{
					*Usage			= "Protected"
					*VALUE			= 0
					*DISPLAYNAME	= "Y Fix"
				}

				*FLOAT = "NearTipZFix"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "Z Fix"
				}

				*FLOAT = "NearTipPitchMax"
				{
					*Usage			= "Protected"
					*VALUE			= 30
					*DISPLAYNAME	= "Pitch Max"
				}

				*FLOAT = "NearTipPitchMin"
				{
					*Usage			= "Protected"
					*VALUE			= -30
					*DISPLAYNAME	= "Pitch Min"
				}

				*FLOAT = "NearTipYawMax"
				{
					*Usage			= "Protected"
					*VALUE			= 30
					*DISPLAYNAME	= "Yaw Max"
				}

				*FLOAT = "NearTipYawMin"
				{
					*Usage			= "Protected"
					*VALUE			= -30
					*DISPLAYNAME	= "Yaw Min"
				}

				*FLOAT = "NearTipPitchCorr"
				{
					*Usage			= "Protected"
					*VALUE			= 0
					*DISPLAYNAME	= "Pitch Correction"
				}
			}

			*Group = "Tip"
			{
				*int = "TipBoneIndex"
				{
					*Usage			= "Protected"
					*VALUE			= -1
					*DISPLAYNAME	= "BoneIndex"
				}

				*Combo = "TipPitchAxis"
				{
					*Usage			= "Protected"
					*DisplayName	= "Pitch Axis"
					*Value			= 3 
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*Combo = "TipYawAxis"
				{
					*Usage			= "Protected"
					*DisplayName	= "Yaw Axis"
					*Value			= 5
					*ComboList		=
					{
						"X+",
						"X-",
						"Y+",
						"Y-",
						"Z+",
						"Z-"
					}
				}

				*FLOAT = "TipXFix"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "X Fix"
				}

				*FLOAT = "TipYFix"
				{
					*Usage			= "Protected"
					*VALUE			= 0
					*DISPLAYNAME	= "Y Fix"
				}

				*FLOAT = "TipZFix"
				{
					*Usage			= "Protected"
					*VALUE			= -90
					*DISPLAYNAME	= "Z Fix"
				}

				*FLOAT = "TipPitchMax"
				{
					*Usage			= "Protected"
					*VALUE			= 30
					*DISPLAYNAME	= "Pitch Max"
				}

				*FLOAT = "TipPitchMin"
				{
					*Usage			= "Protected"
					*VALUE			= -30
					*DISPLAYNAME	= "Pitch Min"
				}

				*FLOAT = "TipYawMax"
				{
					*Usage			= "Protected"
					*VALUE			= 30
					*DISPLAYNAME	= "Yaw Max"
				}

				*FLOAT = "TipYawMin"
				{
					*Usage			= "Protected"
					*VALUE			= -30
					*DISPLAYNAME	= "Yaw Min"
				}

				*FLOAT = "TipPitchCorr"
				{
					*Usage			= "Protected"
					*VALUE			= 0
					*DISPLAYNAME	= "Pitch Correction"
				}
			}
		}


		*String = "InitialState"
		{
			*DisplayName	=	"Initial State"
			*Value			=	""
			*Comment		=	"The initial state"
		}

		*String = "InitialMode"
		{
			*DisplayName	=	"Initial Mode"
			*Value			=	""
			*Comment		=	"The initial Mode"
		}

		*Combo = "InitialAlert"
		{
			*DisplayName	=	"Initial Alert Level"
			*Value			=	0 
			*ComboList		=
			{
				"None",
				"Low",
				"Medium",
				"High"
			}
		}

		*FLOAT = "DefTransBlend"
		{
			*VALUE			=	0.266667
			*DISPLAYNAME	=	"Default Blend"
			*Comment		=	"Default transition blend time"
		}

		*Group = "Wander/Search"
		{
			*FLOAT = "WTime"
			{
				*VALUE			=	-1.0
				*DISPLAYNAME	=	"Wander Time"
				*Comment		=	"The time to stay in wander before switching to patrol"
				*Comment		=	"Use -1 for never switching"
			}

			*FLOAT = "WPTime"
			{
				*VALUE			=	-1.0
				*DISPLAYNAME	=	"Wander Pause Time"
				*Comment		=	"The time to pause at wander destination before moving to the next one"
				*Comment		=	"Use -1 for never switching"
			}

		}

		*Group = "Death"
		{

			*BOOL = "ResetWhenDie"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Reset When Die"
				*Comment = "True if resets after dying."
			}

			*FLOAT = "RDelay"
			{
				*VALUE			=	-1.0
				*DISPLAYNAME	=	"Reset Delay"
				*Comment		=	"The time to delay before resetting"
				*Comment		=	"Use -1 for no delay"
			}

			*BOOL = "GibDeath"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Gib When Die"
				*Comment = "True if gibs on death."
			}

			*FilePick = "GibPart"
			{
				*DisplayName	=	"Gib Particle"
				*Value			=	""
				*Directory      =   "$\Data\Particle\"
				*Extension      =   "par"
				*Extension      =   "eff"
			}
		}

        *Group = "Sound"
        {
            *Sound = "LDSound"
            {
                *DisplayName    =   "Light Damage Sound"
            }
            *Sound = "MDSound"
            {
                *DisplayName    =   "Medium Damage Sound"
            }
            *Sound = "HDSound"
            {
                *DisplayName    =   "Heavy Damage Sound"
            }
            
        }



		*BOOL = "UseGroundTracking"
		{
			*Usage			= "Protected"
			*VALUE			= "False"
			*DISPLAYNAME	= "Ground Tracking"
			*COMMENT		= "AI aligns itself to the slope of the ground."
		}

		*BOOL = "CanBeSwarmBored"
		{
			*Usage			= "Protected"
			*VALUE	= "True"
			*DISPLAYNAME = "Can Be Swarm Bored?"
		}

		*Group = "Spawn Actors"
		{
			*Comment = "Actors to spawn when this enemy dies"

			*FilePick = "SpawnActor1"
			{
				*DISPLAYNAME = "SpawnActor1"
				*Value		 = ""
				*Directory   = "$\Data\Actors"
				*Extension   = "atr"
			}

			*FilePick = "SpawnActor2"
			{
				*DISPLAYNAME = "SpawnActor2"
				*Value		 = ""
				*Directory   = "$\Data\Actors"
				*Extension   = "atr"
			}

			*FilePick = "SpawnActor3"
			{
				*DISPLAYNAME = "SpawnActor3"
				*Value		 = ""
				*Directory   = "$\Data\Actors"
				*Extension   = "atr"
			}

			*FilePick = "SpawnActor4"
			{
				*DISPLAYNAME = "SpawnActor4"
				*Value		 = ""
				*Directory   = "$\Data\Actors"
				*Extension   = "atr"
			}

			*FilePick = "SpawnActor5"
			{
				*DISPLAYNAME = "SpawnActor5"
				*Value		 = ""
				*Directory   = "$\Data\Actors"
				*Extension   = "atr"
			}

			*FLOAT	  = "SpawnActor1Velocity"
			{
				*VALUE	= 3.0f
				*DISPLAYNAME = "Actor 1 Velocity"
				*Comment = "Speed that the first spawned actor moves away from the enemy"
			}

			*FLOAT	  = "SpawnActor2Velocity"
			{
				*VALUE	= 3.0f
				*DISPLAYNAME = "Actor 2 Velocity"
				*Comment = "Speed that the second spawned actor moves away from the enemy"
			}

			*FLOAT	  = "SpawnActor3Velocity"
			{
				*VALUE	= 3.0f
				*DISPLAYNAME = "Actor 3 Velocity"
				*Comment = "Speed that the third spawned actor moves away from the enemy"
			}

			*FLOAT	  = "SpawnActor4Velocity"
			{
				*VALUE	= 3.0f
				*DISPLAYNAME = "Actor 4 Velocity"
				*Comment = "Speed that the fourth spawned actor moves away from the enemy"
			}

			*FLOAT	  = "SpawnActor5Velocity"
			{
				*VALUE	= 3.0f
				*DISPLAYNAME = "Actor 5 Velocity"
				*Comment = "Speed that the fifth spawned actor moves away from the enemy"
			}


			*INT	  = "SpawnActor1Chance"
			{
				*VALUE	= 100
				*MAX	= 100
				*MIN	= 0
				*DISPLAYNAME = "Actor 1 Chance"
				*Comment = "The chance of the first spawned actor actually appearing"
			}

			*INT	  = "SpawnActor2Chance"
			{
				*VALUE	= 100
				*MAX	= 100
				*MIN	= 0
				*DISPLAYNAME = "Actor 2 Chance"
				*Comment = "The chance of the second spawned actor actually appearing"
			}

			*INT	  = "SpawnActor3Chance"
			{
				*VALUE	= 100
				*MAX	= 100
				*MIN	= 0
				*DISPLAYNAME = "Actor 3 Chance"
				*Comment = "The chance of the third spawned actor actually appearing"
			}

			*INT	  = "SpawnActor4Chance"
			{
				*VALUE	= 100
				*MAX	= 100
				*MIN	= 0
				*DISPLAYNAME = "Actor 4 Chance"
				*Comment = "The chance of the fourth spawned actor actually appearing"
			}

			*INT	  = "SpawnActor5Chance"
			{
				*VALUE	= 100
				*MAX	= 100
				*MIN	= 0
				*DISPLAYNAME = "Actor 5 Chance"
				*Comment = "The chance of the fifth spawned actor actually appearing"
			}
		}
	}

	*Protected	=	"Mass"
	*Protected	=	"Gravity"
	*Protected	=	"Density"
	*Protected	=	"Drag"
	*Protected	=	"Type"
	*Protected	=	"Collides"
	*Protected	=	"Touches"
	*Protected	=	"Regions"
	*Protected	=	"Platforms"
	*Protected	=	"smStep"
	*Protected	=	"smWall"
}


*OBJECT = "TestEnemyAI"
{
	*NAME	= "TestEnemyAI"
	*TYPE	= "OBJECT"
	*INHERITS = "EnemyAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		CrouchIdle,
		ProneIdle,
		Walk,
		AlertWalk,
		CrouchWalk,
		ProneCrawl,
		Run,
		AlertRun,
		Jump,
		Climb,
		HangClimb,
		Damaged,
		Death,
		CornerCover,
		PopoutLeft,
		PopoutRight,
		Attack,
		CrouchAttack,
		ProneAttack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim
	}

}


;------------------------------------------------------------------------------
; Player
;
; PlayerAI
;------------------------------------------------------------------------------
*OBJECT = "Player"
{
	*NAME	= "Player"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		"Idle"					,
		"IdleNoControl"			,
		"Run"					,
		"Jump" 					,
		"JumpBack"				,
		"Fall" 					,
		"CheatFly" 				,
		"Shoved" 				,
									
		"LedgeHang" 			,
		"LedgeShimmy"			,
									
		"Ride" 					,
		"RideSteracosaurIdle"	,
		"RideSteracosaurMove"	,
		"RideSteracosaurDash"	,
								
		"Climb" 				,
		"HangClimb"				,
									 
		"WaterSurfaceIdle"		,
		"WaterSurfaceMove"		,
		"UnderwaterIdle"		,
		"UnderwaterMove"		,
		"SwimBurst"				,
		"LeapToShore"			,
									 
		"UsingTurret"			,
		"UsingRC"				,
									 
		"PteranadonSetup"	,
		"PteranadonIdle"	,
		"PteranadonFlyUp"	,
		"PteranadonFlyUpMed" 	,
		"PteranadonFlyUpFull"	,
		"PteranadonFlyDown"  	,
		"PteranadonFlyDownMed"	,
		"PteranadonFlyDownFull"	,
		"PteranadonFlyLeft"	,
		"PteranadonFlyRight"	,
		"PteranadonEdgeLeft"	,
		"PteranadonEdgeRight"	,
		"PteranadonFireGun"	,
		"PteranadonFireMissile"	,
		"PteranadonWorldCollsion",
		"PteranadonActorCollsion",

		"Dead",

		"RaptorRideIdle",
		"RaptorRideIdleNoControl",
		"RaptorRideRun",
		"RaptorRideJump",
		"RaptorRideFall"
	}

	*VARIABLES = 
	{
		*Combo = "PLAYERTYPE"
		{
			*DisplayName	=	"Player Type"
			*Value			=	0 
			*ComboList		=
			{
				"Normal player",
				"Raptor ride",
				"Steracosaur ride",
				"Pteranadon ride"
			}
		}
		*Group = "Inventory Capacity"
		{
			*Int = "MaxBowAmmo"
			{
				*DisplayName = "Max Bow Ammo"
				*Value = 20;
				*Comment = "Maximum number of arrows player can take"
			}
			*Int = "MaxTekBowAmmo"
			{
				*DisplayName = "Max TekBow Ammo"
				*Value = 20;
				*Comment = "Maximum number of tek arrows player can take"
			}
			*Int = "MaxPistolAmmo"
			{
				*DisplayName = "Max Pistol Ammo"
				*Value = 5;
				*Comment = "Maximum number of CLIPS of pistol slugs the player can take"
			}					
			*Int = "MaxShotgunAmmo"
			{
				*DisplayName = "Max Shotgun Ammo"
				*Value = 3;
				*Comment = "Maximum number of shotgun CLIPS the player can take"
			}
			*Int = "MaxMinigunAmmo"
			{
				*DisplayName = "Max Minigun Ammo"
				*Value = 5;
				*Comment = "Maximum number of minigun CLIPS the player can take"
			}					
			*Int = "MaxLauncherAmmo"
			{
				*DisplayName = "Max Rockets Ammo"
				*Value = 4;
				*Comment = "Maximum number of rocket CLIPS the player can take"
			}	
			*Int = "MaxGrenadeAmmo"
			{
				*DisplayName = "Max Grenades"
				*Value = 10;
				*Comment = "Maximum number of grenades the player can take"
			}					
			*Int = "MaxGuidedDeviceAmmo"
			{
				*DisplayName = "Max Guided Device Ammo (DON'T CHANGE)"
				*Value = 1;
				*Comment = "Leave this as 1, please"
			}					
			*Int = "MaxTechWeaponAmmo"
			{
				*DisplayName = "Max Tech Weapon Ammo"
				*Value = 4;
				*Comment = "Maximum number of Tech Weapon CLIPS the player can take"
			}		
			*Int = "MaxDarkMatterCubeAmmo"
			{
				*DisplayName = "Max Dark Matter cube Ammo (DON'T CHANGE)"
				*Value = 1;
				*Comment = "Leave this as 1, please"
			}					
		}
		*Group = "Standard Movement"
		{
			*FLOAT = "EYEHEIGHT"
			{
				*VALUE	= 1.5
				*MIN	= 0.1
				*MAX	= 50
				*DISPLAYNAME = "Eye Height"
			}
	
			*FLOAT = "MAXRUNSPEED"
			{
				*VALUE	= 8
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Run Speed"
			}
	
			*FLOAT = "MAXSTRAFESPEED"
			{
				*VALUE	= 8
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Strafe Speed"
			}
	
			*FLOAT = "JUMPVELOCITY"
			{
				*VALUE	= 12
				*MIN	= 0.1
				*MAX	= 50
				*DISPLAYNAME = "Jump Velocity"
			}

			*FLOAT = "TURNSPEED"
			{
				*VALUE	= 240
				*MIN	= 1
				*MAX	= 720
				*DISPLAYNAME = "Turn Speed"
			}

			*FLOAT = "LEDGESHIMMYSPEED"
			{
				*VALUE	= 0.25
				*MIN	= 0.01
				*MAX	= 10
				*DISPLAYNAME = "Ledge Shimmy Speed"
			}
		}

		*Group = "Crouch Movement"
		{
			*FLOAT = "CROUCHEYEHEIGHT"
			{
				*VALUE	= 1.2
				*MIN	= 0.1
				*MAX	= 50
				*DISPLAYNAME = "Crouch Eye Height"
			}
	
			*FLOAT = "MAXCROUCHRUNSPEED"
			{
				*VALUE	= 3
				*MIN	= 1
				*MAX	= 20
				*DISPLAYNAME = "Crouch Run Speed"
			}
	
			*FLOAT = "MAXCROUCHSTRAFESPEED"
			{
				*VALUE	= 3
				*MIN	= 1
				*MAX	= 20
				*DISPLAYNAME = "Crouch Strafe Speed"
			}
		}

		*Group = "Fall damage"
		{
			*FLOAT = "FALLDAMAGEMINSPEED"
			{
				*VALUE	= 30
				*MIN	= 1
				*MAX	= 200
				*DISPLAYNAME = "Min speed for damage"
			}

			*FLOAT = "FALLDAMAGEMAXSPEED"
			{
				*VALUE	= 80
				*MIN	= 1
				*MAX	= 200
				*DISPLAYNAME = "Max (100 dmg) speed"
			}
		}
	
		*Group = "Water interaction"
		{
			*FLOAT = "SWIMSPEED"
			{
				*VALUE	= 5
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Swim Speed"
			}

			*FLOAT = "DROWNINITIALTIME"
			{
				*VALUE	= 10.0
				*MIN	= 1.0
				*MAX	= 100.0
				*DISPLAYNAME = "Time to start drowning"
			}

			*FLOAT = "DROWNINTERVAL"
			{
				*VALUE	= 2.0
				*MIN	= 0.1
				*MAX	= 100.0
				*DISPLAYNAME = "Drown damage time interval"
			}

			*FLOAT = "DROWNDAMAGE"
			{
				*VALUE	= 5
				*MIN	= 1
				*MAX	= 500
				*DISPLAYNAME = "Drown damage"
			}
		}

		*Group = "Climbing"
		{
			*FLOAT = "CLIMB_SPEED"
			{
				*VALUE	= 8
				*MIN	= 1
				*MAX	= 20
				*DISPLAYNAME = "Climb Speed"
			}

			*FLOAT = "CLIMB_ACCEL"
			{
				*VALUE	= 0.8
				*MIN	= 0.1
				*MAX	= 5
				*DISPLAYNAME = "Acceleration"
			}

			*FLOAT = "CLIMB_DECEL"
			{
				*VALUE	= 0.2
				*MIN	= 0.1
				*MAX	= 5
				*DISPLAYNAME = "Deceleration"
			}

			*FLOAT = "CLIMB_HORIZVIEWANGLE"
			{
				*VALUE	= 120
				*MIN	= 0
				*MAX	= 180
				*DISPLAYNAME = "Horizontal View Angle"
			}
		}

		*Group = "Raptor-riding"
		{
			*FLOAT = "RAPTOR_EYEHEIGHT"
			{
				*VALUE	= 2.0
				*MIN	= 1
				*MAX	= 10
				*DISPLAYNAME = "Eye Height"
			}

			*FLOAT = "RAPTOR_MAXRUNSPEED"
			{
				*VALUE	= 14
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Run Speed"
			}
	
			*FLOAT = "RAPTOR_MAXSTRAFESPEED"
			{
				*VALUE	= 11
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Strafe Speed"
			}
	
			*FLOAT = "RAPTOR_JUMPVELOCITY"
			{
				*VALUE	= 15
				*MIN	= 0.1
				*MAX	= 50
				*DISPLAYNAME = "Jump Velocity"
			}

			*FLOAT = "RAPTOR_EYEZOFFSET"
			{
				*VALUE	= 0.0
				*MIN	= -10
				*MAX	= 10
				*DISPLAYNAME = "Eye Offset (Z axis)"
			}

			*FLOAT = "RAPTOR_TURNLAG"
			{
				*VALUE	= 0.035
				*MIN	= 0
				*MAX	= 10
				*DISPLAYNAME = "Raptor Turn Lag"
			}
		}

		*Group = "Steracosaur riding"
		{
			*FLOAT = "STERACOSAUR_CAMERAHEIGHT"
			{
				*VALUE	= 5.0
				*MIN	= 0
				*MAX	= 100
				*DISPLAYNAME = "Camera Height"
			}

			*FLOAT = "STERACOSAUR_CAMERADISTANCE"
			{
				*VALUE	= 10.0
				*MIN	= 0
				*MAX	= 100
				*DISPLAYNAME = "Camera - Distance behind Steracosaur"
			}

			*FLOAT = "STERACOSAUR_MAXRUNSPEED"
			{
				*VALUE	= 14
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Run Speed"
			}
	
			*FLOAT = "STERACOSAUR_MAXSTRAFESPEED"
			{
				*VALUE	= 11
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Strafe Speed"
			}

			*FLOAT = "STERACOSAUR_TURNSPEED"
			{
				*VALUE	= 60
				*MIN	= 1
				*MAX	= 720
				*DISPLAYNAME = "Turn Speed"
			}

			*FLOAT = "STERACOSAUR_DASHSPEED"
			{
				*VALUE	= 18
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Dash Speed"
			}

			*FLOAT = "STERACOSAUR_DASHTIME"
			{
				*VALUE	= 3
				*MIN	= 1
				*MAX	= 120
				*DISPLAYNAME = "Dash Time"
			}

			*FLOAT = "STERACOSAUR_DASHRECHARGETIME"
			{
				*VALUE	= 5
				*MIN	= 1
				*MAX	= 120
				*DISPLAYNAME = "Dash Recharge Time"
			}
		}
		
		*Group = "Pteranadon-riding"
		{

			*FLOAT = "PT_WODAM"
			{
					*VALUE	= 25.0
					*MIN	= 0.0
					*DISPLAYNAME = "World collision damage"
					*Comment = "How much damage will the player receive if there's a collision with the world."
			}

			*FLOAT = "PT_ACDAM"
			{
					*VALUE	= 10.0
					*MIN	= 0.0
					*DISPLAYNAME = "Actor collision damage "
					*Comment = "How much damage will the player receive if there's a collision with the actor."
			}

			*FLOAT = "PT_WOSTN"
			{
					*VALUE	= 30.0
					*MIN	= 0.0
					*DISPLAYNAME = "World collision stun"
					*Comment = "How much stun delay the player receives if there's a collision with the world."
			}

			*FLOAT = "PT_ACSTN"
			{
					*VALUE	= 20.0
					*MIN	= 0.0
					*DISPLAYNAME = "Actor collision stun"
					*Comment = "How much stun delay the player receives if there's a collision with another actor."
			}

			*FLOAT = "PT_FRSDACC"
				{
					*VALUE	= 2.0
					*MIN	= 0.5
					*MAX	= 10
					*DISPLAYNAME = "Fly forward acceleration"
			}

			*FLOAT = "PT_FRSDMAX"
				{
					*VALUE	= 8.0
					*MIN	= 0
					*MAX	= 20
					*DISPLAYNAME = "Fly forward max speed"
			}

			*FLOAT = "PT_FRSDMIN"
				{
					*VALUE	= 2.0
					*MIN	= 0
					*MAX	= 20
					*DISPLAYNAME = "Fly forward min speed"
			}

			*FLOAT = "PT_FRSDSTART"
				{
					*VALUE	= 4.5
					*MIN	= 0
					*MAX	= 20
					*DISPLAYNAME = "Fly forward start speed"
			}


			*FLOAT = "PT_FRHACC"
				{
					*VALUE	= 3.0
					*MIN	= 0.0
					*MAX	= 10
					*DISPLAYNAME = "Move horizontal accel"
			}

			*FLOAT = "PT_FRDACC"
				{
					*VALUE	= 3.0
					*MIN	= 0.0
					*MAX	= 10
					*DISPLAYNAME = "Move down accel"
			}

			*FLOAT = "PT_FRUACC"
				{
					*VALUE	= 3.0
					*MIN	= 0.0
					*MAX	= 10
					*DISPLAYNAME = "Move up accel"
			}

			*FLOAT = "PT_FRHDMP"
				{
					*VALUE	= 0.95
					*MIN	= 0.1
					*MAX	= 10
					*DISPLAYNAME = "Horizontal movement dampen"
			}

			*FLOAT = "PT_FRVDMP"
				{
					*VALUE	= 0.95
					*MIN	= 0.1
					*MAX	= 10
					*DISPLAYNAME = "Vertical movement dampen"
			}



			*FLOAT = "PT_FRFGUPSPD"
			{
					*VALUE	= 2.5
					*MIN	= 0.0
					*MAX	= 255
					*DISPLAYNAME = "Faux gravity up deceleration"
					*Comment = "This is the speed that the gravity will be applied in against an upward motion"
			}

			*FLOAT = "PT_FRFGDNSPD"
			{
					*VALUE	= 2.5
					*MIN	= 0.0
					*MAX	= 255
					*DISPLAYNAME = "Faux gravity down acceleration"
					*Comment = "This is the speed that the gravity will be applied towards a downward motion"
			}


			*FLOAT = "PT_FRFGUPAMNT"
			{
					*VALUE	= 10.0
					*MIN	= 0.0
					*MAX	= 255
					*DISPLAYNAME = "Faux gravity amount Up"
					*Comment = "Amount of faux gravity added when in trying to fly up"
			}

			*FLOAT = "PT_FRFGDNAMNT"
			{
					*VALUE	= 10.0
					*MIN	= 0.0
					*MAX	= 255
					*DISPLAYNAME = "Faux gravity amount Down"
					*Comment = "Amount of faux gravity added when in trying to fly up"
			}

			*FLOAT = "PT_FRFGUPBLN"
			{
					*VALUE	= 2.5
					*MIN	= 0.0
					*MAX	= 100
					*DISPLAYNAME = "Faux gravity blend Up to Down"
					*Comment = "Speed that faux gravity effect is blended from Up to Down"
			}

			*FLOAT = "PT_FRFGDNBLN"
			{
					*VALUE	= 2.5
					*MIN	= 0.0
					*MAX	= 100
					*DISPLAYNAME = "Faux gravity blend Down to Up"
					*Comment = "Speed that faux gravity effect is blended from Down to Up"
			}

			*FLOAT = "PT_FREDHACC"
			{
					*VALUE	= 6.0
					*MIN	= 0.0
					*MAX	= 10
					*DISPLAYNAME = "Edge mode horizontal accelerate"
			}

			*FLOAT = "PT_FREDVACC"
			{
					*VALUE	= 3.0
					*MIN	= 0.0
					*MAX	= 10
					*DISPLAYNAME = "Edge mode vertical accelerate"
			}

			*FLOAT = "PT_FRGR"
				{
					*VALUE	= 0.05
					*MIN	= 0.0
					*MAX	= 10
					*DISPLAYNAME = "Gravity value"
			}

			*FLOAT = "PT_FREDGR"
				{
					*VALUE	= 0.1
					*MIN	= 0.0
					*MAX	= 10
					*DISPLAYNAME = "Edge mode gravity value"
			}


		
			*FLOAT = "PT_LPWAV"
		        {
		            *VALUE  = 55
					*MIN	= 0
					*MAX	= 90
		            *DISPLAYNAME = "Degrees player can drift to sides."
			}

			*Group = "Weapon settings"
			{
				*FLOAT = "PT_WEAMGD"
				{
					*VALUE	= 0.25
					*MIN	= 0.0
					*DISPLAYNAME = "Machine Gun Delay"
					*Comment = "Delay between shots."
				}			
				*FLOAT = "PT_WEAMSD"
				{
					*VALUE	= 1.0
					*MIN	= 0.0
					*DISPLAYNAME = "Missile Delay"
					*Comment = "Delay between shots."
				}			
				*FLOAT = "PT_WEAMSSPD"
				{
					*VALUE	= 200.0
					*MIN	= 0.0
					*DISPLAYNAME = "Missile Speed"
					*Comment = "Speed at which missiles travel"
				}
				*FLOAT = "PT_WEAMGDMG"
				{
					*VALUE = 100.0
					*MIN = 0.0
					*DISPLAYNAME = "Machine Gun Damage Modifier" 
					*Comment = "Set this to modify the amount of damage the machine gun does. "
					*Comment = "E.g., 200% means double the damage"
				}
				*FLOAT = "PT_WEAMSDMG"
				{
					*VALUE = 100.0
					*MIN = 0.0
					*DISPLAYNAME = "Missile Damage Modifier" 
					*Comment = "Set this to modify the amount of damage the missiles do."
					*Comment = "E.g., 200% means double the damage, 50% halves the damage"
				}
					
			}

			*Group = "Rider settings"
			{
				*FilePick = "PT_RiderName"
				{
					*Usage			=	"Protected"
					*DISPLAYNAME	=	"Rider Actor"
					*Value			=	""
					*Directory      =   "$\Data\Actors\Players\Pteranadon\Riders"
					*Extension      =   "atr"
				}

				*String = "PT_RiderPoint"
				{
					*Usage			=	"Protected"
					*DisplayName	=	"Rider HotPoint"
					*Value			=	""
					*Comment		=	"The hotpoint to attach the rider to"
				}
			}
	
			*Group = "Camera settings"
			{
				*Group = "1st person"
				{
					*FLOAT = "PT_CAM1FOV"
					{
						*VALUE	= 50.0
						*MIN	= 0.0
						*DISPLAYNAME = "FOV"
						*Comment = "Field of View, (60degrees is about normal)."
					}
				
					*FLOAT = "PT_CAM1YPB"
					{
						*VALUE	= 1.0
						*MIN	= 0.0
						*DISPLAYNAME = "Y pos on bird"
						*Comment = "Y offset of the camera."
						*Comment = "i.e How high/low you want the camera to be sat on the bird."
					}
										
					*FLOAT = "PT_CAM1ZPB"
					{
						*VALUE	= 0.0
						*DISPLAYNAME = "Z pos on bird"
						*Comment = "Z offset of the camera."
						*Comment = "i.e How far along the bird you want the camera to be positioned."
					}
					
					*FLOAT = "PT_CAM1CROLL"
					{
						*VALUE	= 0.25
						*MIN	= 0.0
						*MAX	= 1
						*DISPLAYNAME = "Camera roll with turn effect"
					}					
					
				}

				*Group = "3rd person"
				{
					*FLOAT = "PT_CAM3FOV"
					{
						*VALUE	= 60.0
						*DISPLAYNAME = "FOV"
						*Comment = "Field of View, (60degrees is about normal)."
					}
				
					*FLOAT = "PT_CAM3ETB"
					{
						*VALUE	= 8.0
						*MIN	= 0.0
						*DISPLAYNAME = "Eye to bird distance"
						*Comment = "How far back the camera eye is placed to the bird."
					}

					*FLOAT = "PT_CAM3EL"
					{
						*VALUE	= 10.0
						*MIN	= 0.0
						*MAX	= 10.0
						*DISPLAYNAME = "Eye lag time"
					}
	
					*FLOAT = "PT_CAM3LAL"
					{
						*VALUE	= 10.0
						*MIN	= 0.0
						*MAX	= 10.0
						*DISPLAYNAME = "LookAt lag time"
					}


					*FLOAT = "PT_CAM3EAC"
					{
						*VALUE	= 10.0
						*MIN	= 0.0
						*DISPLAYNAME = "Eye corrdior pos adjust"
						*Comment = "Based on the players vertical position within the corridor,"
						*Comment = "the camera eye pos will be adjust by X amount."
					}
	
					*FLOAT = "PT_CAM3LAC"
					{
						*VALUE	= 10.0
						*MIN	= 0.0
						*DISPLAYNAME = "LookAt corrdior pos adjust"
						*Comment = "Based on the players vertical position within the corridor,"
						*Comment = "the camera LookAt pos will be adjust by X amount."
					}
					
					*FLOAT = "PT_CAM3CROLL"
					{
						*VALUE	= 0.25
						*MIN	= 0.0
						*MAX	= 1
						*DISPLAYNAME = "Camera roll with turn effect"
					}						
				}
				*Group = "Levy Cam"
				{
				
					*FLOAT = "PT_CAMLFOV"
					{
						*VALUE	= 60.0
						*DISPLAYNAME = "FOV"
						*Comment = "Field of View, (60degrees is about normal)."
					}
				
					*FLOAT = "PT_CAMLETB"
					{
						*VALUE	= 8.0
						*MIN	= 0.0
						*DISPLAYNAME = "Eye to bird distance"
						*Comment = "How far back the camera eye is placed to the bird."
					}

					*FLOAT = "PT_CAMLCLA"
					{
						*VALUE	= 2.0
						*MIN	= 0.0
						*DISPLAYNAME = "LookAt in front of Pteranadon"
						*Comment = "How many meters to look ahead of the player/pteranadon."
					}

					*FLOAT = "PT_CAMLEL"
					{
						*VALUE	= 2.5
						*MIN	= 0.0
						*MAX	= 10.0
						*DISPLAYNAME = "Eye lag time"
						*Comment = "Delay Eye has catching up when player moves.."
					}
	
					*FLOAT = "PT_CAMLLAL"
					{
						*VALUE	= 10.0
						*MIN	= 0.0
						*MAX	= 10.0
						*DISPLAYNAME = "LookAt lag time"
						*Comment = "Delay LookAt has catching up when player moves.."
					}

					*FLOAT = "Pt_Camlylaoff"
					{
						*VALUE	= 4.0
						*DISPLAYNAME = "Y offset on LookAt"
						*Comment = "LookAt Y offset, you can position the bird vertically on screen with this value"
					}

					*FLOAT = "PT_CAMLYEYOFF"
					{
						*VALUE	= 2.0
						*DISPLAYNAME = "Y offset on Eye"
						*Comment = "Eye Y offset, you can control the vertical angle the bird is viewed from with this value"
					}

					*FLOAT = "PT_CAMLYLASW"
					{
						*VALUE	= 1.0
						*DISPLAYNAME = "LookAt X swing"
						*Comment = "When the player moves horizontally this is the amount the LookAt will swing horizonatlly."
					}

					*FLOAT = "PT_CAMLYEYSW"
					{
						*VALUE	= 4.0
						*DISPLAYNAME = "Eye X swing"
						*Comment = "When the player moves horizontally this is the amount the Eye will swing horizonatlly."
					}
					
					*FLOAT = "PT_CAMLCROLL"
					{
						*VALUE	= 0.65
						*MIN	= 0.0
						*MAX	= 1
						*DISPLAYNAME = "Camera roll with turn"
					}				
					
					*FLOAT = "PT_CAMLPROLL"
					{
						*VALUE	= 1.0
						*MIN	= 0.0
						*MAX	= 1
						*DISPLAYNAME = "Player roll with turn"
					}				
					
				
					*INT   = "PT_CAMLCHLAG"
					{
						*VALUE	= 10
						*MIN	= 0
						*MAX	= 255
						*DISPLAYNAME = "CrossHair lag frames"
						*Comment = "How many frames lag on the crosshair position."
						
					}
				}
			}
            *Group = "Sound"
            {
                *Sound = "FltLeftSnd"
                {
                    *DisplayName    =   "Flight Whoosh Left"
                }
                *Sound = "FltRightSnd"
                {
                    *DisplayName    =   "Flight Whoosh Right"
                }
                *Sound = "FltSpeedSnd"
                {
                    *DisplayName    =   "Speed whoosh sound"
                }
                
                *Sound = "FltLockOnSnd"
                {
                    *DisplayName    =   "Missile lock-on sound"
                }
                
                *Sound = "FltHitWorldSnd"
                {
                    *DisplayName    =   "Environment collision sound"
                }
                
                *Sound = "FltWaterSkimSnd"
                {
                    *DisplayName    =   "Water skimming sound"
                }
                
                *Sound = "FltNoMissileSnd"
                {
                    *DisplayName    =   "Out-of-missiles sound"
                }
                
                *Sound = "FltMissileFireSnd"
                {
                    *DisplayName    =   "Fire missile sound"
                }
                
            }

		}		

		*Group = "Sound"
        {
            *Sound = "FootSnd"
            {
                *DisplayName    =   "Footstep"
            }
            *Sound = "JmpSnd"
            {
                *DisplayName    =   "Jump"
            }
            *Sound = "JmpLndSnd"
            {
                *DisplayName    =   "Jump Land"
            }
            *Sound = "TurnSnd"
            {
                *DisplayName    =   "Turn"
            }
            *Sound = "SurfaceSwimSnd"
            {
                *DisplayName    =   "Surface Swim"
            }
            *Sound = "UnderwaterSwimSnd"
            {
                *DisplayName    =   "Underwater Swim"
            }
            *Sound = "EnterWaterSnd"
            {
                *DisplayName    =   "Enter Water"
            }
            *Sound = "ExitWaterSnd"
            {
                *DisplayName    =   "Exit Water"
            }
            *Sound = "WaterSurfaceGoodSnd"
            {
                *DisplayName    =   "Water Surface (Good)"
            }
            *Sound = "WaterSurfaceBadSnd"
            {
                *DisplayName    =   "Water Surface (Bad)"
            }
            *Sound = "DrownSnd"
            {
                *DisplayName    =   "Drown"
            }
            *Sound = "DrownDeathSnd"
            {
                *DisplayName    =   "Drown Death"
            }
            *Sound = "FallingSnd"
            {
                *DisplayName    =   "Fall"
            }
            *Sound = "ClimbSnd"
            {
                *DisplayName    =   "Climb"
            }
            *Sound = "WadeSnd"
            {
                *DisplayName    =   "Wade thru water"
            }
            *Sound = "PainLightSnd"
            {
                *DisplayName    =   "Pain (light)"
            }
            *Sound = "PainMediumSnd"
            {
                *DisplayName    =   "Pain (medium)"
            }
            *Sound = "PainHeavySnd"
            {
                *DisplayName    =   "Pain (heavy)"
            }
            *Sound = "PainPoisonChokeSnd"
            {
                *DisplayName    =   "Pain (poisoned choke)"
            }
            *Sound = "PainPoisonGroanSnd"
            {
                *DisplayName    =   "Pain (poisoned groan)"
            }
            *Sound = "DeathShortSnd"
            {
                *DisplayName    =   "Death (short)"
            }
            *Sound = "DeathLongSnd"
            {
                *DisplayName    =   "Death (long)"
            }
            *Sound = "DeathSwarmBoredSnd"
            {
                *DisplayName    =   "Death (swarmbored)"
            }
            *Sound = "JumpLandHeavySnd"
            {
                *DisplayName    =   "Jump Land (heavy)"
            }
            *Sound = "FallingSplatSnd"
            {
                *DisplayName    =   "Falling splat"
            }
        }
		*Group = "Cheats"
		{
			*FLOAT = "EasyAimRadius"
			{
				*VALUE	= 10
				*MIN	= 0
				*MAX	= 90
				*DISPLAYNAME = "Easy Aim Radius"
				*COMMENT = "Angle (in degrees) of the Easy Aim Radius"
			}

		}
	}

	; Don't let certain variables be changed on an instance basis.
	*Protected	=	"Mass"
	*Protected	=	"Health"
	*Protected	=	"MaxHealth"
	*Protected	=	"Density"
	*Protected	=	"Drag"
	*Protected	=	"Type"
	*Protected	=	"Collides"
	*Protected	=	"Touches"
	*Protected	=	"Regions"
	*Protected	=	"Platforms"
    *Protected  =   "Sound"
}

;------------------------------------------------------------------------------
; Device
;------------------------------------------------------------------------------
*OBJECT = "DeviceAIObject"
{
	*NAME	= "DeviceAI"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"



	*AIMODES = 
	{
		Idle,
		Move,
	}

}

;------------------------------------------------------------------------------
; Bullet Object
;------------------------------------------------------------------------------
*OBJECT = "BulletAIObject"
{
	*NAME	= "BulletAI"
	*INHERITS = "DeviceAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*VARIABLES = 
	{
		*FLOAT = "BULLET_NORMAL_VELOCITY"
		{
			*VALUE	= 25.0
			*DISPLAYNAME = "Normal Bullet Velocity"
		}

		*FLOAT = "BULLET_BIRD_VELOCITY"
		{
			*VALUE	= 150.0
			*DISPLAYNAME = "Bird Bullet Velocity"
		}

		*FLOAT = "BULLET_BIRDMISSILE_VELOCITY"
		{
			*VALUE	= 200.0
			*DISPLAYNAME = "Bird Missile Velocity"
		}

		*FLOAT = "BULLET_ENEMY_BIRD_VELOCITY"
		{
			*VALUE	= 400.0
			*DISPLAYNAME = "Enemy Bird Bullet Velocity"
		}

		*FLOAT = "BULLET_NORMAL_DAMAGE"
		{
			*VALUE	= 5.0
			*DISPLAYNAME = "Normal Bullet Damage"
		}

		*FLOAT = "BULLET_BIRD_DAMAGE"
		{
			*VALUE	= 5.0
			*DISPLAYNAME = "Bird Bullet Damage"
		}

		*FLOAT = "BULLET_BIRDMISSILE_DAMAGE"
		{
			*VALUE	= 5.0
			*DISPLAYNAME = "Bird Missile Damage"
		}
	}

	*AIMODES = 
	{
		Move,
	}
}

;------------------------------------------------------------------------------
; Cover Object
;------------------------------------------------------------------------------
*OBJECT = "CoverObject"
{
	*NAME	= "CoverObject"
	*INHERITS = "DeviceAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*VARIABLES = 
	{
		*Combo = "COVER_TYPE"
		{
			*DisplayName	=	"Cover Type"
			*Value			=	0 
			*ComboList		=	{ "Stepout" , "Circle" }
		}

		*Combo = "STEPOUT_DIR"
		{
			*DisplayName	=	"Stepout Direction"
			*Value			=	0 
			*ComboList		=	{ "Left" , "Right", "Both", "Up" }
		}

		*FLOAT = "COVER_RADIUS"
		{
			*VALUE	= 4
			*MIN	= 0
			*DISPLAYNAME = "Cover Radius"
			*DISPLAYASDISC = "52,43,113"
		}
	}
}



;------------------------------------------------------------------------------
; Level Exit
;------------------------------------------------------------------------------
*OBJECT = "LevelExitObject"
{
	*NAME	= "LevelExitObject"
	*INHERITS = "DeviceAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*VARIABLES = 
	{
		*FLOAT = "LevelExitRadius"
		{
			*VALUE = 8.0
			*DISPLAYNAME = "Radius"
			*Comment = "How close the player must be to the exit, in the XZ plane, to leave the level"
		}

		*FLOAT = "LevelExitHeight"
		{
			*VALUE = 2.0
			*DISPLAYNAME = "Height"
			*Comment = "The height of the exit cylinder"
		}

	    *FilePick           =   "LevelExitDestinationLevelName"
	    {
			*DISPLAYNAME = "Destination Level Name"
	        *Comment = "The name of the level to go to (don't include full path)"
	        *Value          =   ""
	        *Directory      =   "$/Data/Levels/"
	        *Extension      =   "atr"
	    }
	}
}

*OBJECT = "TurokPickup"
{
	*NAME	= "TurokPickup"
	*INHERITS = "Pickup"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		WaitToSpawn,
		Respawn
	}
	*VARIABLES =
	{
		*Combo = "PickupType"
		{
			*DisplayName	=	"Pickup Type"
			*Value			=	0
			*ComboList		=
			{
				"Dark Matter Cube Ammo",
				"Flame Thrower Ammo",
				"Grenade Ammo",
				"Guided Device Ammo",
				"Minigun Ammo",
				"Pistol Ammo",
				"Rocket Ammo",
				"Shotgun Ammo",
				"Tech Weapon Ammo",
				"Spiked Mine Ammo",
				"Flachette Ammo",
				"Nuke Ammo",
				"Arrow Ammo",
				"Explosive Arrow Ammo",
				"Poison Arrow Ammo",
				"Gravity Gun Ammo",
				"Swarm Bore Ammo",
				"Baloon",
				"Proxy",
				"Healing Crystal",
				"Healing Herb",
				"Large MedKit",
				"Small MedKit",
				"Warclub",
				"Bow",
				"Crossbow",
				"Dark Matter Cube",
				"Flame Thrower",
				"Remote Device",
				"MiniGun",
				"Sniper Pistol",
				"Rocket Launcher",
				"Shotgun",
				"Tech Weapon",
				"Spiked Mine",
				"TekBow",
				"Gravity Gun",
				"Minigun Upgrade",
				"Sniper Pistol Upgrade",
				"RL Swarm Bore Upgrade"
				"Shotgun Upgrade",
				"Nuke Upgrade",
				"Tech Weapon Beam Upgrade",
				"Tech Weapon Smart Upgrade",
				"Jump Boots",
				"Cloaking Belt",
				"Shield Belt",
				"Empathy Chest plate",
				"Death Helm",
				"Speed",
				"Max Health",
				"Damage",
				"Regeneration",
				"Predator",
				"FlightHealth",
				"FlightOverdrive",
				"FlightRocketsAmmo",
				"Key"
			}
			*Usage		 = "Protected"
			*Comment		=	"What Kind of Pickup this is"
		}
		*Int = "AmmoAmount"
		{
			*DisplayName	=	"Ammo Ammount"
			*Value			=	0
			*Comment		=	"The amount of ammunition contained in this pickup. Use a value of 0 if not applicable, e.g., this is not an ammo pickup."
			*Usage			=	"Protected"
		}
		*Float = "HealthAmount"
		{
			*DisplayName	=	"Health Ammount"
			*Value			=	0.0000
			*Comment		=	"The amount of health contained in this pickup. Use a value of 0.0 if not applicable, e.g., this is not an ammo pickup."
			*Usage			=	"Protected"
		}
		*Group = "Dancing"
		{
			*Bool = "Dances"
			{
				*DisplayName	=	"Dances?"
				*Value			=	false
				*Comment		=	"If true, this pickup will sorta dance. "
			}
			*Float = "DanceAmount"
			{
				*DisplayName	=	"Dance Amount"
				*Value			=	1.0
				*Comment		=	"The higher the value the less subtle the dance"
			}
			*Float = "DanceSpeed"
			{
				*DisplayName	=	"Dance Speed"
				*Value			=	1.0
				*Comment		=	"The higher the value the faster the dance."
			}
		}
		
		*Float = "RSpwnt"
		{
			*DisplayName	=	"Respawn time"
			*Value			=	-1
			*Comment		=	"This is the amount of time in seconds it takes the pickup to reappear."
			*Comment		=	"If the time is -1 then the pickup will never respawn."
		}
	}
}


;------------------------------------------------------------------------------
; Weapon Wheel
;------------------------------------------------------------------------------
*Object = "WeaponWheel"
{
	*Name			=	"Weapon Wheel"
	*Access 		=	"Protected"
	*Type			=	"Object"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*Group = "Slot 0"
		{
			*Combo = "WeaponSlot0"
			{
				*DisplayName	=	"Weapon"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The weapon that is to be used in this weapon wheel slot."
			}
			*BOOL = "Upgrade1Slot0"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 1"
				*Comment	 = "Does this weapon have the first upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "Upgrade2Slot0"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 2"
				*Comment	 = "Does this weapon have the second upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "StartsOffWithWeapon0"
			{
				*VALUE	= "True"
				*DISPLAYNAME = "Starts Off With Weapon?"
				*Comment = "Does the player start out with the weapon in this slot in his inventory?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG0Slot0"
			{
				*DisplayName	=	"Base Ammo"
				*Value			=	0
				*Comment		=	"If the player starts out with the weapon in this slot, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG1Slot0"
			{
				*DisplayName	=	"Ammo for Upgrade 1"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG2Slot0"
			{
				*DisplayName	=	"Ammo for Upgrade 2"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
		}


		*Group = "Slot 1"
		{
			*Combo = "WeaponSlot1"
			{
				*DisplayName	=	"Weapon"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The weapon that is to be used in this weapon wheel slot."
			}
			*BOOL = "Upgrade1Slot1"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 1"
				*Comment	 = "Does this weapon have the first upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "Upgrade2Slot1"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 2"
				*Comment	 = "Does this weapon have the second upgrade?"
				*Usage		 = "Public"
			}

			*BOOL = "StartsOffWithWeapon1"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Starts Off With Weapon?"
				*Comment = "Does the player start out with the weapon in this slot in his inventory?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG0Slot1"
			{
				*DisplayName	=	"Base Ammo"
				*Value			=	0
				*Comment		=	"If the player starts out with the weapon in this slot, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG1Slot1"
			{
				*DisplayName	=	"Ammo for Upgrade 1"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG2Slot1"
			{
				*DisplayName	=	"Ammo for Upgrade 2"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
		}

		*Group = "Slot 2"
		{
			*Combo = "WeaponSlot2"
			{
				*DisplayName	=	"Weapon"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The weapon that is to be used in this weapon wheel slot."
			}
			*BOOL = "Upgrade1Slot2"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 1"
				*Comment	 = "Does this weapon have the first upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "Upgrade2Slot2"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 2"
				*Comment	 = "Does this weapon have the second upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "StartsOffWithWeapon2"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Starts Off With Weapon?"
				*Comment = "Does the player start out with the weapon in this slot in his inventory?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG0Slot2"
			{
				*DisplayName	=	"Base Ammo"
				*Value			=	0
				*Comment		=	"If the player starts out with the weapon in this slot, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG1Slot2"
			{
				*DisplayName	=	"Ammo for Upgrade 1"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG2Slot2"
			{
				*DisplayName	=	"Ammo for Upgrade 2"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
		}

		*Group = "Slot 3"
		{
			*Combo = "WeaponSlot3"
			{
				*DisplayName	=	"Weapon"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The weapon that is to be used in this weapon wheel slot."
			}
			*BOOL = "Upgrade1Slot3"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 1"
				*Comment	 = "Does this weapon have the first upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "Upgrade2Slot3"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 2"
				*Comment	 = "Does this weapon have the second upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "StartsOffWithWeapon3"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Starts Off With Weapon?"
				*Comment = "Does the player start out with the weapon in this slot in his inventory?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG0Slot3"
			{
				*DisplayName	=	"Base Ammo"
				*Value			=	0
				*Comment		=	"If the player starts out with the weapon in this slot, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG1Slot3"
			{
				*DisplayName	=	"Ammo for Upgrade 1"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG2Slot3"
			{
				*DisplayName	=	"Ammo for Upgrade 2"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
		}

		*Group = "Slot 4"
		{
			*Combo = "WeaponSlot4"
			{
				*DisplayName	=	"Weapon"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The weapon that is to be used in this weapon wheel slot."
			}
			*BOOL = "Upgrade1Slot4"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 1"
				*Comment	 = "Does this weapon have the first upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "Upgrade2Slot4"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 2"
				*Comment	 = "Does this weapon have the second upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "StartsOffWithWeapon4"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Starts Off With Weapon?"
				*Comment = "Does the player start out with the weapon in this slot in his inventory?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG0Slot4"
			{
				*DisplayName	=	"Base Ammo"
				*Value			=	0
				*Comment		=	"If the player starts out with the weapon in this slot, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG1Slot4"
			{
				*DisplayName	=	"Ammo for Upgrade 1"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG2Slot4"
			{
				*DisplayName	=	"Ammo for Upgrade 2"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
		}

		*Group = "Slot 5"
		{
			*Combo = "WeaponSlot5"
			{
				*DisplayName	=	"Weapon"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The weapon that is to be used in this weapon wheel slot."
			}
			*BOOL = "Upgrade1Slot5"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 1"
				*Comment	 = "Does this weapon have the first upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "Upgrade2Slot5"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 2"
				*Comment	 = "Does this weapon have the second upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "StartsOffWithWeapon5"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Starts Off With Weapon?"
				*Comment = "Does the player start out with the weapon in this slot in his inventory?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG0Slot5"
			{
				*DisplayName	=	"Base Ammo"
				*Value			=	0
				*Comment		=	"If the player starts out with the weapon in this slot, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG1Slot5"
			{
				*DisplayName	=	"Ammo for Upgrade 1"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG2Slot5"
			{
				*DisplayName	=	"Ammo for Upgrade 2"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
		}
		*Group = "Slot 6"
		{
			*Combo = "WeaponSlot6"
			{
				*DisplayName	=	"Weapon"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The weapon that is to be used in this weapon wheel slot."
			}
			*BOOL = "Upgrade1Slot6"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 1"
				*Comment	 = "Does this weapon have the first upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "Upgrade2Slot6"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 2"
				*Comment	 = "Does this weapon have the second upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "StartsOffWithWeapon6"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Starts Off With Weapon?"
				*Comment = "Does the player start out with the weapon in this slot in his inventory?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG0Slot6"
			{
				*DisplayName	=	"Base Ammo"
				*Value			=	0
				*Comment		=	"If the player starts out with the weapon in this slot, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG1Slot6"
			{
				*DisplayName	=	"Ammo for Upgrade 1"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG2Slot6"
			{
				*DisplayName	=	"Ammo for Upgrade 2"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
		}

		*Group = "Slot 7"
		{
			*Combo = "WeaponSlot7"
			{
				*DisplayName	=	"Weapon"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The weapon that is to be used in this weapon wheel slot."
			}
			*BOOL = "Upgrade1Slot7"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 1"
				*Comment	 = "Does this weapon have the first upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "Upgrade2Slot7"
			{
				*Value			=	0
				*DisplayName	=	"Upgrade 2"
				*Comment	 = "Does this weapon have the second upgrade?"
				*Usage		 = "Public"
			}
			*BOOL = "StartsOffWithWeapon7"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Starts Off With Weapon?"
				*Comment = "Does the player start out with the weapon in this slot in his inventory?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG0Slot7"
			{
				*DisplayName	=	"Base Ammo"
				*Value			=	0
				*Comment		=	"If the player starts out with the weapon in this slot, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG1Slot7"
			{
				*DisplayName	=	"Ammo for Upgrade 1"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
			*Int = "AmmoUPG2Slot7"
			{
				*DisplayName	=	"Ammo for Upgrade 2"
				*Value			=	0
				*Comment		=	"If the player starts out with this upgrade, how much ammo comes along with it?"
				*Usage		 = "Public"
			}
		}


;			 *Combo = "WeaponSlot1"
;			 {
;				 *DisplayName	 =	 "WeaponSlot1"
;				 *Value 		 =	 0
;				 *ComboList 	 =
;				 {
;					 ; this list must be kept synchronized with WeaponInfo.h!
;					 "War Club",
;					 "Bow",
;					 "TekBow",
;					 "Grenade",
;					 "Pistol",
;					 "Sniper Pistol",
;					 "Shotgun",
;					 "Shotgun MultiLoad",
;					 "Machine Gun",
;					 "Machine Gun Flechette",
;					 "Rocket Launcher",
;					 "Cluster Launcher",
;					 "Swarm Launcher",
;					 "Tech Weapon Pulse",
;					 "Tech Weapon Beam",
;					 "Tech Weapon Full",
;					 "Flame Thrower",
;					 "Guided Device",
;					 "Gravity Disrupter",
;					 "Gravity Disrupter Grapple",
;					 "Dark Matter Cube"
;				 }
;				 *Comment		 =	 "The weapon that is to be used in this weapon wheel slot."
;				 *Usage 	  = "Public"
;			 }
;			 *BOOL = "HasWeaponInSlot1"
;			 {
;				 *VALUE  = "False"
;				 *DISPLAYNAME = "Has Weapon in Slot 1?"
;				 *Comment = "Does the player start out with the weapon in this slot in his inventory?"
;				 *Usage 	  = "Public"
;			 }
;			 *Int = "ClipsForSlot1"
;			 {
;				 *DisplayName	 =	 "Ammo Clips For Slot 1"
;				 *Value 		 =	 1
;				 *Comment		 =	 "If the player starts out with the weapon in this slot, how many clips of ammo comes along with it."
;				 *Usage 	  = "Public"
;			 }
;
;
	}

}

;*Object = "WeaponAmmo"
;{
;	 *Name			 =	 "Weapon Ammo"
;	 *Access		 =	 "Public"
;	 *Type			 =	 "Object"
;
;	 ;-----------------------------------
;	 ; Variables
;	 ;-----------------------------------
;	 *Variables  = 
;	 {
;		 *Int = "AmmoPerClip"
;		 {
;			 *DisplayName	 =	 "Ammo Per Clip"
;			 *Value 		 =	 5
;			 *Min			 =	 1
;			 *Max			 =	 100
;			 *Comment		 =	 "The number of rounds of ammo can each clip hold."
;		 }
;
;		 *Int = "AmmoUsedPerShot"
;		 {
;			 *DisplayName	 =	 "Ammo Used Per Shot"
;			 *Value 		 =	 1
;			 *Min			 =	 0
;			 *Max			 =	 100
;			 *Comment		 =	 "The number of rounds of ammo that is used each time the weapon is fired."
;		 }
;
;		 *Float = "MuzzleRidingXFactor"
;		 {
;			 *DisplayName	 =	 "Muzzle Riding X Factor"
;			 *Value 		 =	 0.1
;			 *Min			 =	 0.0
;			 *Max			 =	 10.0
;			 *Comment		 =	 "The amount by which the weapon will move left/right while firing."
;		 }
;
;		 *Float = "MuzzleRidingYFactor"
;		 {
;			 *DisplayName	 =	 "Muzzle Riding Y Factor"
;			 *Value 		 =	 0.1
;			 *Min			 =	 0.0
;			 *Max			 =	 10.0
;			 *Comment		 =	 "The amount by which the weapon will move up/down while firing."
;		 }
;	 }
;}
;------------------------------------------------------------------------------
; Weapon Object
;------------------------------------------------------------------------------
*OBJECT = "WeaponObject"
{
	*NAME	= "Weapon"
;	 *INHERITS = "WeaponAmmo"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "False"

	*VARIABLES = 
	{
		*Combo = "Weapon"
		{
			*DisplayName	=	"Weapon"
			*Value			=	0
			*ComboList		=
			{
				; this list must be kept synchronized with WeaponInfo.h!
				"War Club",
				"Bow",
				"TekBow",
				"Grenade",
				"Pistol",
				"Shotgun",
				"Machine Gun",
				"Launcher",
				"Tek Weapon",
				"Flame Thrower",
				"Guided Device",
				"Gravity Disrupter",
				"Dark Matter Cube",
				"Crossbow"
			}
			*Comment		=	"The weapon type."
		}

		*Group = "Base Weapon"
		{
			*PICKFROMFILE = "WeaponNameBase"
			{
				*VALUE = "ID_NONE"
				*FILE = "$/\data\EnglishText.txt"
				*DISPLAYNAME = "Weapon Name"
			}


			*BOOL = "UsableUnderWaterBase"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Usable Under Water?"
				*Comment = "Can this weapon be used underwater?"
			}

			*BOOL = "TwoHandedWeaponBase"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Two Handed Weapon?"
				*Comment = "Is this a two handed weapon?"
			}

			*BOOL = "UsableWhenClimbingBase"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Usable When Climbing?"
				*Comment = "Can this weapon be used while climbing?"
			}

			*Combo = "WeaponTypeBase"
			{
				*DisplayName	=	"Weapon Type"
				*Value			=	0
				*ComboList		=
				{
					"Melee",
					"Primitive Projectile",
					"Thrown",
					"Ballistic"
				}
			}

			*Group =  "Onscreen Position"
			{
				*Float = "PositionXBase"
				{
					*DisplayName	=	"X"
					*Value			=	0.0
				}
				*Float = "PositionYBase"
				{
					*DisplayName	=	"Y"
					*Value			=	0.0
				}
				*Float = "PositionZBase"
				{
					*DisplayName	=	"Z"
					*Value			=	0.0
				}
				*Float = "ScaleBase"
				{
					*DisplayName	=	"Scale"
					*Value			=	1.0
				}
			}

			*Group =  "Ammo"
			{
				*Int = "AmmoPerClipBase"
				{
					*DisplayName	=	"Ammo Per Clip"
					*Value			=	5
					*Min			=	1
					*Max			=	100
					*Comment		=	"The number of rounds of ammo can each clip hold."
				}

				*Int = "AmmoUsedPerShotBase"
				{
					*DisplayName	=	"Ammo Used Per Shot"
					*Value			=	1
					*Min			=	0
					*Max			=	100
					*Comment		=	"The number of rounds of ammo that is used each time the weapon is fired."
				}

				*Float = "MuzzleRidingXFactorBase"
				{
					*DisplayName	=	"Muzzle Riding X Factor"
					*Value			=	0.1
					*Min			=	0.0
					*Max			=	10.0
					*Comment		=	"The amount by which the weapon will move left/right while firing."
				}

				*Float = "MuzzleRidingYFactorBase"
				{
					*DisplayName	=	"Muzzle Riding Y Factor"
					*Value			=	0.1
					*Min			=	0.0
					*Max			=	10.0
					*Comment		=	"The amount by which the weapon will move up/down while firing."
				}
			}
		}


		*Group = "Upgrade1"
		{
			*BOOL = "IsUpgrade1"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Level 1 Upgrade?"
				*Comment = "Set to True if this weapon has this level upgrade. Fill out the rest of the data in this group"
				*Comment = ""
				*Comment = "If False, the weapon will not have this level upgrade and the rest of the data in this group"
				*Comment = "will be ignored."
			}

;			 *Combo = "Upgrade1"
;			 {
;				 *DisplayName	 =	 "Upgrade 1"
;				 *Value 		 =	 0
;				 *ComboList 	 =
;				 {
;					 "None",
;					 "1",
;					 "2"
;				 }
;				 *Comment	  = "The upgrade, if any, this weapon has."
;			 }

			*PICKFROMFILE = "WeaponNameUpgrade1"
			{
				*VALUE = "ID_NONE"
				*FILE = "$/\data\EnglishText.txt"
				*DISPLAYNAME = "Weapon Name"
			}


			*BOOL = "UsableUnderWaterUpgrade1"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Usable Under Water?"
				*Comment = "Can this weapon be used underwater?"
			}

			*BOOL = "TwoHandedWeaponUpgrade1"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Two Handed Weapon?"
				*Comment = "Is this a two handed weapon?"
			}

			*BOOL = "UsableWhenClimbingUpgrade1"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Usable When Climbing?"
				*Comment = "Can this weapon be used while climbing?"
			}

			*Combo = "WeaponTypeUpgrade1"
			{
				*DisplayName	=	"Weapon Type"
				*Value			=	0
				*ComboList		=
				{
					"Melee",
					"Primitive Projectile",
					"Thrown",
					"Ballistic"
				}
			}

			*Group =  "Onscreen Position"
			{
				*Float = "PositionXUpgrade1"
				{
					*DisplayName	=	"X"
					*Value			=	0.0
				}
				*Float = "PositionYUpgrade1"
				{
					*DisplayName	=	"Y"
					*Value			=	0.0
				}
				*Float = "PositionZUpgrade1"
				{
					*DisplayName	=	"Z"
					*Value			=	-1.5
				}
				*Float = "ScaleUpgrade1"
				{
					*DisplayName	=	"Scale"
					*Value			=	1.0
				}
			}

			*Group =  "Ammo"
			{
				*Int = "AmmoPerClipUpgrade1"
				{
					*DisplayName	=	"Ammo Per Clip"
					*Value			=	5
					*Min			=	1
					*Max			=	100
					*Comment		=	"The number of rounds of ammo can each clip hold."
				}

				*Int = "AmmoUsedPerShotUpgrade1"
				{
					*DisplayName	=	"Ammo Used Per Shot"
					*Value			=	1
					*Min			=	0
					*Max			=	100
					*Comment		=	"The number of rounds of ammo that is used each time the weapon is fired."
				}

				*Float = "MuzzleRidingXFactorUpgrade1"
				{
					*DisplayName	=	"Muzzle Riding X Factor"
					*Value			=	0.1
					*Min			=	0.0
					*Max			=	10.0
					*Comment		=	"The amount by which the weapon will move left/right while firing."
				}

				*Float = "MuzzleRidingYFactorUpgrade1"
				{
					*DisplayName	=	"Muzzle Riding Y Factor"
					*Value			=	0.1
					*Min			=	0.0
					*Max			=	10.0
					*Comment		=	"The amount by which the weapon will move up/down while firing."
				}
			}
		}
	
		*Group = "Upgrade2"
		{
			*BOOL = "IsUpgrade2"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Level 2 Upgrade?"
				*Comment = "Set to True if this weapon has this level upgrade. Fill out the rest of the data in this group"
				*Comment = ""
				*Comment = "If False, the weapon will not have this level upgrade and the rest of the data in this group"
				*Comment = "will be ignored."
			}

			*PICKFROMFILE = "WeaponNameUpgrade2"
			{
				*VALUE = "ID_NONE"
				*FILE = "$/\data\EnglishText.txt"
				*DISPLAYNAME = "Weapon Name"
			}


			*BOOL = "UsableUnderWaterUpgrade2"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Usable Under Water?"
				*Comment = "Can this weapon be used underwater?"
			}

			*BOOL = "TwoHandedWeaponUpgrade2"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Two Handed Weapon?"
				*Comment = "Is this a two handed weapon?"
			}

			*BOOL = "UsableWhenClimbingUpgrade2"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Usable When Climbing?"
				*Comment = "Can this weapon be used while climbing?"
			}

			*Combo = "WeaponTypeUpgrade2"
			{
				*DisplayName	=	"Weapon Type"
				*Value			=	0
				*ComboList		=
				{
					"Melee",
					"Primitive Projectile",
					"Thrown",
					"Ballistic"
				}
			}

			*Group =  "Onscreen Position"
			{
				*Float = "PositionXUpgrade2"
				{
					*DisplayName	=	"X"
					*Value			=	0.0
				}
				*Float = "PositionYUpgrade2"
				{
					*DisplayName	=	"Y"
					*Value			=	0.0
				}
				*Float = "PositionZUpgrade2"
				{
					*DisplayName	=	"Z"
					*Value			=	-1.5
				}
				*Float = "ScaleUpgrade2"
				{
					*DisplayName	=	"Scale"
					*Value			=	1.0
				}
			}

			*Group =  "Ammo"
			{
				*Int = "AmmoPerClipUpgrade2"
				{
					*DisplayName	=	"Ammo Per Clip"
					*Value			=	5
					*Min			=	1
					*Max			=	100
					*Comment		=	"The number of rounds of ammo can each clip hold."
				}

				*Int = "AmmoUsedPerShotUpgrade2"
				{
					*DisplayName	=	"Ammo Used Per Shot"
					*Value			=	1
					*Min			=	0
					*Max			=	100
					*Comment		=	"The number of rounds of ammo that is used each time the weapon is fired."
				}

				*Float = "MuzzleRidingXFactorUpgrade2"
				{
					*DisplayName	=	"Muzzle Riding X Factor"
					*Value			=	0.1
					*Min			=	0.0
					*Max			=	10.0
					*Comment		=	"The amount by which the weapon will move left/right while firing."
				}

				*Float = "MuzzleRidingYFactorUpgrade2"
				{
					*DisplayName	=	"Muzzle Riding Y Factor"
					*Value			=	0.1
					*Min			=	0.0
					*Max			=	10.0
					*Comment		=	"The amount by which the weapon will move up/down while firing."
				}
			}
		}
	}
}

*OBJECT = "WarClubObject"
{
	*NAME	= "WarClubObject"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*Float = "RelaxDelay"
		{
			*DisplayName	=	"Relax Delay"
			*Value			=	5.0
			*Comment		=	"The amount of time, in seconds, to stay in Idle Mode before"
			*Comment		=	"entering Relax Idle Mode."
			*Usage		 = "Protected"
		}
	}

	*AIMODES = 
	{
		IdleRelax,	  
		IdleRelaxEnter,
		IdleRelaxExit, 
		Enter,		  
		Exit,		  
		Idle,		  
		Fire,		  
		FireReturn,   
		Combo1, 	  
		Combo1Return,  
		Combo2, 	  
		Combo2Return,  
		Combo3, 	  
		Combo3Return,  
		Charge, 	  
		ChargeReturn
	}
}

*OBJECT = "BowObject"
{
	*NAME	= "BowObject"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*FilePick = "SparkleParticle"
		{
			*DISPLAYNAME = "Sparkle Particle"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
		*FilePick = "NormalArrow"
		{
			*DISPLAYNAME = "Normal Arrow"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
		*FilePick = "ExplosiveArrow"
		{
			*DISPLAYNAME = "Explosive Arrow"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
		*Float = "SnipeFOV"
		{
			*DisplayName	=	"Snipe FOV"
			*Value			=	18.0
			*Min			=	10.0
			*Max			=	90.0
			*Comment		=	"The field of view used for snipe mode."
			*Comment		=	"Normal is ~75."
			*Comment		=	"The smaller the number means the more you zoom in."
			*Usage		 = "Protected"
		}
		*Float = "HoldMod"
		{
			*DisplayName	=	"Hold Modifier"
			*Value			=	2.0
			*Min			=	0.10
			*Max			=	90.0
			*Comment		=	"This is the amount of effect each second has on the Bow Wobble"
			*Usage		 = "Protected"
		}
		*Float = "BaseWobble"
		{
			*DisplayName	=	"Base Wobble"
			*Value			=	4.0
			*Min			=	1.0
			*Max			=	90.0
			*Comment		=	"This is the base value used for wobble rotation."
			*Usage		 = "Protected"
		}
		*Float = "RandWobble"
		{
			*DisplayName	=	"Random Wobble"
			*Value			=	2.0
			*Min			=	1.0
			*Max			=	90.0
			*Comment		=	"This is a random amount of wobble added to rotation."
			*Usage		 = "Protected"
		}
	}

	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		PullBack,
		Hold,
		Release,
		ReleaseDbl,
	        Reload,
		DefaultIdle,
	        SnipeEnter,
	        SnipeExit,
		ShortFire,
		SwitchToExplosive,
		SwitchToNormal,
		ShortExplodeFire,
		EmptyToLoaded,
		FireToEmpty,
		IdleEmpty,
		ExitEmpty
	}
}


*OBJECT = "Shotgun"
{
	*NAME	= "Shotgun"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		Fire,
		Fire2,
		Fire3,
		Fire4,
	        Reload,
		Switch,
		DefaultIdle
	}
	*Sound = "DryClick"
	{
		*DisplayName    =   "No Ammo Click Sound"
	}
}

*OBJECT = "SuperShotgun"
{
	*NAME	= "SuperShotgun"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		Fire,
	        Reload,
		BigShot
	}
}

*OBJECT = "FlameThrower"
{
	*NAME	= "FlameThrower"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
        *FilePick           =   "FTName"
        {
            *DisplayName    =   "Flame Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Flame Thrower particle to spawn."
        }
		*Sound = "DryClick"
		{
			*DisplayName    =   "No Ammo Click Sound"
		}
	}

	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		DefaultIdle,
		Fire,
		FireLoop,
		FireEnd,
        NapalmLaunch,
        Reload,
		Switch
	}
}

*OBJECT = "MiniGun"
{
	*NAME	= "MiniGun"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	*AIMODES = 
	{
		Flc_Enter,
		Flc_Exit,
		Flc_Fire,
		Flc_Idle,
		Flc_to_Mni,
		Mni_Enter,
		Mni_Exit,
		Mni_Fire,
		Mni_to_Flc,
		Mni_Idle,
		Mni_SpinUp,
		Mni_SpinDown,
		Upg_Flc_Enter,
		Upg_Mni_Enter
	}
	*Sound = "DryClick"
	{
		*DisplayName    =   "No Ammo Click Sound"
	}
	*Sound = "SpinSound"
	{
		*DisplayName    =   "Sound to use for both the spin up and spin down."
	}
}

*OBJECT = "GasGrenade"
{
	*NAME	= "GasGrenade"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		Fire,
        	Reload
	}
}

*OBJECT = "Mine"
{
	*NAME	= "Mine"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		Fire,
        	Reload
	}
}

*OBJECT = "RocketLauncher"
{
	*NAME	= "RocketLauncher"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	*AIMODES = 
	{
		Enter,
		RocketExit,
		SwarmExit,
		NukeExit,
		EmptyToRocket,
		EmptyToSwarm,
		EmptyToNuke,
		RocketToEmpty,
		SwarmToEmpty,
		NukeToEmpty,
		RocketFire,
		SwarmFire,
		NukeCharge,
		NukeFire,
		RocketIdle,
		SwarmIdle,
		NukeIdle,
		RocketDefaultIdle,
		SwarmDefaultIdle,
		NukeDefaultIdle,
	}

	*Variables	= 
	{
		*FilePick           =   "CrosshairName"
		{
			*DisplayName    =   "Crosshair Name"
			*Value          =   ""
			*Directory      =   "$\Data\Textures\"
			*Extension      =   "bmp"
			*Extension      =   "jpg"
			*Extension      =   "tga"
			*Comment        =   "The sprite used for the Rocket Launcher lock crosshair"
		}

		*Sound = "DryClick"
		{
			*DisplayName    =   "No Ammo Click Sound"
		}

		*Sound = "LockOnSound"
        	{
                	*DisplayName    =   "Swarm Bore Lock On Sound"
		}
	}
}

*OBJECT = "TekBow"
{
	*NAME	= "TekBow"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*Float = "SnipeFOV"
		{
			*DisplayName	=	"Snipe FOV"
			*Value			=	18.0
			*Min			=	10.0
			*Max			=	90.0
			*Comment		=	"The field of view used for snipe mode."
			*Comment		=	"Normal FOV is ~75."
			*Comment		=	"The smaller the number means the more you zoom in."
			*Usage		 = "Protected"
		}
	        *FilePick           =   "SPOlName"
	        {
        	    *DisplayName    =   "Sniper Overlay"
	            *Value          =   ""
        	    *Directory      =   "$\Data\Textures\"
	            *Extension      =   "tga"
        	    *Extension      =   "bmp"
	            *Comment        =   "This is the Snipe mode screen overlay."
        	}
		*Float = "BaseWobble"
		{
			*DisplayName	=	"Base Wobble"
			*Value			=	4.0
			*Min			=	1.0
			*Max			=	90.0
			*Comment		=	"This is the base value used for wobble rotation."
			*Usage		 = "Protected"
		}
		*Float = "RandWobble"
		{
			*DisplayName	=	"Random Wobble"
			*Value			=	2.0
			*Min			=	1.0
			*Max			=	90.0
			*Comment		=	"This is a random amount of wobble added to rotation."
			*Usage		 = "Protected"
		}
		*FilePick = "NormalArrow"
		{
			*DISPLAYNAME = "Normal Arrow"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
		*FilePick = "ExplosiveArrow"
		{
			*DISPLAYNAME = "Explosive Arrow"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
		*FilePick = "PoisonArrow"
		{
			*DISPLAYNAME = "Poison Arrow"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
	}

	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		PullBack,
		Hold,
		Release,
		Reload,
		DefaultIdle,
		SnipeEnter,
		SnipeExit,
		SnipeFire,
		SwitchToExplosive,
		SwitchToPoison,
		SwitchToBroadHead,
		EmptyToLoaded,
		FireToEmpty,
		IdleEmpty,
		ExitEmpty
	}
}


*OBJECT = "CrossBow"
{
	*NAME	= "CrossBow"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*Float = "SnipeFOV"
		{
			*DisplayName	=	"Snipe FOV"
			*Value			=	18.0
			*Min			=	10.0
			*Max			=	90.0
			*Comment		=	"The field of view used for snipe mode."
			*Comment		=	"Normal FOV is ~75."
			*Comment		=	"The smaller the number means the more you zoom in."
			*Usage		 = "Protected"
		}
	        *FilePick           =   "SPOlName"
	        {
        	    *DisplayName    =   "Sniper Overlay"
	            *Value          =   ""
        	    *Directory      =   "$\Data\Textures\"
	            *Extension      =   "tga"
        	    *Extension      =   "bmp"
	            *Comment        =   "This is the Snipe mode screen overlay."
        	}
		*Float = "BaseWobble"
		{
			*DisplayName	=	"Base Wobble"
			*Value			=	4.0
			*Min			=	1.0
			*Max			=	90.0
			*Comment		=	"This is the base value used for wobble rotation."
			*Usage		 = "Protected"
		}
		*Float = "RandWobble"
		{
			*DisplayName	=	"Random Wobble"
			*Value			=	2.0
			*Min			=	1.0
			*Max			=	90.0
			*Comment		=	"This is a random amount of wobble added to rotation."
			*Usage		 = "Protected"
		}
		*FilePick = "NormalArrow"
		{
			*DISPLAYNAME = "Normal Arrow"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
		*FilePick = "ExplosiveArrow"
		{
			*DISPLAYNAME = "Explosive Arrow"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
		*FilePick = "PoisonArrow"
		{
			*DISPLAYNAME = "Poison Arrow"
			*Value		=	""
			*Directory      =   "$\Data\Particle"
			*Extension      =   "par"
			*Extension      =   "eff"
		}
	}

	*AIMODES = 
	{
		Enter,
		ExitA,
		ExitB,
		IdleA,
		IdleB,
		PullBack,
		Hold,
		Release,
        Reload,
		DefaultIdle,
        SnipeEnterA,
		SnipeEnterB,
        SnipeExitA,
        SnipeExitB,
		SnipeFire,
		SwitchToExplosive,
		SwitchToPoison,
		SwitchToBroadHead
	}
}


*OBJECT = "DarkMatterCube"
{
	*NAME	= "DarkMatterCube"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*Float = "MaxHoldTime"
		{
			*DisplayName	=	"Max Hold Time"
			*Value			=	2
			*Comment		=	"The amount of time, in seconds, that the code pays attention"
			*Comment		=	"to holding down the button."
			*Usage		 = "Public"
		}
		*Float = "MaxThrowDist"
		{
			*DisplayName	=	"Max Throw Distance"
			*Value			=	12
			*Comment		=	"This is the maximum velocity (which relates to the maximum distance)"
			*Comment		=	"that the grenade has upon leaving Tal'Set's hand."
			*Usage		 = "Public"
		}
		*Float = "MinThrowDist"
		{
			*DisplayName	=	"Min Throw Distance"
			*Value			=	5
			*Comment		=	"This is the minimum velocity (which relates to the maximum distance)"
			*Comment		=	"that the grenade has upon leaving Tal'Set's hand."
			*Usage		 = "Public"
		}
	}

	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		DefaultIdle,
		Fire,
        ImplodeTransform,
        ExplodeTransform,
		Pullback
	}
}

*OBJECT = "SniperPistol"
{
	*NAME	= "SniperPistol"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*Float = "SnipeFOV"
		{
			*DisplayName	=	"Snipe FOV"
			*Value			=	18.0
			*Min			=	10.0
			*Max			=	90.0
			*Comment		=	"The field of view used for snipe mode."
			*Comment		=	"Normal FOV is ~75."
			*Comment		=	"The smaller the number means the more you zoom in."
			*Usage		 = "Protected"
		}

        *FilePick           =   "SPOlName"
        {
            *DisplayName    =   "Sniper Overlay"
            *Value          =   ""
            *Directory      =   "$\Data\Textures\"
            *Extension      =   "tga"
            *Extension      =   "bmp"
            *Comment        =   "This is the Snipe mode screen overlay."
        }

		*Sound = "DryClick"
		{
			*DisplayName    =   "No Ammo Click Sound"
		}


        *Group = "Kick"
        {
			*Float = "SKTP"
			{
				*DisplayName	=	"Kick Top Pitch Static"
				*Value			=	7.5
				*Min			=	-90.0
				*Max			=	90.0
				*Comment		=	"Base Value for the Pitch used at the Top of the Snipe Kick."
				*Usage			=	"Protected"
			}
			*Float = "SKTY"
			{
				*DisplayName	=	"Kick Top Yaw Static"
				*Value			=	0.0
				*Min			=	-90.0
				*Max			=	90.0
				*Comment		=	"Base Value for the Yaw used at the Top of the Snipe Kick."
				*Usage			=	"Protected"
			}
			*Float = "RKTP"
			{
				*DisplayName	=	"Kick Top Pitch Random"
				*Value			=	2.0
				*Min			=	-90.0
				*Max			=	90.0
				*Comment		=	"Random adjustment to the Pitch used at the Top of the Kick."
				*Usage			=	"Protected"
			}
			*Float = "RKTY"
			{
				*DisplayName	=	"Kick Top Yaw Random"
				*Value			=	2.0
				*Min			=	-90.0
				*Max			=	90.0
				*Comment		=	"Random adjustment to the Yaw used at the Top of the Kick."
				*Usage			=	"Protected"
			}
			*Float = "SKBP"
			{
				*DisplayName	=	"Kick Bottom Pitch Static"
				*Value			=	0.50
				*Min			=	-90.0
				*Max			=	90.0
				*Comment		=	"Base Value for the Pitch used at the Bottom of the Snipe Kick."
				*Usage			=	"Protected"
			}
			*Float = "SKBY"
			{
				*DisplayName	=	"Kick Bottom Yaw Static"
				*Value			=	0.0
				*Min			=	-90.0
				*Max			=	90.0
				*Comment		=	"Base Value for the Yaw used at the Bottom of the Snipe Kick."
				*Usage			=	"Protected"
			}
			*Float = "RKBP"
			{
				*DisplayName	=	"Kick Bottom Pitch Random"
				*Value			=	2.0
				*Min			=	-90.0
				*Max			=	90.0
				*Comment		=	"Random adjustment to the Pitch used at the Bottom of the Kick."
				*Usage			=	"Protected"
			}
			*Float = "RKBY"
			{
				*DisplayName	=	"Kick Bottom Yaw Random"
				*Value			=	3.0
				*Min			=	-90.0
				*Max			=	90.0
				*Comment		=	"Random adjustment to the Yaw used at the Bottom of the Kick."
				*Usage			=	"Protected"
			}
		}

	}

	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		Fire,
        	Reload,
		DefaultIdle,
	        SnipeEnter,
        	SnipeExit,
		SnipeFire,
		UpgradeEnter
	}
}

*OBJECT = "GuidedDevice"
{
	*NAME	= "GuidedDevice"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		Fire,
		DefaultIdle
	}
}

*OBJECT = "SpikedMine"
{
	*NAME	= "SpikedMine"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*Float = "MaxHoldTime"
		{
			*DisplayName	=	"Max Hold Time"
			*Value			=	"2.0000"
			*Comment		=	"The amount of time, in seconds, that the code pays attention"
			*Comment		=	"to holding down the button."
			*Usage		 = "Public"
		}
		*Float = "MaxThrowDist"
		{
			*DisplayName	=	"Max Throw Distance"
			*Value			=	"12.0000"
			*Comment		=	"This is the maximum velocity (which relates to the maximum distance)"
			*Comment		=	"that the grenade has upon leaving Tal'Set's hand."
			*Usage		 = "Public"
		}
		*Float = "MinThrowDist"
		{
			*DisplayName	=	"Min Throw Distance"
			*Value			=	"5.0000"
			*Comment		=	"This is the minimum velocity (which relates to the maximum distance)"
			*Comment		=	"that the grenade has upon leaving Tal'Set's hand."
			*Usage		 = "Public"
		}
	}



	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		Fire,
		DefaultIdle,
        SpikeIdle,
        DefaultSpikeIdle,
        SpikeExpand,
        SpikeRetract,
        SpikeFire,
        DetonatorDraw,
        DetonatorExit,
        DetonatorFire,
        DetonatorIdle,
        DefaultDetonatorIdle,
		SpikePullBack,
		PullBack,
		SpikeDraw,
		SpikeExit
	}
}


*OBJECT = "GravityDisrupter"
{
	*NAME	= "GravityDisrupter"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
        *FilePick           =   "GDBName"
        {
            *DisplayName    =   "Gravity Beam"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Gravity Beam particle to spawn."
        }
		*Sound = "DryClick"
		{
			*DisplayName    =   "No Ammo Click Sound"
		}
		*Sound = "ChargeWaveSound"
		{
			*DisplayName    =   "Wave Charge Sound."
		}
		*Sound = "GrappleIdleSound"
		{
			*DisplayName    =   "Grapple Idle Sound"
		}
		*Sound = "ChargeFullSound"
        	{
                	*DisplayName    =   "Full Charge Beep"
		}
	}

	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		WaveFire,
		GrappleFire,
		GrappleOut,
		GrappleHit,
		GrappleHold,
		GrappleRelease,
		DefaultIdle
		WaveCharge,
		WaveChargeIdle,
		WaveShortFire,
		GrappleSpinUp,
		Switch1,
		Switch2,
		GrappleRelease2,
		WaveDefaultIdle,
		WaveIdle,
		UpgExit
	}
}


*OBJECT = "TekWeapon"
{
	*NAME	= "TekWeapon"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"


	*AIMODES = 
	{
		Enter,
		DefaultIdle,
		SmartExit,
		SmartIdle,
		SmartDefaultIdle,
		SmartFire,
		PulseExit,
		PulseIdle,
		PulseDefaultIdle,
		PulseFire,
		BeamExit,
		BeamIdle,
		BeamDefaultIdle,
		BeamFire,
		SmartToPulse,
		SmartToBeam,
		PulseToBeam,
		PulseToSmart,
		BeamToPulse
	}

    *Sound = "DryClick"
    {
        *DisplayName    =   "No Ammo Click Sound"
    }
}

*OBJECT = "SpikedMineObject"
{
	*NAME	= "SpikedMineObject"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
        *FilePick           =   "SMExpName"
        {
            *DisplayName    =   "Explosion Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Spiked Mine explosion particle to spawn."
        }


		*Float				= "ArmTime"
		{
			*DisplayName	=	"Arming Time"
			*Value			=	5.0
			*Min			=	0.0
			*Comment		=	"Time in Seconds to wait before arming the Spiked Mine."
		}

		*Float				= "BoomTime"
		{
			*DisplayName	=	"Explode Time"
			*Value			=	20.0
			*Min			=	0.0
			*Comment		=	"Time in Seconds to wait before the Spiked Mine explodes on its own."
		}

		*Float				= "Distance"
		{
			*DisplayName	=	"Scan Distance"
			*Value			=	20.0
			*Min			=	0.0
			*Comment		=	"Radius of the Collision sphere that determines if the Spiked Mine blows up."
		}
	}

}

*OBJECT = "DarkMatterObject"
{
	*NAME	= "DarkMatterObject"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
        *FilePick           =   "DMExpName"
        {
            *DisplayName    =   "Explosion Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Dark Matter explosion particle to spawn."
        }


		*Float = "DMTmOut"
		{
			*DisplayName	=	"Time Out"
			*Value			=	60.0
			*Min			=	0.0
			*Comment		=	"Time in Seconds to wait before the Dark Matter explodes on its own."
		}

		*Float = "DMExActRad"
		{
			*DisplayName	=	"Explosion Activation Radius"
			*Value			=	2.0
			*Min			=	0.0
			*Comment		=	"Distance in feet that activates the explosion cube."
		}

		*Float = "DMExDamRad"
		{
			*DisplayName	=	"Explosion Damage Radius"
			*Value			=	15.0
			*Min			=	0.0
			*Comment		=	"Distance in feet from the cube that enemies will be instantly killed."
		}

        *FilePick           =   "DMImName"
        {
            *DisplayName    =   "Implosion Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Dark Matter Implosion particle to spawn."
        }

		*Float = "DMImActRad"
		{
			*DisplayName	=	"Implode Activation Radius"
			*Value			=	2.0
			*Min			=	0.0
			*Comment		=	"Distance in feet that activates the Implosion cube."
		}

		*Float = "DMImDamRad"
		{
			*DisplayName	=	"Implode Damage Radius"
			*Value			=	15.0
			*Min			=	0.0
			*Comment		=	"Distance in feet from the cube that enemies will be instantly killed."
		}

		*Float = "DMImTm"
		{
			*DisplayName	=	"Implode Time"
			*Value			=	1.0
			*Min			=	0.1
			*Comment		=	"Time in seconds it takes an actor to get sucked into the center of the implosion."
		}
		*Float = "DMImpTimeOut"
		{
			*DisplayName	=	"Implode Timeout"
			*Value			=	1.0
			*Min			=	0.1
			*Comment		=	"Time in seconds that the DMC will stay in Implode Mode."
		}
	}
}

*OBJECT = "GuidedDeviceObject"
{
	*NAME	= "GuidedDeviceObject"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		Walk,
        Transform,
        Jump
	}

	;-----------------------------------
	; Variables
	;-----------------------------------
	*VARIABLES = 
	{
		*FLOAT = "GDMoveSpd"
		{
			*VALUE	= 5
			*MIN	= 1
			*MAX	= 50
			*DISPLAYNAME = "Movement Speed"
			*Comment = "Movement speed in m/s."
		}

		*FLOAT = "GDTrnSpd"
		{
			*VALUE	= 240
			*MIN	= 0
			*MAX	= 720
			*DISPLAYNAME = "Turning Speed"
			*Comment = "Turning speed in degrees/s."
		}

		*FLOAT = "GDJmpSpd"
		{
			*VALUE	= 5
			*MIN	= 0
			*DISPLAYNAME = "Jump Speed"
			*Comment = "Jump speed in m/s."
		}

		*Float = "GDFOV"
		{
			*Comment		= "Low values (<90) for a zoom effect, high values for fisheye"
			*Value			= 120
			*MIN			= 1
			*MAX			= 360
			*DisplayName	= "Field Of View"
		}

		*Float = "GDPUp"
		{
			*Comment		= "Max angle, in degrees, you can pitch the camera up"
			*Value			= 50
			*MIN			= 0
			*MAX			= 90
			*DisplayName	= "Max Camera Pitch Up"
		}

		*Float = "GDPDn"
		{
			*Comment		= "Max angle, in degrees, you can pitch the camera down"
			*Value			= 2
			*MIN			= 0
			*MAX			= 90
			*DisplayName	= "Max Camera Pitch Down"
		}

        *FilePick           =   "GDBombName"
        {
            *DisplayName    =   "Bomb Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Bomb mode particle to spawn."
        }

        *FilePick           =   "GDGasSmall"
        {
            *DisplayName    =   "Small Poison Gas Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Poison Gas mode particle to spawn."
        }

        *FilePick           =   "GDGasMed"
        {
            *DisplayName    =   "Medium Poison Gas Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Poison Gas mode particle to spawn."
        }

        *FilePick           =   "GDGasLarge"
        {
            *DisplayName    =   "Large Poison Gas Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Poison Gas mode particle to spawn."
        }

        *FilePick           =   "GDGasStreamName"
        {
            *DisplayName    =   "Poison Gas Stream"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Poison Gas Stream particle to spawn."
        }

		*FLOAT = "MinStaticDist"
		{
			*VALUE	= 30.0
			*MIN	= 0.0
			*MAX	= 50.0
			*DISPLAYNAME = "Minimum Static Distance"
			*Comment = "This is how far you can get (in meters) away from Tal'Set before the static starts."
		}

		*FLOAT = "Cutoff"
		{
			*VALUE	= 50.0
			*MIN	= 0.0
			*MAX	= 10000.0
			*DISPLAYNAME = "Cutoff Distance"
			*Comment = "This is how far you can get (in meters) away from Tal'Set before the device will lose contact."
		}

            *Group = "Sound"
            {
                *Sound = "BombMode"
                {
                    *DisplayName    =   "Bomb Mode"
                }
                *Sound = "GasMode"
                {
                    *DisplayName    =   "Gas Mode"
                }
                *Sound = "LureMode"
                {
                    *DisplayName    =   "Lure Mode"
                }
                *Sound = "AbortMode"
                {
                    *DisplayName    =   "Abort Mode"
                }
                *Sound = "LureSound"
                {
                    *DisplayName    =   "Lure Sound"
                }
                *Sound = "StartGasSound"
                {
                    *DisplayName    =   "Start Gas Sound"
                }
                *Sound = "LoopGasSound"
                {
                    *DisplayName    =   "Gas Loop Sound"
                }
                *Sound = "EndGasSound"
                {
                    *DisplayName    =   "End Gas Sound"
                }
                *Sound = "CollideSound"
                {
                    *DisplayName    =   "Collide Sound"
                }
                
            }

	}
}

*OBJECT = "NapalmGelObject"
{
	*NAME	= "NapalmGelObject"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
        *FilePick           =   "NGFireName"
        {
            *DisplayName    =   "Fire Particle"
            *Value          =   ""
            *Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
            *Comment        =   "This is the Napalm Gel Fire particle to spawn."
        }


		*Float = "NGTmOut"
		{
			*DisplayName	=	"Time Out"
			*Value			=	6.0
			*Min			=	0.0
			*Comment		=	"Time in Seconds to wait before the Napalm Gel dries out and is useless."
		}
	}
}


*OBJECT = "DinoBite"
{
	*NAME	= "DinoBite"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Enter,
		Exit,
		Idle,
		Fire,
		DefaultIdle
	}
}

;------------------------------------------------------------------------------
; Remote Object
;------------------------------------------------------------------------------
*OBJECT = "RCDevice"
{
	*NAME	= "RCDevice"
	*INHERITS = "DeviceAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		Move,
	}

	*VARIABLES = 
	{
		*Group = "Remote Device"
		{
			*FLOAT = "MovementSpeed"
			{
				*VALUE	= 10
				*MIN	= 1
				*MAX	= 50
				*DISPLAYNAME = "Movement Speed"
				*Comment = "Movement speed in m/s."
			}

			*FLOAT = "TurningSpeed"
			{
				*VALUE	= 240
				*MIN	= 0
				*MAX	= 720
				*DISPLAYNAME = "Turning Speed"
				*Comment = "Turning speed in degrees/s."
			}

			*Group = "Placement Offset"
			{
				*Comment	=	"The relative offset from the player where the remote will dropped."
				*Float = "OffsetX"
				{
					*DisplayName	=	"X"
					*Value			=	0.0
				}
				*Float = "OffsetY"
				{
					*DisplayName	=	"Y"
					*Value			=	0.0
				}
				*Float = "OffsetZ"
				{
					*DisplayName	=	"Z"
					*Value			=	0.0
				}
			}

			*Float = "FOV"
			{
				*Comment		= "Low values (<90) for a zoom effect, high values for fisheye"
				*Value			= 120
				*MIN			= 1
				*MAX			= 360
				*DisplayName	= "Field Of View"
			}
		}
	}
}

*OBJECT = "PteranadonRocketLauncher"
{
	*NAME	= "PteranadonRocketLauncher"
	*INHERITS = "WeaponObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"
}



;------------------------------------------------------------------------------
; CTF Flag
;------------------------------------------------------------------------------

*OBJECT = "Flag"
{
	*Name = "Flag"
	*INHERITS = "Pickup"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"

	*Variables	= 
	{
		*Group = "Team"
		{
			*Combo	=	"TEAMNAME" ; MAX 255 chars
			{
				*DisplayName	=	"TeamName"
				*Value			=	0
				*ComboList		=	
				{
					"Fire",   
					"Stone"	 
				}
			}
		}
		*Sound = "PickupSound"
		{
			*DisplayName = "PickupSound"
			*Comment = "Sound to be played when flag is picked up"
		}
		*Sound = "DroppedSound1"
		{
			*DisplayName = "DroppedSound1"
			*Comment = "Sound to be played when flag is dropped"
		}
		*Sound = "DroppedSound2"
		{
			*DisplayName = "DroppedSound2"
			*Comment = "Will be played simultaneously w/DroppedSound1"
		}
		*Sound = "CaptureSound"
		{
			*DisplayName = "CaptureSound"
			*Comment =  "Sound to be played when flag is captured"
		}
		*Sound = "Returned Sound"
		{
			*DisplayName = "ReturnedSound"
			*COmment = "Sound to be played when flag is returned to base"
		}
	}

}

;------------------------------------------------------------------------------
; Deathmatch Player
;------------------------------------------------------------------------------

*OBJECT = "DMPlayer"
{
	*Name = "DMPlayer"
	*INHERITS = "Player"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"
	*AIMODES = 
	{
		"Idle",
		"AlertIdle",
		"Run",
		"Walk",
		"Jump",
		"MoveForward"
		"MoveBackward",
		"StrafeLeft",
		"StrafeRight",
		"MoveLeft",
		"MoveRight",
		"TurnLeft",
		"TurnRight",
		"BackWalk",
		"BackRun",
		"Damaged",
		"Attack",
		"LoopAttack",
		"Fall",
		"CrouchIdle",
		"CrouchForward",
		"CrouchBackward",
		"CrouchLeft",
		"CrouchRight",
		"CrouchTurnRight",
		"CrouchTurnLeft",
		"Respawn",
		"LeftDamage",
		"ClimbIdle",
		"ClimbUp",
		"ClimbDown",
		"ClimbLeft",
		"ClimbRight",
		"EndClimb",
		"AttackForward",
		"AttackBackward",
		"AttackIdle",
		"AttackStrafeLeft",
		"AttackStrafeRight",
		"AttackJump",
		"AttackTurnLeft",
		"AttackTurnRight",
		"CrouchAttackLeft",
		"CrouchAttackRight",
		"CrouchAttackForward",
		"CrouchAttackBackward",
		"CrouchAttackIdle",
		"SnipeAttack",
		"SwimForward",
		"SwimBackward",
		"SwimUp",
		"SwimDown",
		"SwimLeft",
		"SwimRight",
		"SwimBurst",
		"WaterSurfaceIdle",
		"UnderwaterIdle",
		"SwimTurnLeft",
		"SwimTurnRight",
		"LeapToShore",
		"SwimAttack",
		"DiveIntoWater",
		"UsingGuidedDevice",
		"OneHandIdle",
		"OneHandAlertIdle",
		"OneHandMoveForward",
		"OneHandMoveBackward",
		"OneHandStrafeLeft",
		"OneHandStrafeRight",
		"OneHandTurnLeft",
		"OneHandTurnRight",
		"OneHandAttackIdle",
		"OneHandAttackForward",
		"OneHandAttackBackward",
		"OneHandAttackStrafeLeft",
		"OneHandAttackStrafeRight",
		"OneHandAttackJump",
		"OneHandAttackTurnLeft",
		"OneHandAttackTurnRight",
		"OneHandAttackSnipe",
		"OneHandCrouchAttackStrafeLeft",
		"OneHandCrouchAttackStrafeRight",
		"OneHandCrouchAttackForward",
		"OneHandCrouchAttackBackward",
		"OneHandCrouchAttackIdle",
		"Celebrate",
		"MonkeyClimbLeft",
		"MonkeyClimbRight",
		"MonkeyClimbForward",
		"MonkeyClimbBackward",
		"MonkeyClimbIdle",
		"MonkeyClimbBegin",
		"MonkeyClimbEnd",
		"WarclubAttack",
		"WarclubCombo1",
		"WarclubCombo2",
		"WarclubCombo3",
		"ThrowIdle",
		"ThrowRunForward",
		"ThrowRunBackward",
		"ThrowStrafeRight",
		"ThrowStrafeLeft",
		"ThrowGuidedDevice"
	}
	*Variables =
	{
		*FilePick = "DeadPlayerActor"
		{
			*DisplayName	=	"Dead Player"
			*Value			=	"\Data\Actors\Multiplayer\DeadPlayer\DeadPlayer.atr"
			*Directory		=	"$/Data/Actors/Multiplayer"
			*Extension		=	"atr"
			*Comment		=	"This is the actor that will be spawned when a player is killed."
		}
		*FilePick = "GreenTeamMesh"
		{
			*DisplayName	=	"Stone Team Mesh"
			*Value			=	""
			*Directory		=	"$/Data/Actors/"
			*Extension		=	"atf"
			*Comment		=	"Mesh for team play"
		}
		*FilePick = "YellowTeamMesh"
		{
			*DisplayName	=	"Fire Team Mesh"
			*Value			=	""
			*Directory		=	"$/Data/Actors/"
			*Extension		=	"atf"
			*Comment		=	"Mesh for team play"
		}
		*FilePick = "Snapshot"
		{
			*DisplayName  = "Player Snapshot"
			*Value		  = ""
			*Directory	  = "$/Data/Textures/OnScreenGraphics/FrontEnd/Players"
			*Extension	  = "bmp"
			*Extension    = "tga"
			*Comment	  = "Picture of the player"
		}
		*Bool = "IsRaptor"
		{
			*DisplayName = "Raptor Player?"
			*Value		 = "False"
			*Comment     = "Set this to true if the player is a Raptor"
		}
		; Shield belt sounds
		*Group = "Sounds"
		{
			*Sound = "ShieldOnSound"
			{
				*Displayname = "Sheild On Sound"
			}
			*Sound = "ShieldOffSound"
			{
				*Displayname = "Sheild Off Sound"
			}
			*Sound = "ShieldActiveSound"
			{
				*Displayname = "Sheild Active Sound"
			}
			*Sound = "ShieldDamageSound"
			{
				*Displayname = "Sheild Damage Sound"
			}
			; Death Helm
			
			*Sound = "DeathHelmOnSound"
			{
				*Displayname = "Death Helm On Sound"
			}
			*Sound = "DeathHelmActiveSound"
			{
				*Displayname = "Death Helm Active Sound"
			}
			*Sound = "DeathHelmOffSound"
			{
				*Displayname = "Death Helm Off Sound"
			}
			*Sound = "CloakingBeltOnSound"
			{
				*DisplayName = "Cloaking Belt On Sound"
			}
			*Sound = "CloakingBeltOffSound"
			{
				*DisplayName = "Cloaking Belf Off Sound"
			}
			*Sound = "PickupSound"
			{
				*DisplayName = "Pickup Sound"
			}
			*Sound = "TauntSound"
			{
				*DisplayName = "Taunt Sound"
			}
			*Sound = "CelebrateSound"
			{
				*DisplayName = "Celebrate Sound"
			}
			*Sound = "RegenerateSound"
			{
				*DisplayName = "Regenerate Sound"	
			}
			*Sound = "RespawnSound"
			{
				*DisplayName = "Respawn Sound"
			}
			*Sound = "PoisonDamageSound"
			{
				*DisplayName = "Poison Damage"
			}
			*Sound = "PoisonRecoverSound"
			{
				*DisplayName = "Poison Recover"
			}
			*Sound = "PoisonDeathSound"
			{
				*DisplayName = "Poison Death"
			}
			*Sound = "JumpBootsSound"
			{
				*DisplayName = "Super Jump"
			}
			*Sound = "EnterRageSound"
			{
				*DisplayName = "Enter Rage"
			}
			*Sound = "RageLoopSound"
			{
				*DisplayName = "Rage Loop"
			}
			*Sound = "RageEndSound"
			{
				*DisplayName = "Rage End"
			}
			*Sound = "SpeedOnSound"
			{
				*DisplayName = "Speed On"
			}
			*Sound = "SpeedOffSound"
			{
				*DisplayName = "Speed Off"
			}
		}
	}
}
;------------------------------------------------------------------------------
; Compy Player
;------------------------------------------------------------------------------

*OBJECT = "CompyPlayer"
{
	*Name = "CompyPlayer"
	*INHERITS = "DMPlayer"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"
	*AIMODES = 
	{
		"Idle",
		"Run",
		"Walk",
		"Jump",
		"MoveForward"
		"MoveBackward",
		"StrafeLeft",
		"StrafeRight",
		"MoveLeft",
		"MoveRight",
		"TurnLeft",
		"TurnRight",
		"BackWalk",
		"BackRun",
		"Damaged",
		"Attack",
		"LoopAttack",
		"Fall",
		"CrouchIdle",
		"CrouchForward",
		"CrouchBackward",
		"CrouchLeft",
		"CrouchRight",
		"CrouchTurnRight",
		"CrouchTurnLeft",
		"Respawn",
		"LeftDamage",
		"ClimbIdle",
		"ClimbUp",
		"ClimbDown",
		"ClimbLeft",
		"ClimbRight",
		"EndClimb",
		"AttackForward",
		"AttackBackward",
		"AttackIdle",
		"AttackStrafeLeft",
		"AttackStrafeRight",
		"AttackJump",
		"CrouchAttackLeft",
		"CrouchAttackRight",
		"CrouchAttackForward",
		"CrouchAttackBackward",
		"CrouchAttackIdle",
		"SnipeAttack",
		"SwimForward",
		"SwimBackward",
		"SwimUp",
		"SwimDown",
		"SwimLeft",
		"SwimRight",
		"SwimBurst",
		"WaterSurfaceIdle",
		"UnderwaterIdle",
		"SwimTurnLeft",
		"SwimTurnRight",
		"LeapToShore",
		"SwimAttack",
		"DiveIntoWater",
		"UsingGuidedDevice",
		"OneHandIdle",
		"OneHandMoveForward",
		"OneHandMoveBackward",
		"OneHandStrafeLeft",
		"OneHandStrafeRight",
		"OneHandTurnLeft",
		"OneHandTurnRight",
		"OneHandAttackIdle",
		"OneHandAttackForward",
		"OneHandAttackBackward",
		"OneHandAttackStrafeLeft",
		"OneHandAttackStrafeRight",
		"OneHandAttackJump",
		"OneHandAttackSnipe",
		"OneHandCrouchAttackStrafeLeft",
		"OneHandCrouchAttackStrafeRight",
		"OneHandCrouchAttackForward",
		"OneHandCrouchAttackBackward",
		"OneHandCrouchAttackIdle"
	}
	*Variables =
	{
		*Sound = "CallOutSound"
		{
			*Displayname = "Call Out Sound"
		}
	}
}

;------------------------------------------------------------------------------
; Dead Player
;------------------------------------------------------------------------------

*OBJECT = "DeadPlayer"
{
	*Name = "DeadPlayer"
	*TYPE = "OBJECT"
	*INHERITS = "Actor"
	*UseInActorEd = "True"
	*AIMODES = 
	{
		"Die",
		"Decompose",
		"PoisonDeath",
		"FallingDeath",
		"ExplodingDeath",
		"DrowningDeath",
		"BurningDeath",
		"FallingDeath",
		"RunningDeath",
		"MeleeDeath",
		"SwarmBoreDeath",
		"SwarmBoreFinish",
		"ImplodingDeath"
	}
	*Variables =
	{
		*Group = "BodyParts"
		{
			*BOOL = "CanDismember"
			{
				*Usage			= "Protected"
				*VALUE			= "True"
				*DISPLAYNAME	= "Can Dismember"
			}
			*String = "BodyPartPrefix"
			{
				*Usage			=	"Protected"
				*DisplayName	=	"Prefix"
				*Value			=	""
			}
		}
	}
}

;------------------------------------------------------------------------------
; A Spawn-point
;------------------------------------------------------------------------------

*OBJECT = "SpawnPoint"
{
	*Name = "SpawnPoint"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"

	*Variables	= 
	{
		*Group = "Team"
		{
			*Comment = "This is a preliminary list of available teams -> available teams are TBD"
			*Combo	=	"TEAMNAME" ; MAX 255 chars
			{
				*DisplayName	=	"Team"
				*Value			=	0
				*ComboList		=	
				{
					"Fire",
					"Stone"
				}
			}
		}
		*BitField = "ModeFlags"
		{
			*DisplayName = "ExcludeModes"
			*Value = 0
			*BitList =
			{
				"Predator",			; 1
				"Flight",			; 1 << 1
				"Deathmatch",		; 1 << 2
				"DinoRider",		; 1 << 3
				"MixedRiding",		; 1 << 4
				"TRex",				; 1 << 5
				"DinoCatcher",		; 1 << 6
				"CTF",				; 1 << 7
				"OneFlagCTF",		; 1 << 8
				"LastManStanding",	; 1 << 9
				"Coop",				; 1 << 10
				"BagTag",			; 1 << 11
				"Assault",			; 1 << 12
				"HumansVsDinos"		; 1 << 13
			}
			*Comment = "SpawnPoint will be available in all game modes except those specified here"
		}
	}
}

;------------------------------------------------------------------------------
; FlagSpawnPoint
;------------------------------------------------------------------------------

*OBJECT = "FlagSpawnPoint"
{
	*Comment = "A place where a flag should be spawned. Not much different than SpawnPoint 'cept for the name"
	*Name = "FlagSpawnPoint"
	*INHERITS = "SpawnPoint"
	*Type = "OBJECT"
	*UseInActorEd = "True"

}

;------------------------------------------------------------------------------
; SingleFlagSpawnPoint
;------------------------------------------------------------------------------

*OBJECT = "SingleFlagSpawnPoint"
{
	*Comment = "A place where the a flag will be placed for 1 flag CTF"
	*Name = "SingleFlagSpawnPoint"
	*INHERITS = "SpawnPoint"
	*Type = "OBJECT"
	*UseInActorEd = "True"
}


;------------------------------------------------------------------------------
; AssaultObjective
;------------------------------------------------------------------------------

*OBJECT = "AssaultObjective"
{
	*Comment = "An Objective that needs to be secured by the offensive team in the Assault game mode"
	*Name = "AssaultObjective"
	*Type = "OBJECT"
	*UseInActorEd = "True"
	*Variables =
	{
		*String = "Identifier"
		{
			*DisplayName = "Identifier"
			*Value = ""
			*Comment = "This should be an identifier that distinguishes this objective from any others in this level"
		}
		*String = "Description"
		{
			*DisplayName = "Description" 
			*Value = ""
			*Comment = "A Description of this objective. This is text that will be displayed in the game when description of the objective is requested"
		}
	}
}			
;------------------------------------------------------------------------------
; BagActor
;------------------------------------------------------------------------------

*Object = "BagActor"
{
	*Comment = "An actor carried by the player who is "it" in BagTag mode
	*Name = "BagActor"
	*Type = "Object"
	*Inherits = "Actor"
	*UseInActorEd = "True"
	*AIMODES = 
	{
		Idle1,
		Idle2, 
	}
	*VARIABLES = 
	{
		*Sound = "PickupSound"
		{
			*DisplayName = "Pickup Sound"
			*Comment = "Sound to player when picked up"
			*Usage = "Protected"
		}
		*Sound = "DroppedSound"
		{
			*DisplayName = "Dropped Sound"
			*Comment = "Sound to player when bag is dropped"
			*Usage = "Protected"
		}
		*Sound = "RespawnSound"
		{
			*DisplayName = "Respawn Sound"
			*Comment = "Sound to player when bag returned to its original position"
			*Usage = "Protected"
		}

	}
}
;------------------------------------------------------------------------------
; MPPickup 
;------------------------------------------------------------------------------
*Object = "MPPickup"
{
	*Comment = "Pickup Object for multiplayer"
	*Name = "MPPickup"
	*type = "Object"
	*UseInActorEd = "True"
	*Variables = 
	{
		*FilePick = "PreferredPickup1"
		{
			*DisplayName	=	"PreferredPickup1"
			*Value			=	""
			*Directory		=	"$/Data/Actors/Pickups"
			*Extension		=	"atr"
		}
		*FilePick = "PreferredPickup2"
		{
			*DisplayName	=	"PreferredPickup2"
			*Value			=	""
			*Directory		=	"$/Data/Actors/Pickups"
			*Extension		=	"atr"
		}
		*FilePick = "PreferredPickup3"
		{
			*DisplayName	=	"PreferredPickup3"
			*Value			=	""
			*Directory		=	"$/Data/Actors/Pickups"
			*Extension		=	"atr"
		}
		*FilePick = "PreferredPickup4"
		{
			*DisplayName	=	"PreferredPickup4"
			*Value			=	""
			*Directory		=	"$/Data/Actors/Pickups"
			*Extension		=	"atr"
		}
		*FilePick = "PreferredPickup5"
		{
			*DisplayName	=	"PreferredPickup5"
			*Value			=	""
			*Directory		=	"$/Data/Actors/Pickups"
			*Extension		=	"atr"
		}
		*Bool = "Random"
		{
			*DisplayName = "Random?"
			*Value = false
			*Comment = "Random?"
		}
		*BitField = "ModeFlags"
		{
			*DisplayName = "ExcludeModes"
			*Value = 0
			*BitList =
			{
				"Predator",			; 1
				"Flight",			; 1 << 1
				"Deathmatch",		; 1 << 2
				"DinoRider",		; 1 << 3
				"MixedRiding",		; 1 << 4
				"TRex",				; 1 << 5
				"DinoCatcher",		; 1 << 6
				"CTF",				; 1 << 7
				"OneFlagCTF",		; 1 << 8
				"LastManStanding",	; 1 << 9
				"Coop",				; 1 << 10
				"BagTag",			; 1 << 11
				"Assault",			; 1 << 12
				"HumansVsDinos"		; 1 << 13
			}
			*Comment = "Pickup will be available in all game modes except those specified here"
		}
		*Float = "RespawnTime"
		{
			*DisplayName = "Respawn Time"
			*Value = 30.0
			*Comment = "The time that elapses between the time a pickup is picked up and the the"
			*Comment = "time it should respawn. A value of 0.0 means it the pickup should never"
			*Comment = "respawn. Default is 30.0 seconds"
		}
	}
	*AIModes
	{
		"Idle",
		"Respawn"
	}
}
;------------------------------------------------------------------------------
; Temporary GameMode Specifier
;------------------------------------------------------------------------------

*OBJECT = "GameModeInfo"
{
	*Name = "GameModeInfo"
	*Type = "OBJECT"
	*UseInActorEd = "True"
}

;------------------------------------------------------------------------------
; EndGameCameraFocusMarker
;------------------------------------------------------------------------------

*Object = "EndGameCameraFocusMarker"
{
	*Name = "EndGameCameraFocusMarker"
	*Type = "OBJECT"
	*Inherits = "Actor"
	*UseInActorEd = "True"
}
;------------------------------------------------------------------------------
; Empathy Chest Plate Blast
;------------------------------------------------------------------------------

*OBJECT = "EmpathyBlast"
{
	*NAME	= "EmpathyBlast"
	*INHERITS = "Actor"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"
	*Variables =
	{
		*Float = "Speed"
		{
			*DisplayName = "Speed"
			*Value = 30.0
			*Comment = "The speed at which the blast moves"
		}
	}
}

;------------------------------------------------------------------------------
; Generator
;------------------------------------------------------------------------------
*OBJECT = "GeneratorObject"
{
	*NAME	= "GeneratorObject"
	*INHERITS = "DeviceAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		Inactive,
		Generate,
	}

	*VARIABLES = 
	{
		*Group = "Actor 1"
		{
			*FilePick = "Actor0"
			{
				*DisplayName	=	"Spawned Actor"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}
			*FilePick = "Actor0PS2"
			{
				*DisplayName	=	"Spawned Actor PS2"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}
	
			*Int = "ActorChance0"
			{
				*DisplayName	=	"Actor Chance"
				*Value			=	0
				*Min			=	0
				*Max			=	100
				*Comment		=	"The chance this type will be spawned."
			}
			*Int = "ActorQuantity0"
			{
				*DisplayName	=	"Actor Quantity"
				*Value			=	-1
				*Min			=	-1
				*Max			=	100
				*Comment		=	"The Maximum number of actors spawned."
			}
			*String = "ActorName0"
			{
				*DisplayName	=	"Name"
				*Value			=	""
				*Comment		=	"In-game, this is the name that will be associated with this actor."
			}
		}
		*Group = "Actor 2"
		{
			*FilePick = "Actor1"
			{
				*DisplayName	=	"Spawned Actor"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}
			*FilePick = "Actor1PS2"
			{
				*DisplayName	=	"Spawned Actor PS2"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}
			*Int = "ActorChance1"
			{
				*DisplayName	=	"Actor Chance"
				*Value			=	0
				*Min			=	0
				*Max			=	100
				*Comment		=	"The chance this type will be spawned."
			}
			*Int = "ActorQuantity1"
			{
				*DisplayName	=	"Actor Quantity"
				*Value			=	-1
				*Min			=	-1
				*Max			=	100
				*Comment		=	"The Maximum number of actors spawned."
			}
			*String = "ActorName1"
			{
				*DisplayName	=	"Name"
				*Value			=	""
				*Comment		=	"In-game, this is the name that will be associated with this actor."
			}
		}
		*Group = "Actor 3"
		{
			*FilePick = "Actor2"
			{
				*DisplayName	=	"Spawned Actor"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}
			*FilePick = "Actor2PS2"
			{
				*DisplayName	=	"Spawned Actor PS2"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}

			*Int = "ActorChance2"
			{
				*DisplayName	=	"Actor Chance"
				*Value			=	0
				*Min			=	0
				*Max			=	100
				*Comment		=	"The chance this type will be spawned."
			}
			*Int = "ActorQuantity2"
			{
				*DisplayName	=	"Actor Quantity"
				*Value			=	-1
				*Min			=	-1
				*Max			=	100
				*Comment		=	"The Maximum number of actors spawned."
			}
			*String = "ActorName2"
			{
				*DisplayName	=	"Name"
				*Value			=	""
				*Comment		=	"In-game, this is the name that will be associated with this actor."
			}
		}
		*Group = "Actor 4"
		{
			*FilePick = "Actor3"
			{
				*DisplayName	=	"Spawned Actor"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}
			*FilePick = "Actor3PS2"
			{
				*DisplayName	=	"Spawned Actor PS2"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}

			*Int = "ActorChance3"
			{
				*DisplayName	=	"Actor Chance"
				*Value			=	0
				*Min			=	0
				*Max			=	100
				*Comment		=	"The chance this type will be spawned."
			}
			*Int = "ActorQuantity3"
			{
				*DisplayName	=	"Actor Quantity"
				*Value			=	-1
				*Min			=	-1
				*Max			=	100
				*Comment		=	"The Maximum number of actors spawned."
			}
			*String = "ActorName3"
			{
				*DisplayName	=	"Name"
				*Value			=	""
				*Comment		=	"In-game, this is the name that will be associated with this actor."
			}
		}
		*Group = "Actor 5"
		{
			*FilePick = "Actor4"
			{
				*DisplayName	=	"Spawned Actor"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}
			*FilePick = "Actor4PS2"
			{
				*DisplayName	=	"Spawned Actor PS2"
				*Value			=	""
				*Directory		=	"$/Data/Actors/"
				*Extension		=	"atr"
			}
			*Int = "ActorChance4"
			{
				*DisplayName	=	"Actor Chance"
				*Value			=	0
				*Min			=	0
				*Max			=	100
				*Comment		=	"The chance this type will be spawned."
			}
			*Int = "ActorQuantity4"
			{
				*DisplayName	=	"Actor Quantity"
				*Value			=	-1
				*Min			=	-1
				*Max			=	100
				*Comment		=	"The Maximum number of actors spawned."
			}
			*String = "ActorName4"
			{
				*DisplayName	=	"Name"
				*Value			=	""
				*Comment		=	"In-game, this is the name that will be associated with this actor."
			}
		}
		*Bool = "Sequential"
		{
			*DisplayName = "Sequential"
			*Value	= 0
			*Comment = "Spawn Actors in order (True/False)"
		}
		*Float = "SpawnInterval"
		{
			*VALUE	= 10
			*MIN	= 0
			*MAX	= 999
			*DISPLAYNAME = "Spawn Interval"
			*Comment	=	"The time in seconds between spawns."
		}
		*Float = "SpawnIntervalPS2"
		{
			*VALUE	= 10
			*MIN	= 0
			*MAX	= 999
			*DISPLAYNAME = "Spawn Interval PS2"
			*Comment	=	"The time in seconds between spawns."
		}

		*Float = "WaitInterval"
		{
			*VALUE	= 0
			*MIN	= 0
			*MAX	= 999
			*DISPLAYNAME = "Wait Interval"
			*Comment	=	"The time in seconds to the first spawn after activating."
		}
		*Int = "TotalSpawns"
		{
			*DisplayName	=	"Total Spawns"
			*Value			=	-1
			*Min			=	-1
			*Max			=	1000
			*Comment		=	"The total number of spawns allowed for this generator."
			*Comment		=	"\nUse -1 for an infinite amount."
		}
		*Int = "TotalSpawnsPS2"
		{
			*DisplayName	=	"Total Spawns PS2"
			*Value			=	-1
			*Min			=	-1
			*Max			=	1000
			*Comment		=	"The total number of spawns allowed for this generator."
			*Comment		=	"\nUse -1 for an infinite amount."
		}
		*Int = "ActiveSpawns"
		{
			*DisplayName	=	"Active Spawns"
			*Value			=	-1
			*Min			=	-1
			*Max			=	1000
			*Comment		=	"The total number of generated spawns allowed out at one time."
			*Comment		=	"\nUse -1 for an infinite amount."
		}
		*Int = "ActiveSpawnsPS2"
		{
			*DisplayName	=	"Active Spawns PS2"
			*Value			=	-1
			*Min			=	-1
			*Max			=	1000
			*Comment		=	"The total number of generated spawns allowed out at one time."
			*Comment		=	"\nUse -1 for an infinite amount."
		}
		*Bool = "FollowsPath"
		{
			*DisplayName	=	"Follows Path"
			*Value			=	0
			*Comment		=	"True: The Generator follows an assigned path."
			*Comment		=	"False: The Generator ignores assigned paths."
		}

		*Bool = "SpawnsFollowsPath"
		{
			*DisplayName	=	"Spawns Follow Path"
			*Value			=	0
			*Comment		=	"True: The spawned actors are assigned path."
			*Comment		=	"False: The spawned actors are not given path."
		}
		*Bool = "SetReg"
		{
			*DisplayName = "Set Regions in Spawns"
			*Value	= 0
			*Comment = "Spawns get regions settings turned on (True/False)"
		}
		*Int = "WaveNumber"
		{
			*DisplayName	=	"Wave Number"
			*Value			=	1
			*Min			=	1
			*Max			=	10
			*Comment		=	"The wave of attack that this generator will generate enemies for."
			*Comment		=	"[Note: Only used in multiplayer DinoHunt mode]"
		}
		*Group				=	"Offset"
		{
			*Comment	=	"The relative offset (in world coordinates) where the new actor should start."
			*Float = "OffsetX"
			{
				*DisplayName	=	"X"
				*Value			=	0.0
			}
			*Float = "OffsetY"
			{
				*DisplayName	=	"Y"
				*Value			=	0.0
			}
			*Float = "OffsetZ"
			{
				*DisplayName	=	"Z"
				*Value			=	0.0
			}
		}
	}
}
;------------------------------------------------------------------------------
; MPGeneratorObject - same as above, with a couple changes
;------------------------------------------------------------------------------

*OBJECT = "MPGeneratorObject"
{
	*NAME = "MPGeneratorObject"
	*INHERITS = "GeneratorObject"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"
	*AIMODES = 
	{
		Idle,
		Inactive,
		Generate,
	}
}



;------------------------------------------------------------------------------
; Turret
;------------------------------------------------------------------------------
*OBJECT = "TurretObject"
{
	*NAME	= "TurretObject"
	*INHERITS = "DeviceAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		Inactive,
		Fire,
		Reload,
	}

	*VARIABLES = 
	{
		*BOOL = "TIgMX"
		{
			*VALUE	= "False"
			*DISPLAYNAME = "Ignore MaxXRotation"
			*Comment = "TRUE  = Turret will have no X rotation boundaries."
			*Comment = "FALSE = Turret will stay within MaxXRotation."
		}
		
		*BOOL = "TIgMY"
		{
			*VALUE	= "False"
			*DISPLAYNAME = "Ignore MaxYRotation"
			*Comment = "TRUE  = Turret will have no Y rotation boundaries."
			*Comment = "FALSE = Turret will stay within MaxYRotation."
		}

		*Float = "MaxXRotation"
		{
			*DisplayName	=	"Max X Rotation"
			*Value			=	15.0
			*Min			=	0.0
			*Max			=	90.0
			*Comment		=	"The max up and down rotation."
		}

		*Float = "MaxYRotation"
		{
			*DisplayName	=	"Max Y Rotation"
			*Value			=	45.0
			*Min			=	0.0
			*Max			=	180.0
			*Comment		=	"The max left and right rotation."
		}

		*Float = "XRotationSpeed"
		{
			*DisplayName	=	"X Rotation Speed"
			*Value			=	60.0
			*Min			=	0.0
			*Max			=	1000.0
			*Comment		=	"The up and down rotation speed in degrees per second."
		}

		*Float = "YRotationSpeed"
		{
			*DisplayName	=	"Y Rotation Speed"
			*Value			=	60.0
			*Min			=	0.0
			*Max			=	1000.0
			*Comment		=	"The left and right rotation speed in degrees per second."
		}

		*Int = "XRotationBone"
		{
			*DisplayName	=	"X Rotation Bone ID"
			*Value			=	0
			*Min			=	0
			*Comment		=	"The ID of the bone to use for X up and down rotation."
			*Comment		=	"Bone IDs are listed under Skeleton in the ActorEditor."
			*Usage		    = "Protected"
		}

		*Int = "YRotationBone"
		{
			*DisplayName	=	"Y Rotation Bone ID"
			*Value			=	0
			*Min			=	0
			*Comment		=	"The ID of the bone to use for Y left and right rotation."
			*Comment		=	"Bone IDs are listed under Skeleton in the ActorEditor."
			*Usage		    = "Protected"
		}

		*Combo = "PlayerMode"
		{
			*DisplayName	=	"Player Mode"
			*Value			=	0
			*ComboList = ; 
			{
				"Static"	,
				"Moveable"
			}
			*Comment		=	"The type of link:"
			*Comment		=	""
			*Comment		=	"Static - Player doesnt move"
			*Comment		=	""
			*Comment		=	"Moveable - Player moves with turret"
		}


		*Combo = "TurretType"
		{
			*DisplayName	=	"Turret Type"
			*Value			=	0
			*ComboList = 
			{
				"Auto"	,
				"Ally"	,
				"Enemy" 
			}
			*Comment		=	""
			*Comment		=	"Auto - Will start firing when an enemy is detected."
			*Comment		=	""
			*Comment		=	"Ally - No AI. Can be used by player."
			*Comment		=	""
			*Comment		=	"Enemy - Shoots at given targets."
		}

		*Group = "Auto Turret Info"
		{
			*Float = "AutoTurretRadius"
			{
				*VALUE	= 5
				*MIN	= 0
				*DISPLAYNAME = "Radius"
				*DISPLAYASDISC = "255,0,0"
				*Comment = "The Detection Radius for the turret."
				*Comment = "This sets how close you can get to the turret before it opens fire."
			}

			*Comment = "These variables will only affect Auto Turrets."
		}

		*Group = "Enemy Turret Info"
		{
		    *Combo = "EnemyTurretType"
		    {
			    *DisplayName	=	"Type"
			    *Value			=	0
			    *ComboList = 
			    {
				    "Full Auto"	,
				    "At Nodes" 
			    }
			    *Comment		=	""
			    *Comment		=	"Full Auto - Will fire as fast as reload rate will allow."
			    *Comment		=	""
			    *Comment		=	"At Nodes - Will fire when target is at a path node."
		    }

			*Comment = "These variables will only affect Enemy Turrets."
		}
		
		
		*Group = "Auto/Enemy Turret info"
		{
;			*Float = "FAng"
;			{
;				*VALUE	= 45.0f
;				*MIN	= 0
;				*DISPLAYNAME = "Target Angle"
;				*Comment = "The angle, in degrees, the turret has to be facing from the target before"
;				*Comment = "it will start to fire and track it's target."
;			}
			*Float = "SFre"
			{
				*VALUE	= 1.0f
				*MIN	= 0
				*DISPLAYNAME = "Shoot frequency"
				*Comment = "How often the turret will shoot."
				*Comment = "i.e   1.0 = As soon as it can."
				*Comment = "      0.5 = Sometimes."
				*Comment = "      0.0 = Never."
			}
			*Float = "TErr"
			{
				*VALUE	= 0.5f
				*MIN	= 0
				*DISPLAYNAME = "Targeting error (meters)"
				*Comment = "How much error will be randomly added to each shot."
				*Comment = "i.e   5.0 = It will shoot upto 5 meters wide."
				*Comment = "      0.0 = Shoot on target."
			}
			
			
		}
		
	}
}

// =============================================
// used as a dummy actor that follows a path
// as an aiming point for a turret
// =============================================
*OBJECT = "TurretTargetObject"
{
	*NAME	= "TurretTargetObject"
	*TYPE	= "OBJECT"
	*INHERITS = "Object"
	*UseInActorEd = "True"
}


;------------------------------------------------------------------------------
; AnimalAI
;------------------------------------------------------------------------------
*OBJECT = "AnimalAI"
{
	*NAME	= "AnimalAI"
	*TYPE	= "OBJECT"
	*INHERITS = "EnemyAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		Walk,
		AlertWalk,
		RotateLeft,
		RotateRight,
		AlertRotateLeft,
		AlertRotateRight,
		Run,
		RunningDeath,
		ExplosionDeath,
		AlertRun,
		Jump,
		Climb,
		HangClimb,
		Eat,
		Stunned,
		Talk,
		Damaged,
		Death,
		FireRun,
		FireDeath,
		Attack,
		SecondAttack,
		ThirdAttack,
		FourthAttack,
		FifthAttack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim,
		SwimmingAttack,
		Special1,
		Special2,
		Special3,
		Special4

	}


}

;------------------------------------------------------------------------------
; GroupAnimalAI
;------------------------------------------------------------------------------
*OBJECT = "GroupAnimalAI"
{
	*NAME	= "GroupAnimalAI"
	*TYPE	= "OBJECT"
	*INHERITS = "AnimalAI"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		Walk,
		AlertWalk,
		RotateLeft,
		RotateRight,
		AlertRotateLeft,
		AlertRotateRight,
		Run,
		RunningDeath,
		ExplosionDeath,
		AlertRun,
		Jump,
		Climb,
		HangClimb,
		Eat,
		Damaged,
		Death,
		FireRun,
		FireDeath,
		CallOut,
		Attack,
		SecondAttack,
		ThirdAttack,
		FourthAttack,
		FifthAttack,
		Stunned,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim,
		Special1,
		Special2,
		Special3,
		Special4

	}

	*VARIABLES = 
	{
		*String = "GAGroupName"
		{
			*DisplayName	=	"GroupName"
			*Value			=	""
			*Comment		=	"The name of the group this AI belongs to"
		}

		*INT = "GAMinNumbers"
		{
			*VALUE			= 1
			*MIN			= 0
			*DISPLAYNAME	= "Min Numbers"
			*Comment		= "The min number of group members needed to attack a target"
		}

		*BOOL = "GAGroupAttack"
		{
			*VALUE	= "False"
			*DISPLAYNAME = "Only attack when group attacked?"
		}
	}

}


;------------------------------------------------------------------------------
; IndigenousAI
;------------------------------------------------------------------------------
*OBJECT = "IndigenousAI"
{
	*NAME	= "IndigenousAI"
	*TYPE	= "OBJECT"
	*INHERITS = "AnimalAI"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		Walk,
		AlertWalk,
		RotateLeft,
		RotateRight,
		AlertRotateLeft,
		AlertRotateRight,
		Run,
		RunningDeath,
		ExplosionDeath,
		AlertRun,
		Jump,
		Climb,
		HangClimb,
		Eat,
		Damaged,
		Death,
		FireRun,
		FireDeath,
		Attack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim,
		Special1,
		Special2,
		Special3,
		Special4

	}

}

;------------------------------------------------------------------------------
; AquaticAI
;------------------------------------------------------------------------------
*OBJECT = "AquaticAI"
{
	*NAME	= "AquaticAI"
	*TYPE	= "OBJECT"
	*INHERITS = "AnimalAI"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		Damaged,
		Death,
		Attack,
		Eat,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim
	}
}

;------------------------------------------------------------------------------
; AquaticIndigenousAI
;------------------------------------------------------------------------------
*OBJECT = "AquaticIndigenousAI"
{
	*NAME	= "AquaticIndigenousAI"
	*TYPE	= "OBJECT"
	*INHERITS = "AquaticAI"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		Damaged,
		Death,
		Eat,
		Attack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim
	}
}

;------------------------------------------------------------------------------
; Steracosaur
;------------------------------------------------------------------------------
*OBJECT = "Steracosaur"
{
	*NAME	= "Steracosaur"
	*TYPE	= "OBJECT"
	*INHERITS = "EnemyAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		Walk,
		AlertWalk,
		RotateLeft,
		RotateRight,
		AlertRotateLeft,
		AlertRotateRight,
		Run,
		RunningDeath,
		ExplosionDeath,
		AlertRun,
		Jump,
		Climb,
		HangClimb,
		Eat,
		Damaged,
		Death,
		FireRun,
		FireDeath,
		Attack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim,
		StunFallDown,
		StunGetUp,
		Backup
	}

}

;------------------------------------------------------------------------------
; T-Rex
;------------------------------------------------------------------------------
*OBJECT = "TRexAI"
{
	*NAME	= "TRexAI"
	*TYPE	= "OBJECT"
	*INHERITS = "EnemyAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		CrouchIdle,
		ProneIdle,
		RotateLeft,
		RotateRight,
		AlertRotateLeft,
		AlertRotateRight,
		StandingSleep,
		Walk,
		AlertWalk,
		CrouchWalk,
		ProneCrawl,
		Run,
		AlertRun,
		FireRun,
		FireStarter,
		FireDeath,
		Fall,
		ExaggeratedFall,
		FallDeath,
		Jump,
		Climb,
		ClimbEnd,
		HangClimb,
		Damaged,
		Death,
		PoisonDamage,
		PoisonDeath,
		ExplosionDeath,
		ExplosionDamage,
		GravityHeld,
		Attack,
		SecondAttack,
		ThirdAttack,
		FourthAttack,
		FifthAttack,
		CrouchAttack,
		ProneAttack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim,
		SwimmingAttack,
		SquatIdle,
		Taunt,
		Talk,
		Frustrated,
		Stunned
	}

}


;------------------------------------------------------------------------------
; PlesiosaurAI
;------------------------------------------------------------------------------
*OBJECT = "PlesiosaurAI"
{
	*NAME	= "PlesiosaurAI"
	*TYPE	= "OBJECT"
	*INHERITS = "DeviceAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		AttackLeft,
		AttackRight,
		AttackSweepLeft,
		AttackSweepRight,

		LookAboveWater,

		SwimAbove,
		SwimUnder,
		DiveSwim,
		FastSwimAttack,

		SwimTurnLeftSlight,
		SwimTurnLeftMedium,
		SwimTurnLeftExtreme,
		SwimTurnRightSlight,
		SwimTurnRightMedium,
		SwimTurnRightExtreme,
		
		Flinch,

		EndSeqBurstUp,
		EndSeqIdle,
		EndSeqAttackCenter,
		EndSeqAttackCenterLeft,
		EndSeqAttackLeft,
		EndSeqAttackCenterRight,
		EndSeqAttackRight,
		EndSeqHurt,

		Die
	}
	
	*VARIABLES = 
	{
		*BOOL = "ShowZones"
		{
			*VALUE	= "False"
			*DISPLAYNAME = "Show attack zones?"
			*Comment = "TRUE  = Zones will be displayed."
			*Comment = "FALSE = You get nothing."
		}


		*BOOL = "LastStage"
		{
			*VALUE	= "False"
			*DISPLAYNAME = "Last stage?"
			*Comment = "TRUE  = Plesiosaur will stay still and fight."
			*Comment = "FALSE = Plesiosaur will swim around looking for a target."
		}
		
		*FLOAT = "SUWD"
		{
			*VALUE	= 8.0
			*DISPLAYNAME = "Swim under water depth"
			*Comment = "In meters."
		}
		
		*FLOAT = "SUWDDS"
		{
			*VALUE	= 5.0
			*DISPLAYNAME = "Swim under water dive speed"
			*Comment = "How fast the plesiosaur will diver under."
		}

		*FLOAT = "SUWMDT"
		{
			*VALUE	= 5.0
			*DISPLAYNAME = "Minimum time between dive under water"
			*Comment = "In seconds."
		}

		*FLOAT = "SUWC"
		{
			*VALUE	= 0.25
			*DISPLAYNAME = "Chance of swimming under water"
			*Comment = "0 = none."
			*Comment = "1 = Lots."
		}

		*FLOAT = "SAWMDT"
		{
			*VALUE	= 5.0
			*DISPLAYNAME = "Minimum time between rise to surface (if under)"
			*Comment = "In seconds."
		}

		*FLOAT = "SAWC"
		{
			*VALUE	= 0.50
			*DISPLAYNAME = "Chance of swimming above water (if under)"
			*Comment = "0 = none."
			*Comment = "1 = Lots."
		}

		*FLOAT = "FIDMT"
		{
			*VALUE	= 10.0
			*DISPLAYNAME = "Minimum time between fidgets"
			*Comment = "In seconds."
		}

		*FLOAT = "FIDC"
		{
			*VALUE	= 0.10
			*DISPLAYNAME = "Chance of a fidget"
			*Comment = "0 = none."
			*Comment = "1 = Lots."
		}

		*FLOAT = "SAWSS"
		{
			*VALUE	= 3.0
			*DISPLAYNAME = "Swim above water surface speed"
			*Comment = "This value is added to the spline path value."
		}

		*FLOAT = "AHRR"
		{
			*VALUE	= 10.0
			*DISPLAYNAME = "Head damage radius"
			*Comment = "This is the area that will inflict damage onto the target."
			*Comment = "This is area is positioned at the mouth of the plesiousaur."
		}

		*FLOAT = "AHRD"
		{
			*VALUE	= 25.0
			*DISPLAYNAME = "Head radius damage"
			*Comment = "This is the amount of damage the target receives if the target is within the radius."
		}

		*FLOAT = "FZR"
		{
			*VALUE	= 3.75
			*DISPLAYNAME = "Foward zone radius"
			*Comment = "In meters."
		}

		*FLOAT = "LZR"
		{
			*VALUE	= 2.0
			*DISPLAYNAME = "Left zone radius"
			*Comment = "In meters."
		}

		*FLOAT = "RZR"
		{
			*VALUE	= 2.0
			*DISPLAYNAME = "Right zone radius"
			*Comment = "In meters."
		}

		*FLOAT = "SLZ"
		{
			*VALUE	= 3.0
			*DISPLAYNAME = "Sweep left zone radius"
			*Comment = "In meters."
		}

		*FLOAT = "SRZ"
		{
			*VALUE	= 3.0
			*DISPLAYNAME = "Sweep right zone radius"
			*Comment = "In meters."
		}

		*FLOAT = "ESZR"
		{
			*VALUE	= 20.0
			*DISPLAYNAME = "End sequence zone radius"
			*Comment = "In meters."
		}
	}		
	
}


;------------------------------------------------------------------------------
; MountAI
;------------------------------------------------------------------------------
*OBJECT = "MountAI"
{
	*NAME	= "MountAI"
	*TYPE	= "OBJECT"
	*INHERITS = "EnemyAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		Walk,
		AlertWalk,
		RotateLeft,
		RotateRight,
		AlertRotateLeft,
		AlertRotateRight,
		Run,
		AlertRun,
		Jump,
		Climb,
		Eat,
		Damaged,
		Death,
		FireRun,
		FireDeath,
		Attack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim,
		Special1,
		Special2,
		Special3,
		Special4

	}

	*VARIABLES = 
	{
		*FilePick = "RiderName"
		{
			*DISPLAYNAME = "Rider"
			*Value			=	""
			*Directory      =   "$\Data\Actors"
			*Extension      =   "atr"
		}

		*String = "RiderPoint"
		{
			*DisplayName	=	"Rider HotPoint"
			*Value			=	""
			*Comment		=	"The hotpoint to attach the rider to"
		}
	}
}

;------------------------------------------------------------------------------
; SwayingTreeAI
;------------------------------------------------------------------------------
*OBJECT = "SwayingTreeAI"
{
	*NAME	= "SwayingTreeAI"
	*TYPE	= "OBJECT"
	*INHERITS = "DeviceAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Setup		,
		Swaying		,
		StartToFall	,
		Falling		,
		Bounce		,
		StartToShake	,
		BushShake	,
		Dead
	}

	*Combo = "STType"
	{
		*DisplayName	=	"Tree Type"
		*Value			=	0 
		*ComboList		=
		{
			"Swaying Tree",
			"Bush"
		}
	}

	*FLOAT = "STSpd"
	{
		*MIN	= 0.0
		*MAX	= 10.0
		*VALUE	= 1.0
		*DISPLAYNAME = "Swaying speed"
		*Comment     = "0 = stopped, 10 = fast"
	}

	*FLOAT = "STAmn"
	{
		*MIN	= 0.0
		*MAX	= 1.0
		*VALUE	= 0.05
		*DISPLAYNAME = "Amount of sway"
		*Comment     = "0 = none, 1 = lots"
	}

	*FLOAT = "STChs"
	{
		*MIN	= 0.0
		*MAX	= 1.0
		*VALUE	= 0.05
		*DISPLAYNAME = "Sway chaos"
		*Comment = "If all trees have 0 sway chaos they will"
		*Comment = "all sway together. If there is chaos it will"
		*Comment = "cause them to sway more differently to each other."
	}

	*BOOL = "STFall"
	{
		*VALUE	= "True"
		*DISPLAYNAME = "Fall at 0 health?"
		*Comment = "TRUE  = Tree will fall down when it's health reaches 0."
		*Comment = "FALSE = No fall."
	}


	*FLOAT = "STFSpd"
	{
		*MIN	= 0.0
		*MAX	= 1.0
		*VALUE	= 0.025
		*DISPLAYNAME = "Tree fall speed"
		*Comment = "How fast a tree falls when it's dying."
		*Comment = " 0 = stopped, 1 = fall fast."
	}


	*BOOL = "STClsn"
	{
		*VALUE	= "False"
		*DISPLAYNAME = "Keep collision after fall?"
		*Comment = "TRUE  = Actor will retain collision even after it has fallen."
		*Comment = "FALSE = Actor will have no collision once it has hit the floor."
	}


	*FLOAT = "STFRSpd"
	{
		*MIN	= 0.0
		*MAX	= 1.0
		*VALUE	= 0.07f
		*DISPLAYNAME = "Tree fall rotate speed"
		*Comment = "How fast a tree rotates when it falls."
		*Comment = " 0 = none, 1 = fast."
	}

	
	*FLOAT = "STFBnc"
	{
		*MIN	= 0.0
		*MAX	= 1.0
		*VALUE	= 0.25
		*DISPLAYNAME = "Tree fall bounce"
		*Comment = "How much bounce a falling tree has."
		*Comment = "0 = none, 1 = really really bouncy."
	}

	*FLOAT = "STSAmn"
	{
		*MIN	= 0.0
		*MAX	= 1.0
		*VALUE	= 0.25
		*DISPLAYNAME = "Shake Amount"
		*Comment = "Amount of this bush will shake."
		*Comment = "0 = none, 1 = insane."
	}

	*FLOAT = "STSCnt"
	{
		*MIN	= 1.0
		*VALUE	= 2.0
		*DISPLAYNAME = "Shake count"
		*Comment = "How many times the bush will shake."
		*Comment = "1 = once, 666 = Six hundred and sixty six times."
	}


	*FLOAT = "STSSpd"
	{
		*MIN	= 0.1
		*MAX	= 10.0
		*VALUE	= 1.5
		*DISPLAYNAME = "Shake Speed"
		*Comment = "How fast this bush will shake."
		*Comment = "0.1 = slow, 10 = v.fast."
	}

	*FLOAT = "STSpdR"
	{
		*MIN	= 0.0
		*MAX	= 1.0
		*VALUE	= 0.8
		*DISPLAYNAME = "Less player speed"
		*Comment = "How much a players speed will be reduced by"
		*Comment = "if it tries to pass through this bush."
		*Comment = "1.0 = none, 0.01 = a lot."
	}

	*FLOAT = "STDFan"
	{
		*MIN	= 0
		*MAX	= 359
		*VALUE	= 0
		*DISPLAYNAME = "Default Fall Angle"
		*Comment = "If the tree/bush gets damaged from no indirectly, it was fall at this angle."
		*Comment = "0-359 degrees."
	}

	*BOOL = "STADef"
	{
		*VALUE	= "False"
		*DISPLAYNAME = "Always use default fall angle."
		*Comment = "True = This actor will always fall at the 'Default fall angle' regardless of how the actor was hit."
		*Comment = "False= The actor will fall at the angle of impact, unless hit by a damage event."
	}

	*FLOAT = "STFRad"
	{
		*MIN	= 0
		*VALUE	= 0.0f
		*DISPLAYNAME = "Fall trigger radius"
		*Comment = " 0 = Not used."
		*Comment = ">0 = Actor will fall if the player gets within this radius of the actor."
	}

}

;------------------------------------------------------------------------------
; Stack manager
;------------------------------------------------------------------------------
*OBJECT = "StackManager"
{
	*NAME	= "StackManager"
	*TYPE	= "OBJECT"
	*INHERITS = "DeviceAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Setup		,
		Idle		,
		Break		
	}

	*FLOAT = "Imppwr"
	{
		*MIN		= 0.0f
		*VALUE		= 8.0f
		*DISPLAYNAME 	= "Impact power"
		*Comment 	= "Power of the impact into stacked objects."
		*Comment 	= "i.e."
		*Comment 	= "1.0f stacked objects just fall."
		*Comment	= "10.0f stacked objects explode."
	}

	*BOOL = "UDmass"
	{
		*VALUE		= "True"
		*DISPLAYNAME 	= "Use default mass?"
		*Comment 	= "Force each stacked actor to have the default mass."
	}


	*FLOAT = "DMass"
	{
		*MIN		= 0.0f
		*VALUE		= 30.0f
		*DISPLAYNAME 	= "Default mass"
		*Comment 	= "Default mass value."
	}

	*BOOL = "UCog"
	{
		*VALUE		= "False"
		*DISPLAYNAME 	= "Use 'Cog' rotate?"
		*Comment 	= "True  = Rocks will rotate like cogs."
		*Comment 	= "False = Rocks will rotate in the direction they travel."
	}

	*FLOAT = "MDmg"
	{
		*MIN		= 0.0f
		*VALUE		= 50.0f
		*DISPLAYNAME 	= "Actor Damage "
		*Comment 	= "This is the amount of damage the stacked actor will cause when it hits something."
	}

	*FLOAT = "MRss"
	{
		*MIN		= 0.0f
		*VALUE		= 0.5f
		*DISPLAYNAME 	= "Rotate speed scale "
		*Comment 	= "A scaler to on the rotational speed of the stackable actors."
		*Comment 	= "e.g."
		*Comment 	= "     0.1 = stackable actors will rotate slowly"
		*Comment 	= "     2.0 = stackable actors will fast"
	}

	*FLOAT = "TDam"
	{
		*VALUE		= 1.0f
		*DISPLAYNAME 	= "Health"
		*Comment 	= "When health is 0 stack will fall."
	}
	

}


;------------------------------------------------------------------------------
; Stackable Object
;------------------------------------------------------------------------------
*OBJECT = "Stackable"
{
	*NAME	= "Stackable"
	*TYPE	= "OBJECT"
	*INHERITS = "DeviceAIObject"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Setup		,
		Idle		,
		Falling
	}


}


;------------------------------------------------------------------------------
; RidingRaptorAI
;------------------------------------------------------------------------------
*OBJECT = "RidingRaptorAI"
{
	*NAME	= "RidingRaptorAI"
	*TYPE	= "OBJECT"
	*INHERITS = "TurokAIObject"
	*UseInActorEd = "True"

	*AIModes =
	{
		RaptorRideIdle,
		RaptorRideIdleNoControl,
		RaptorRideRun,
		RaptorRideJump,
		RaptorRideFall,
		RaptorRideTurnLeft,
		RaptorRideTurnRight,
		RaptorRideTurnLeftRun,
		RaptorRideTurnRightRun,
		RaptorRideBiteAttack,
	}
}




;------------------------------------------------------------------------------
; HumanAI
;------------------------------------------------------------------------------
*OBJECT = "HumanAI"
{
	*NAME	= "HumanAI"
	*TYPE	= "OBJECT"
	*INHERITS = "EnemyAIObject"
	*UseInActorEd = "True"

	*BOOL = "CallsOut"
	{
		*VALUE	= "False"
		*DISPLAYNAME = "Calls Out?"
		*Comment = "Calls out when detects target?"
	}

	*BOOL = "CanBeGravityHeld"
	{
		*Usage			= "Protected"
		*VALUE	= "True"
		*DISPLAYNAME = "Can Be Gravity Held?"
	}

	*int = "HeadFlinchBone"
	{
		*Usage			= "Protected"
		*VALUE			= -1
		*DISPLAYNAME	= "HeadFlinchBone"
	}

	*int = "TorsoFlinchBone"
	{
		*Usage			= "Protected"
		*VALUE			= -1
		*DISPLAYNAME	= "TorsoFlinchBone"
	}

	*Group = "Assault"
	{
		*FLOAT = "FollowDist"
		{
			*VALUE	= 6
			*DISPLAYNAME = "Follow Distance"
		}

		*FLOAT = "MinAssaultDist"
		{
			*VALUE	= 6
			*DISPLAYNAME = "Min Assault Distance"
		}

		*FLOAT = "MaxAssaultDist"
		{
			*VALUE	= 20
			*DISPLAYNAME = "Max Assault Distance"
		}

		*BOOL = "AssaultFront"
		{
			*VALUE	= "True"
			*DISPLAYNAME = "Stay in Front?"
		}
	}

	*Group = "Evasion"
	{
		*Combo = "EvadeAcquire"
		{
			*DisplayName	=	"New Target"
			*Value			=	0
			*ComboList		=
			{
				"NEVER",
				"SELDOM",
				"FREQUENTLY",
				"ALWAYS"
			}
			*Comment		=	"Frequency of evasion when a new target is aquired"
		}

		*Combo = "EvadeDamage"
		{
			*DisplayName	=	"Damage"
			*Value			=	0
			*ComboList		=
			{
				"NEVER",
				"SELDOM",
				"FREQUENTLY",
				"ALWAYS"
			}
			*Comment		=	"Frequency of evasion when damage is taken"
		}

		*Combo = "EvadeAttack"
		{
			*DisplayName	=	"Attack"
			*Value			=	0
			*ComboList		=
			{
				"NEVER",
				"SELDOM",
				"FREQUENTLY",
				"ALWAYS"
			}
			*Comment		=	"Frequency of evasion when attacking"
		}

		*BOOL = "CHEvade"
		{
			*VALUE	= "false"
			*DISPLAYNAME = "Can Hop Evade"
		}

		*BOOL = "CREvade"
		{
			*VALUE	= "false"
			*DISPLAYNAME = "Can Roll Evade"
		}
		
		*BOOL = "CanTeleport"
		{
			*VALUE	= "False"
			*DISPLAYNAME = "Can teleport?"
		}
	}


	*BOOL = "SwitchCollision"
	{
		*Usage			= "Protected"
		*VALUE			= "False"
		*DISPLAYNAME	= "Switch Collision"
		*Comment		= "Switch between standing and crouching collision"
	}

	*Group = "BodyParts"
	{
		*BOOL = "CanDismember"
		{
			*Usage			= "Protected"
			*VALUE			= "True"
			*DISPLAYNAME	= "Can Dismember"
		}

		*String = "BodyPartPrefix"
		{
			*Usage			=	"Protected"
			*DisplayName	=	"Prefix"
			*Value			=	""
		}
	}

	*AIMODES = 
	{
		Idle,
		AlertIdle,
		CrouchIdle,
		ProneIdle,
		RotateLeft,
		RotateRight,
		AlertRotateLeft,
		AlertRotateRight,
		StandingSleep,
		Walk,
		AlertWalk,
		CrouchWalk,
		ProneCrawl,
		Run,
		AlertRun,
		FireRun,
		FireStarter,
		FireDeath,
		Fall,
		ExaggeratedFall,
		DeadFallFaceUp,
		DeadFallFaceDown,
		FallDeath,
		Jump,
		Climb,
		ClimbEnd,
		HangClimb,
		ClimbDeathStart,
		Damaged,
		Death,
		PoisonDamage,
		PoisonDeath,
		RunningDeath,
		ProneDeath,
		CrouchDeath,
		SquatDeath,
		SurrenderStandDeath,
		SurrenderKneelDeath,
		FallForwardDeath,
		HeadShotDeath,
		LeftArmDeath,
		RightArmDeath,
		LeftLegDeath,
		RightLegDeath,
		ExplosionDeath,
		ExploForeDeath,
		ExploBackDeath,
		ExplosionDamage,
		ExploForeDamage,
		ExploBackDamage,
		ImplodeDeath,
		GravityHeld,
		GravityFlinch,
		CornerCover,
		PopoutLeft,
		PopoutRight,
		BackPedal,
		StrafeLeft,
		StrafeRight,
		BackPedalDeath,
		Attack,
		SecondAttack,
		ThirdAttack,
		FourthAttack,
		FifthAttack,
		CrouchAttack,
		ProneAttack,
		UnderwaterIdle,
		UnderwaterSwim,
		WatersurfaceIdle,
		WatersurfaceSwim,
		SwimmingAttack,
		SquatIdle,
		CoverSquat,
		SquatPopup,
		SquatPopupIdle,
		SquatPopupShoot,
		SquatPopoutLeft,
		SquatPopLeftIdle,
		SquatPopLeftShoot,
		SquatReturnLeft,
		SquatPopoutRight,
		SquatPopRightIdle,
		SquatPopRightShoot,
		SquatReturnRight,
		CallOut,
		UsePullDown1,
		UsePullDown2,
		UsePush1,
		UsePush2,
		SurrenderKneel,
		SurrenderStand,
		SurrenderRun,
		SurrenderRotate,
		InjuredStand,
		InjuredWalk,
		InjuredRun,
		InjuredRotate,
		MountedIdle,
		EvadeHopLeft,
		EvadeHopRight,
		EvadeDiveLeft,
		EvadeDiveRight,
		EvadeProneLeft,
		EvadeProneRight,
		CrushedDeath,
		SwarmBoreDeath,
		SwarmBoreFinish,
		StealthDeath,
		Taunt,
		Talk,
		TeleportOut,
		TeleportIn,
		Special1,
		Special2,
		Special3,
		Special4,
		Knockback,
		Knockfore,
		Knockhit,
		Electrocution,
		Cower
	}
}

;------------------------------------------------------------------------------
; RiderAI
;------------------------------------------------------------------------------
*OBJECT = "RiderAI"
{
	*NAME	= "RiderAI"
	*TYPE	= "OBJECT"
	*INHERITS = "HumanAI"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		MountedIdle,
		RiderSetup,
		RiderIdle,
		RiderFlyUp,
		RiderFlyUpMed,
		RiderFlyUpFull,
		RiderFlyDown,
		RiderFlyDownMed,
		RiderFlyDownFull,
		RiderFlyLeft,
		RiderFlyRight,
		RiderEdgeLeft,
		RiderEdgeRight,
		RiderCollision
	}
}



;------------------------------------------------------------------------------
; FlyingEnemyAI on a spline path
;------------------------------------------------------------------------------
*OBJECT = "FlyingEnemyAI"
{
	*NAME	= "FlyingEnemyAI"
	*TYPE	= "OBJECT"
	*INHERITS = "EnemyAIObject"
	*UseInActorEd = "True"


	;-----------------------------------
	; Variables
	;-----------------------------------
	*Variables	= 
	{
		*Bool = "NLP"
		{
			*DisplayName 		= 	"Never leave path?"
			*Value			= 	"True"
			*Comment 		=	"TRUE  = This actor will always stay on it's path."
			*Comment 		= 	"FALSE = This actor will come off it's path when it sees you."
		}

		*Float = "TARGERR"
		{
			*DisplayName		=	"Targetting Error (meters)"
			*Value			=	1.0
			*Min			=	0.0
			*Max			=	99.0
			*Comment		=	"Potential error added to all sides of the target."
		}
		
		*Float = "SHOOTFR"
		{
			*DisplayName		=	"Shooting Frequency"
			*Value			=	0.05
			*Min			=	0.0
			*Max			=	1.0
			*Comment		=	"How often I shoot a target in range."
			*Comment		=	"0 = never, 1 = always."
		}
		
		*INT = "TARGAN"
		{
			*DisplayName		=	"Target Angle"
			*Value			=	45
			*Min			=	1
			*Max			=	90
			*Comment		=	"This is the my view cone."
		}

		*Float = "TAUPDT"
		{
			*DisplayName		=	"Target update time (Secs)"
			*Value			=	3.0
			*Min			=	0.0
			*Comment		=	"How often shall I change my target position?"
			*Comment		=	"0 = always try and find best position"
			*Comment		=	"2 = look for the best position every 2 seconds."
		}

		*Bool = "OPSD"
		{
			*DisplayName 		= 	"Use target's speed?"
			*Value			= 	"True"
			*Comment 		=	"TRUE  = This enemy will match it's targets speed."
			*Comment 		= 	"FALSE = This enemy will use it's own speed."
		}


		*Float = "EXSPD"
		{
			*DisplayName		=	"Catchup speed"
			*Value			=	20.0
			*Min			=	0.0
			*Comment		=	"How much faster then the player can I get?"
			*Comment		=	"This is how much extra speed this actor will go to catch up"
			*Comment		=	"with and/or get in front of the target."
		}

		*Float = "OFFX"
		{
			*DisplayName		=	"X Offset (meters)"
			*Value			=	20.0
			*Min			=	0.0
			*Comment		=	"This value will determine how I can position myself to the right/left"
			*Comment		=	"of the target. This value is used as a range, ie, -X to X"
		}

		*Float = "OFFY"
		{
			*DisplayName		=	"Y Offset (meters)"
			*Value			=	20.0
			*Min			=	0.0
			*Comment		=	"This value will determine how I can position myself to the above/below"
			*Comment		=	"of the target. This value is used as a range, ie, -Y to Y"
		}

		*Float = "OFFZMin"
		{
			*DisplayName		=	"Min Z Offset (meters)"
			*Value			=	20.0
			*Min			=	-999.0
			*Comment		=	"This value will determine how I can position myself to the infornt/behind"
			*Comment		=	"of the target. This value is used as a range, ie, -Z to Z"
		}

		*Float = "OFFZMax"
		{
			*DisplayName		=	"Max Z Offset (meters)"
			*Value			=	100.0
			*Min			=	-999.0
			*Comment		=	"This value will determine how I can position myself to the infornt/behind"
			*Comment		=	"of the target. This value is used as a range, ie, -Z to Z"
		}

		*Float = "OFFUPT"
		{
			*DisplayName	=	"Offset update time (Secs)"
			*Value			=	8.0
			*Min			=	0.0
			*Comment		=	"How often will I change my offset around the player?"
			*Comment		=	"This will dictate when this actor will try and place itself"
			*Comment		=	"with and/or get in front of the target."
		}
		
		*Float = "VBSpd"
		{
			*DisplayName	=	"Velocity blend speed"
			*Value			=	1.0
			*Min			=	0.0
			*Comment		=	"The is how blending between changing directions."
			*Comment		=	"0.1 = slow very laggy."
			*Comment		=	"1.0 = normal."
			*Comment		=	"2.0 = faster."
		}
		
	}


	*AIMODES = 
	{
		FlyUp		,
		FlyUpMed 	,
		FlyUpFull	,
		FlyDown  	,
		FlyDownMed	,
		FlyDownFull	,
		FlyLeft		,
		FlyRight	,
		Collsion	,
		Dead		,
		DeadGib		,
		FreeFlight	,
		SplineFlight
	}


}


;------------------------------------------------------------------------------
; Door
;------------------------------------------------------------------------------
*OBJECT = "Door"
{
	*NAME	= "Door"
	*INHERITS = "Actor"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"



	*VARIABLES = 
	{
		*Combo = "DoorStatus"
		{
			*DisplayName	=	"Door Status"
			*Value			=	0
			*ComboList = 
			{
				"Open"	,
				"Closed" 
			}
			*Comment		=	"Open - door starts out being open"
			*Comment		=	"Closed - door starts out being closed"
		}

		*Combo = "LockedStatus"
		{
			*DisplayName	=	"Locked Status"
			*Value			=	0
			*ComboList = 
			{
				"Unlocked"	,
				"Locked" 
			}
            *Comment		=	"Unlocked - The door starts out being unlocked."
			*Comment		=	"Locked - The door starts out being locked."
		}
    }


	*AIMODES = 
	{
		Open,
		Close
	}

}
;------------------------------------------------------------------------------
; Hinged Door
;------------------------------------------------------------------------------
;*OBJECT = "HingedDoorObject"
;{
;	*NAME	= "HingedDoorObject"
;	*INHERITS = "DoorObject"
;	*TYPE	= "OBJECT"
;	*UseInActorEd = "True"
;
;	*AIMODES = 
;	{
;		OpenRight,
;		OpenLeft,
;		Close
;	}
;}


;------------------------------------------------------------------------------
; AIMarker
;------------------------------------------------------------------------------
*OBJECT = "AIMarker"
{
	*NAME	= "AIMarker"
	*INHERITS = "DeviceAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*VARIABLES = 
	{
		*Combo = "MARKER_TYPE"
		{
			*DisplayName	=	"Marker Type"
			*Value			=	0
			*Usage			= "Protected"
			*ComboList = 
			{
				"Retreat"	,
				"Cower"		,
				"Goto"		,
				"Front"		,
				"Allied"	,
				"Enemy"		,
				"Cover"
			}
		}

		*Group = "Cover"
		{
			*Combo = "COVER_TYPE"
			{
				*DisplayName	=	"Cover Type"
				*Value			=	0 
				*ComboList		=	{ "Stepout" , "Circle" }
			}

			*Combo = "STEPOUT_DIR"
			{
				*DisplayName	=	"Stepout Direction"
				*Value			=	0 
				*ComboList		=	{ "Left" , "Right", "Both", "Up" }
			}

			*FLOAT = "COVER_RADIUS"
			{
				*VALUE	= 4
				*MIN	= 0
				*DISPLAYNAME = "Cover Radius"
			}

			*FLOAT = "COVER_MINRANGE"
			{
				*VALUE	= 8.0
				*MIN	= 0.0
				*DISPLAYNAME = "Cover Min Range"
			}

			*FLOAT = "COVER_MAXRANGE"
			{
				*VALUE	= 9999.0
				*MIN	= 0.0
				*DISPLAYNAME = "Cover Max Range"
			}

		}

	}

	*Protected	=	"TurokAIType"
	*Protected	=	"Collision"
	*Protected	=	"Physics"
	
}

;------------------------------------------------------------------------------
; AITarget
;------------------------------------------------------------------------------
*OBJECT = "AITarget"
{
	*NAME	= "AITarget"
	*INHERITS = "TurokAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"
}

;------------------------------------------------------------------------------
; FlyingIndigenousAI
;------------------------------------------------------------------------------
*OBJECT = "FlyingIndigenousAI"
{
	*NAME	= "FlyingIndigenousAI"
	*TYPE	= "OBJECT"
	*INHERITS = "IndigenousAI"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		Flap,
		Glide,
		TakeOff,
		Hover,
		Death
	}

	*FilePick = "AlternateType"
	{
		*Usage			= "Protected"
		*DisplayName	=	"Alternate Type"
		*Value			=	""
		*Directory		=	"$/Data/Actors/"
		*Extension		=	"atr"
	}

	*Combo = "BirdForm"
	{
		*Usage			= "Protected"
		*DisplayName	=	"Form"
		*Value			=	0
		*ComboList = 
		{
			"Ground"	,
			"Flying"		
		}
	}

	*Float = "FlightSpeed"
	{
		*DisplayName	=	"Flight Speed"
		*Value			=	6.5
		*Min			=	0.0
	}

	*Combo = "FlyingHover"
	{
		*DisplayName	=	"Hover"
		*Value			=	0
		*ComboList = 
		{
			"Never"		,
			"Briefly"	,
			"Long"
		}
	}

	*Combo = "FlyingPerturb"
	{
		*DisplayName	=	"Perturb"
		*Value			=	0
		*ComboList = 
		{
			"None"		,
			"Little"	,
			"Some"		,
			"Lots"
		}
	}

	*Combo = "FlapBehavior"
	{
		*DisplayName	=	"Flap"
		*Value			=	2
		*ComboList = 
		{
			"Never"			,
			"Always"		,
			"Climbing"		,
			"Periodically"
		}
	}

}


;------------------------------------------------------------------------------
; AlarmBox
;------------------------------------------------------------------------------
*OBJECT = "AlarmBox"
{
	*NAME	= "AlarmBox"
	*INHERITS = "DeviceAIObject"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
		Inactive,
	}

	*VARIABLES = 
	{
		*Bool = "UseRegion"
		{
			*DisplayName = "Use Region"
			*Value	= 0
			*Comment = "Affects AI's within the region the alarm is located"
			*Comment = "If TRUE, it overrides Alarm Radius"
		}
		
		*Float = "AlarmRadius"
		{
			*VALUE	= 0
			*MIN	= 0
			*DISPLAYNAME =	"Alarm Radius"
			*Comment	=	"The distance away the alarm effects AIs"
		}

		*Float = "AlarmTime"
		{
			*VALUE	= 20
			*MIN	= 0
			*DISPLAYNAME =	"Alarm Time"
			*Comment	=	"The time period the alarm stays on"
		}


		*Group = "Alert"
		{
			*Bool = "AlertAIs"
			{
				*DisplayName = "Alert AI's"
				*VALUE	= "True"
				*Comment = "True if tripping of alarm alerts all other AI's within range"
			}
	
			*String = "AlertState"
			{
				*DisplayName	=	"State"
				*Value			=	""
				*Comment		=	"The new state for the AI when alerted."
				*Comment		=	"If nothing is specified, then the state will be auto assigned."
			}
		}

		*Group = "Stand Down"
		{
			*Bool = "StandDownAIs"
			{
				*DisplayName = "Stand Down AI's"
				*VALUE	= "False"
				*Comment = "True if inactivation of alarm lowers alert all other AI's within range"
			}
	
			*String = "StandDownState"
			{
				*DisplayName	=	"State"
				*Value			=	""
				*Comment		=	"The new state for the AI when standind down."
				*Comment		=	"If nothing is specified, then the state will be auto assigned."
			}
		}
	}
		
}


;------------------------------------------------------------------------------
; Enemy Weapon
;------------------------------------------------------------------------------
*OBJECT = "EnemyWeapon"
{
	*NAME	= "EnemyWeapon"
	*INHERITS = "Actor"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
	}

	*VARIABLES = 
	{
		*FilePick = "ewPartName"
		{
			*DisplayName	=	"Projectile Particle"
			*Value			=	""
			*Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
		}

		*FilePick = "ewAltPartName"
		{
			*DisplayName	=	"Alt Projectile Particle"
			*Value			=	""
			*Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
		}

		*Int = "ewAltChance"
		{
			*VALUE	= 0
			*MIN	= 0
			*MAX	= 10
			*DISPLAYNAME =	"Alt Particle Chance"
			*Comment	=	"The chance in ten that it will use the alt particle"
		}

		*FilePick = "ewFlashName"
		{
			*DisplayName	=	"Flash Particle"
			*Value			=	""
			*Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
		}

		*Int = "ewFlashChance"
		{
			*VALUE	= 0
			*MIN	= 0
			*MAX	= 10
			*DISPLAYNAME =	"Flash Chance"
			*Comment	=	"The chance in ten that it will use a muzzle flash"
		}

		*Sound = "PrimarySound"
		{
			*DisplayName    =   "Primary Sound"
		}

		*Float = "ewReloadTime"
		{
			*VALUE	= 1.5
			*MIN	= 0
			*DISPLAYNAME =	"Reload Time"
			*Comment	=	"The time to reload"
		}

		*Int = "ewMinFires"
		{
			*VALUE	= 1
			*MIN	= 1
			*DISPLAYNAME =	"Min Fire Times"
			*Comment	=	"The minimum number of times to fire"
		}

		*Int = "ewMaxFires"
		{
			*VALUE	= 1
			*MIN	= 1
			*DISPLAYNAME =	"Max Fire Times"
			*Comment	=	"The maximum number of times to fire"
		}

		*FilePick = "ewSecPartName"
		{
			*DisplayName	=	"Sec Proj Particle"
			*Value			=	""
			*Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
		}

		*FilePick = "ewSecFlashName"
		{
			*DisplayName	=	"Sec Flash Particle"
			*Value			=	""
			*Directory      =   "$\Data\Particle\"
            *Extension      =   "par"
            *Extension      =   "eff"
		}

		*Sound = "SecondarySound"
		{
			*DisplayName    =   "Secondary Sound"
		}

		*Float = "ewSecReloadTime"
		{
			*VALUE	= 1.5
			*MIN	= 0
			*DISPLAYNAME =	"Sec Reload Time"
			*Comment	=	"The time to reload"
		}

		*Int = "ewSecMinFires"
		{
			*VALUE	= 1
			*MIN	= 1
			*DISPLAYNAME =	"Sec Min Fire Times"
			*Comment	=	"The minimum number of times to fire"
		}

		*Int = "ewSecMaxFires"
		{
			*VALUE	= 1
			*MIN	= 1
			*DISPLAYNAME =	"Sec Max Fire Times"
			*Comment	=	"The maximum number of times to fire"
		}

		*Sound = "DropSound"
		{
			*DisplayName    =   "Drop Sound"
		}

        *Bool = "ewModVel"
        {
            *DisplayName    =   "Modify Velocity"
            *Value          =   "False"
            *Comment        =   "If True, particle velocity is modified (for thrown objects)"
        }

		*Float = "ewThrowDist"
		{
			*VALUE	= 40
			*MIN	= 0
			*DISPLAYNAME =	"Throw Distance"
			*Comment	=	"The distance particle travels at normal velocity"
		}


        *Bool = "ewHoldDown"
        {
            *DisplayName    =   "Hold Down"
            *Value          =   "False"
            *Comment        =   "If True, hold down trigger"
        }

	}
}

;------------------------------------------------------------------------------
; Enemy Accessory
;------------------------------------------------------------------------------
*OBJECT = "EnemyAccessory"
{
	*NAME	= "EnemyAccessory"
	*INHERITS = "Actor"
	*TYPE	= "OBJECT"
	*UseInActorEd = "True"

	*AIMODES = 
	{
		Idle,
	}

	*Variables = 
    {
        *Bool = "eaDHead"
        {
            *DisplayName    =   "Drop On Headshot"
            *Value          =   "False"
            *Comment        =   "If True, this is dropped on a headshot"
        }

		*Sound = "DropSound"
		{
			*DisplayName    =   "Drop Sound"
		}

	 }

}

;------------------------------------------------------------------------------
; Cinema Camera attractor
;------------------------------------------------------------------------------

*Object = "CinemaCameraAttractor"
{
    *Name           =   "CinemaCameraAttractor"
    *Type           =   "Object"
    *UseInActorEd	=	"True"

    ;-----------------------------------
    ; Inheritance
    ;-----------------------------------
    *Inherits   =   "SharedCausesForAllActors"
    *Inherits   =   "SharedEventsForAllActors"

    ;-----------------------------------
    ; Variables
    ;-----------------------------------
    *Variables = 
    {
        *Combo = "AffectsTarget"
        {
            *DisplayName    =   "Affects camera"
            *Value          =   0
            *ComboList = 
            {
                "Position" ,
                "Target"
            }
            *Comment        =   "If set to Position, this influencer will control where the"
            *Comment        =   "camera is placed. If set to Target, it will control where the"
            *Comment        =   "camera looks."

            *Comment        =   "Position: this causes the influencer to move the camera itself to a certain position."
            *Comment        =   ""
            *Comment        =   "Target: this influencer will affect the point at which the camera is looking."
            *Comment        =   ""
            *Comment        =   "It will still try to place the camera so that both the player and the target"
            *Comment        =   "position are kept in view, but the position that it generates for the camera"
            *Comment        =   "can be overridden."
        }
        *Float = "MaxStrength"
        {
            *DisplayName    =   "Max. strength"
            *Value          =   1
            *Min            =   0
            *Max            =   1
            *Comment        =   "Determines how much 'pull' this influencer will exert on the"
            *Comment        =   "camera.  If set to 0.5, the influencer will pull the camera"
            *Comment        =   "to a point halfway between the player and itself."
        }
        *Float = "PlayerCameraHorzOffset"
        {
            *DisplayName    =   "Horizontal offset"
            *Value          =   5
            *Min            =   -1000
            *Max            =   1000
            *Comment        =   "This is only used if this influencer affects the camera target."
            *Comment        =   "The influencer will calculate a position for the camera that is"
            *Comment        =   "this far away from the player and opposite the player from the"
            *Comment        =   "camera target at all times. Note that this camera position is"
            *Comment        =   "overridden by any other active influencers that affect the camera"
            *Comment        =   "position."
        }
        *Float = "PlayerCameraVertOffset"
        {
            *DisplayName    =   "Vertical offset"
            *Value          =   5
            *Min            =   -1000
            *Max            =   1000
            *Comment        =   "This is only used if this influencer affects the camera target."
            *Comment        =   "The influencer will calculate a position for the camera that is"
            *Comment        =   "this far above the player at all times. Note that this camera"
            *Comment        =   "position is overridden by any other active influencers that"
            *Comment        =   "affect the camera position."
        }
        *Bool = "PreventUserCameraControl"
        {
            *DisplayName    =   "Prevent user camera control"
            *Value          =   "True"
            *Comment        =   "If True, player is prevented from manually moving the camera"
            *Comment        =   "while this influencer is active. If false, player can take"
            *Comment        =   "control of the camera away from this influencer, which is then"
            *Comment        =   "inactive until the player reactivates it via the turn-on link."
        }
        *Float = "TimeToReachMaxStrength"
        {
            *DisplayName    =   "Fade in time"
            *Value          =   2.0
            *Min            =   0
            *Max            =   1000
            *Comment        =   "Amount of time (in seconds) which it takes for this influencer"
            *Comment        =   "to reach full strength."
        }
        *Float = "TimeToTurnOff"
        {
            *DisplayName    =   "Fade out time"
            *Value          =   2.0
            *Min            =   0
            *Max            =   1000
            *Comment        =   "Amount of time (in seconds) which it takes for this influencer"
            *Comment        =   "to go from full strength to zero strength when turned off."
        }
    }

    ;-----------------------------------
    ; Causes
    ;-----------------------------------

    ;-----------------------------------
    ; Events
    ;-----------------------------------
}


;------------------------------------------------------------------------------
; Enemy Accessory
;------------------------------------------------------------------------------
*OBJECT = "DMBot"
{
	*Name = "DMBot"
	*INHERITS = "DMPlayer"
	*TYPE = "OBJECT"
	*UseInActorEd = "True"
	*AIMODES = 
	{
		"Idle",
		"Run",
		"Walk",
		"Jump",
		"MoveForward"
		"MoveBackward",
		"StrafeLeft",
		"StrafeRight",
		"MoveLeft",
		"MoveRight",
		"TurnLeft",
		"TurnRight",
		"BackWalk",
		"BackRun",
		"Damaged",
		"Attack",
		"LoopAttack",
		"Fall",
		"CrouchIdle",
		"CrouchForward",
		"CrouchBackward",
		"CrouchLeft",
		"CrouchRight",
		"CrouchTurnRight",
		"CrouchTurnLeft",
		"Respawn",
		"LeftDamage",
		"ClimbIdle",
		"ClimbUp",
		"ClimbDown",
		"ClimbLeft",
		"ClimbRight",
		"AttackForward",
		"AttackBackward",
		"AttackIdle",
		"AttackStrafeLeft",
		"AttackStrafeRight",
		"AttackJump",
		"CrouchAttackLeft",
		"CrouchAttackRight",
		"CrouchAttackForward",
		"CrouchAttackBackward",
		"CrouchAttackIdle",
		"SnipeAttack",
		"SwimForward",
		"SwimBackward",
		"SwimUp",
		"SwimDown",
		"SwimLeft",
		"SwimRight",
		"SwimBurst",
		"WaterSurfaceIdle",
		"UnderwaterIdle",
		"SwimTurnLeft",
		"SwimTurnRight",
		"LeapToShore",
		"SwimAttack"
	}
	*Variables =
	{
		*Group = "Weapon Selection"
		{
			*Combo = "PreferredWeapon00"
			{
				*DisplayName	=	"Preferred Weapon 1"
				*Value			=	12
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #1 favorite weapon"
			}
			*Combo = "PreferredWeapon01"
			{
				*DisplayName	=	"Preferred Weapon 2"
				*Value			=	11
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #2 favorite weapon"
			}
			*Combo = "PreferredWeapon02"
			{
				*DisplayName	=	"Preferred Weapon 3"
				*Value			=	10
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #3 favorite weapon"
			}
						*Combo = "PreferredWeapon03"
			{
				*DisplayName	=	"Preferred Weapon 4"
				*Value			=	9
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #4 favorite weapon"
			}
			*Combo = "PreferredWeapon04"
			{
				*DisplayName	=	"Preferred Weapon 5"
				*Value			=	8
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #5 favorite weapon"
			}
			*Combo = "PreferredWeapon05"
			{
				*DisplayName	=	"Preferred Weapon 6"
				*Value			=	7
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #6 favorite weapon"
			}
			*Combo = "PreferredWeapon06"
			{
				*DisplayName	=	"Preferred Weapon 7"
				*Value			=	6
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #7 favorite weapon"
			}
			*Combo = "PreferredWeapon07"
			{
				*DisplayName	=	"Preferred Weapon 8"
				*Value			=	5
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #8 favorite weapon"
			}
			*Combo = "PreferredWeapon08"
			{
				*DisplayName	=	"Preferred Weapon 9"
				*Value			=	4
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #9 favorite weapon"
			}
			*Combo = "PreferredWeapon09"
			{
				*DisplayName	=	"Preferred Weapon 10"
				*Value			=	3
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #10 favorite weapon"
			}
			*Combo = "PreferredWeapon10"
			{
				*DisplayName	=	"Preferred Weapon 11"
				*Value			=	2
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #11 favorite weapon"
			}
			*Combo = "PreferredWeapon11"
			{
				*DisplayName	=	"Preferred Weapon 12"
				*Value			=	1
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #12 favorite weapon"
			}
			*Combo = "PreferredWeapon12"
			{
				*DisplayName	=	"Preferred Weapon 13"
				*Value			=	0
				*ComboList		=
				{
					; this list must be kept synchronized with WeaponInfo.h!
					"War Club",
					"Bow",
					"TekBow",
					"Grenade",
					"Pistol",
					"Shotgun",
					"Machine Gun",
					"Launcher",
					"Tek Weapon",
					"Flame Thrower",
					"Guided Device",
					"Gravity Disrupter",
					"Dark Matter Cube",
					"Crossbow"
				}
				*Usage		 = "Public"
				*Comment		=	"The Bot's #13 favorite weapon"
			}
		}
		*Group = "Detection"
		{
			*Comment = "Sight, sound and smell detection parameters."

			*BOOL = "IGNOREPLAYER"
			{
				*VALUE	= "False"
				*DISPLAYNAME = "Ignore Player?"
				*Comment = "No detection.  Ignores player."
			}

			*BOOL = "CONEVISION"
			{
				*VALUE	= "True"
				*DISPLAYNAME = "Cone Vision?"
				*Comment = "True for forward cone sight."
				*Comment = "False for 360 degree sight."
			}

		
			*FLOAT = "SIGHTRADIUS"
			{
				*VALUE	= 20
				*MIN	= 0
				*DISPLAYNAME = "Sight Radius"
				*DISPLAYASDISC = "255,0,0"
				*Comment = "Distance the AI can see."
			}

			*FLOAT = "SXZAngle"
			{
				*VALUE	= 90
				*MIN	= 0
				*DISPLAYNAME = "Cone XZ Angle"
				*Comment = "XZ Angle for cone vision."
			}

			*FLOAT = "SYAngle"
			{
				*VALUE	= 45
				*MIN	= 0
				*DISPLAYNAME = "Cone Y Angle"
				*Comment = "Y Angle for cone vision."
			}

			*FLOAT = "SOUNDRADIUS"
			{
				*VALUE	= 30
				*MIN	= 0
				*DISPLAYNAME = "Sound Radius"
				*DISPLAYASDISC = "205,120,30"
				*Comment = "Distance the AI can hear."
			}

			*FLOAT = "LostContactResetTime"
			{
				*VALUE			= 5.0
				*DISPLAYNAME	= "Lost Contact Reset Time"
			}
		
		}

		*Group = "Attack"
		{
			*Comment = "Attacking parameters."
						
			*Group = "Close Range"
			{
				*Comment = "Close Range Attack"

				*INT = "CloseRangeChance"
				{
					*VALUE	= 25
					*MIN	= 0
					*DISPLAYNAME = "Chance"
					*Comment = "The chance the AI will select close range attack"
				}
				
				*FLOAT = "CloseRangeDist"
				{
					*VALUE	= 5
					*MIN	= 0
					*DISPLAYNAME = "Distance"
					*Comment = "The distance from target in close range attack"
				}
			}

			*Group = "Medium Range"
			{
				*Comment = "Medium Range Attack"

				*INT = "MediumRangeChance"
				{
					*VALUE	= 50
					*MIN	= 0
					*DISPLAYNAME = "Chance"
					*Comment = "The chance the AI will select medium range attack"
				}
				
				*FLOAT = "MediumRangeDist"
				{
					*VALUE	= 15
					*MIN	= 0
					*DISPLAYNAME = "Distance"
					*Comment = "The distance from target in medium range attack"
				}
			}

			*Group = "Long Range"
			{
				*Comment = "Long Range Attack"

				*INT = "LongRangeChance"
				{
					*VALUE	= 25
					*MIN	= 0
					*DISPLAYNAME = "Chance"
					*Comment = "The chance the AI will select long range attack"
				}
				
				*FLOAT = "LongRangeDist"
				{
					*VALUE	= 30
					*MIN	= 0
					*DISPLAYNAME = "Distance"
					*Comment = "The distance from target in long range attack"
				}
			}
			*FLOAT = "WarclubRangeDist"
			{
				*Value = 2.0
				*MIN = 0
				*DISPLAYNAME = "Warclub Attack Distance"
				*Comment = "Maximum distance from target that bot can be to attack with warclub"
			}

			*INT = "CrouchAttackChance"
			{
				*VALUE	= 0
				*MIN	= 0
				*DISPLAYNAME = "Crouch Attack Chance"
				*Comment = "The chance out of 100 the AI will crouch when attacking"
			}
		}
	}
}


;------------------------------------------------------------------------------
; Fall Death Region
;------------------------------------------------------------------------------
*OBJECT = "FallDeathRegion"
{
	*NAME			= "FallDeathRegion"
	*INHERITS		= "BoxRegion"
	*TYPE			= "OBJECT"
	*UseInActorEd	= "True"

}



;	+------------------------------------------------------------------+
;	|																   |
;	|				End of Turok4-specific section. 				   |
;	|																   |
;	+------------------------------------------------------------------+
